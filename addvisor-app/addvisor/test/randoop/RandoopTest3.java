package randoop;

import junit.framework.*;

public class RandoopTest3 extends TestCase {

  public static boolean debug = false;

  public void test1() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test1");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("User [id=null, name=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, email=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], password=767ca4906ff527b215592f830290ac13, phone=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], city=null\nnull\nnull]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test2() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test2");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.Country var3 = var0.getCountry();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    var4.setId((java.lang.Long)1L);
    var4.setName("null\nnull\nnull");
    var4.setUf("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    boolean var13 = var11.equals((java.lang.Object)(byte)100);
    var11.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    int var17 = var11.compareTo(var16);
    br.com.addvisor.model.Country var18 = var16.getCountry();
    int var19 = var4.compareTo(var16);
    var4.setId((java.lang.Long)0L);
    boolean var22 = var0.equals((java.lang.Object)0L);
    java.lang.String var23 = var0.getName();
    br.com.addvisor.model.Country var24 = var0.getCountry();
    java.lang.String var25 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test3() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test3");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    boolean var23 = var17.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    var17.setService(var24);
    br.com.addvisor.model.enums.ServiceCat var33 = var24.getCategory();
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    var34.setId((java.lang.Long)0L);
    var24.setAddress(var34);
    var0.setService(var24);
    br.com.addvisor.model.Country var39 = new br.com.addvisor.model.Country();
    java.lang.Integer var40 = var39.getId();
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    br.com.addvisor.model.Agenda var43 = new br.com.addvisor.model.Agenda();
    java.util.List var44 = var43.getNames();
    var41.setNames(var44);
    java.util.List var46 = var41.getNumbers();
    br.com.addvisor.model.Agenda var47 = new br.com.addvisor.model.Agenda();
    java.util.List var48 = var47.getNames();
    java.util.List var49 = var47.getNumbers();
    br.com.addvisor.model.Agenda var50 = new br.com.addvisor.model.Agenda();
    java.util.List var51 = var50.getNames();
    java.util.List var52 = var50.getNumbers();
    var47.setNames(var52);
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    java.util.List var56 = var54.getNumbers();
    br.com.addvisor.model.Agenda var57 = new br.com.addvisor.model.Agenda();
    java.util.List var58 = var57.getNames();
    java.util.List var59 = var57.getNumbers();
    var54.setNames(var59);
    var47.setNames(var59);
    var41.setNumbers(var59);
    var41.addContact("", "");
    br.com.addvisor.model.Agenda var66 = new br.com.addvisor.model.Agenda();
    java.util.List var67 = var66.getNames();
    br.com.addvisor.model.Agenda var68 = new br.com.addvisor.model.Agenda();
    java.util.List var69 = var68.getNames();
    var66.setNames(var69);
    java.util.List var71 = var66.getNumbers();
    var41.setNames(var71);
    boolean var73 = var39.equals((java.lang.Object)var41);
    var39.setName("null\nnull\nnull");
    boolean var76 = var24.equals((java.lang.Object)var39);
    var24.setTags("Evaluate [id=1, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=null, note=null, comment=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);

  }

  public void test4() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test4");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.Service var6 = var0.getService();
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    var9.setId((java.lang.Long)1L);
    var9.setName("null\nnull\nnull");
    var9.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var16 = var9.getUf();
    java.lang.String var17 = var9.getName();
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.String var19 = var18.getAcronym();
    boolean var20 = var9.equals((java.lang.Object)var18);
    java.lang.String var21 = var18.getAcronym();
    var18.setAcronym("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    boolean var24 = var0.equals((java.lang.Object)"User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    java.lang.Long var25 = var0.getId();
    var0.setNote((java.lang.Float)0.0f);
    br.com.addvisor.model.Service var28 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User();
    boolean var31 = var29.equals((java.lang.Object)(-1L));
    java.lang.String var32 = var29.toString();
    java.lang.String var33 = var29.getPassword();
    var28.setUser(var29);
    br.com.addvisor.model.Address var35 = var28.getAddress();
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address();
    java.lang.String var37 = var36.getComplement();
    java.lang.String var38 = var36.toString();
    br.com.addvisor.model.City var39 = var36.getCity();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    var40.setId((java.lang.Long)1L);
    var40.setName("null\nnull\nnull");
    var40.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var47 = var40.getUf();
    boolean var48 = var36.equals((java.lang.Object)var40);
    var28.setAddress(var36);
    br.com.addvisor.model.User var50 = var28.getUser();
    java.util.List var51 = var28.getPhones();
    var0.setService(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var17.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + 0L+ "'", var25.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var32.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null\nnull\nnull"+ "'", var38.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);

  }

  public void test5() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test5");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var3 = var0.getService();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var9 = var4.getService();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    java.lang.String var15 = var10.getPhone();
    var4.setUser(var10);
    br.com.addvisor.model.Service var17 = new br.com.addvisor.model.Service();
    java.lang.String var18 = var17.toString();
    var17.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var21 = var17.getAddress();
    var17.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getName();
    br.com.addvisor.model.Evaluate var27 = new br.com.addvisor.model.Evaluate(var10, var17, (java.lang.Float)1.0f, "");
    var0.setService(var17);
    java.util.List var29 = var17.getPhones();
    var17.setDescription("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]");
    br.com.addvisor.model.User var32 = var17.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var18.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);

  }

  public void test6() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test6");


    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    br.com.addvisor.model.City var9 = new br.com.addvisor.model.City();
    var9.setName("hi!");
    var9.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var14 = new br.com.addvisor.model.Address();
    java.lang.String var15 = var14.getComplement();
    java.lang.String var16 = var14.toString();
    boolean var17 = var9.equals((java.lang.Object)var16);
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var9);
    boolean var19 = var4.equals((java.lang.Object)"hi!");
    br.com.addvisor.model.State var20 = var4.getState();
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.toString();
    br.com.addvisor.model.City var23 = new br.com.addvisor.model.City();
    var23.setName("hi!");
    var23.setName("null\nnull\nnull");
    var21.setCity(var23);
    java.lang.String var29 = var23.getName();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    var33.setId((java.lang.Long)1L);
    var33.setName("null\nnull\nnull");
    var33.setUf("Country [id=null, name=null, acronym=null]");
    var33.setName("null - null");
    boolean var42 = var32.equals((java.lang.Object)var33);
    java.lang.String var43 = var33.toString();
    var23.setState(var33);
    int var45 = var4.compareTo(var23);
    br.com.addvisor.model.User var46 = new br.com.addvisor.model.User("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]", "Country [id=10, name=null, acronym=null]", var4);
    java.lang.String var47 = var4.getName();
    var4.setId((java.lang.Long)100L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null\nnull\nnull"+ "'", var22.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null\nnull\nnull"+ "'", var29.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "null - null - Country [id=null, name=null, acronym=null]"+ "'", var43.equals("null - null - Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);

  }

  public void test7() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test7");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getName();
    var0.setId((java.lang.Integer)100);
    var0.setName("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    java.lang.Float var9 = var8.getMedia();
    boolean var10 = var0.equals((java.lang.Object)var8);
    java.lang.Long var11 = var8.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test8() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test8");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    var2.setState(var9);
    var9.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    boolean var18 = var16.equals((java.lang.Object)(byte)100);
    var16.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var21 = new br.com.addvisor.model.State();
    int var22 = var16.compareTo(var21);
    var21.setName("");
    int var25 = var9.compareTo(var21);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    br.com.addvisor.model.State var29 = new br.com.addvisor.model.State();
    var29.setId((java.lang.Long)1L);
    var29.setName("null\nnull\nnull");
    var29.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var36 = var29.getUf();
    java.lang.String var37 = var29.getName();
    br.com.addvisor.model.Country var38 = new br.com.addvisor.model.Country();
    java.lang.String var39 = var38.getAcronym();
    boolean var40 = var29.equals((java.lang.Object)var38);
    var26.setCountry(var38);
    var21.setCountry(var38);
    br.com.addvisor.model.Address var43 = new br.com.addvisor.model.Address();
    var43.setId((java.lang.Long)0L);
    var43.setId((java.lang.Long)1L);
    boolean var48 = var38.equals((java.lang.Object)var43);
    java.lang.String var49 = var43.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);

  }

  public void test9() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test9");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var24.setName("null - null\nnull\nnull");
    br.com.addvisor.model.Address var44 = var24.getAddress();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);

  }

  public void test10() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test10");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    java.lang.String var39 = var35.getPassword();
    java.lang.String var40 = var35.getName();
    boolean var41 = var7.equals((java.lang.Object)var35);
    var35.setPassword("User [id=null, name=null, email=null, password=300fac9da4ec249ae6eb64ef8825ae47, phone=null - null - null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);

  }

  public void test11() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test11");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    var0.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.getComplement();
    java.lang.String var7 = var5.toString();
    boolean var8 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    var9.setId((java.lang.Long)1L);
    var9.setName("null\nnull\nnull");
    var9.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var16 = var9.getUf();
    var0.setState(var9);
    br.com.addvisor.model.State var18 = var0.getState();
    java.lang.String var19 = var18.getName();
    br.com.addvisor.model.Country var20 = var18.getCountry();
    var18.setUf(" -");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var19.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test12() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test12");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Long var50 = var16.getId();
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    boolean var53 = var51.equals((java.lang.Object)(-1L));
    boolean var55 = var51.equals((java.lang.Object)100.0d);
    var51.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.toString();
    var16.setUser(var51);
    br.com.addvisor.model.Service var60 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var61 = new br.com.addvisor.model.User();
    boolean var63 = var61.equals((java.lang.Object)(-1L));
    java.lang.String var64 = var61.toString();
    java.lang.String var65 = var61.getPassword();
    var60.setUser(var61);
    br.com.addvisor.model.Address var67 = var60.getAddress();
    br.com.addvisor.model.Evaluate var70 = new br.com.addvisor.model.Evaluate(var51, var60, (java.lang.Float)1.0f, "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    java.lang.String var71 = var51.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var64.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);

  }

  public void test13() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test13");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User();
    boolean var24 = var22.equals((java.lang.Object)(-1L));
    java.lang.String var25 = var22.toString();
    java.lang.String var26 = var22.getName();
    java.lang.String var27 = var22.getName();
    java.lang.String var28 = var22.getName();
    java.lang.String var29 = var22.getPassword();
    var0.setUser(var22);
    java.lang.String var31 = var0.getName();
    br.com.addvisor.model.Address var32 = var0.getAddress();
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    boolean var35 = var33.equals((java.lang.Object)(byte)100);
    var33.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var38 = new br.com.addvisor.model.State();
    int var39 = var33.compareTo(var38);
    java.lang.String var40 = var38.getName();
    var38.setId((java.lang.Long)10L);
    var38.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var45 = new br.com.addvisor.model.Address();
    java.lang.String var46 = var45.getComplement();
    java.lang.String var47 = var45.toString();
    br.com.addvisor.model.City var48 = var45.getCity();
    br.com.addvisor.model.State var49 = new br.com.addvisor.model.State();
    var49.setId((java.lang.Long)1L);
    var49.setName("null\nnull\nnull");
    var49.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var56 = var49.getUf();
    boolean var57 = var45.equals((java.lang.Object)var49);
    int var58 = var38.compareTo(var49);
    br.com.addvisor.model.State var59 = new br.com.addvisor.model.State();
    boolean var61 = var59.equals((java.lang.Object)(byte)100);
    var59.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var64 = new br.com.addvisor.model.State();
    int var65 = var59.compareTo(var64);
    java.lang.String var66 = var64.getName();
    var64.setId((java.lang.Long)10L);
    var64.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var71 = new br.com.addvisor.model.Country();
    java.lang.Integer var72 = var71.getId();
    java.lang.String var73 = var71.getName();
    var71.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var76 = var71.getAcronym();
    var71.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var64.setCountry(var71);
    int var80 = var49.compareTo(var64);
    boolean var81 = var0.equals((java.lang.Object)var64);
    var0.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var25.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "null\nnull\nnull"+ "'", var47.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var76.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);

  }

  public void test14() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test14");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    var0.setLocation("");
    java.lang.String var8 = var0.getLocation();
    java.lang.Long var9 = var0.getId();
    java.lang.String var10 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "\nnull\nhi!"+ "'", var10.equals("\nnull\nhi!"));

  }

  public void test15() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test15");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.util.List var8 = var0.getPhones();
    var0.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nhi!");
    br.com.addvisor.model.enums.ServiceCat var11 = var0.getCategory();
    var0.setDescription("Service [id=null, name=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test16() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test16");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getName();
    var0.setService(var7);
    java.lang.Float var17 = var0.getNote();
    br.com.addvisor.model.User var18 = var0.getUser();
    var0.setComment("null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test17() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test17");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setComment("");
    java.lang.String var3 = var0.toString();
    java.lang.Float var4 = var0.getNote();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "Evaluate [id=null, user=null, service=null, note=null, comment=]"+ "'", var3.equals("Evaluate [id=null, user=null, service=null, note=null, comment=]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test18() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test18");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.valueOf("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], city=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test19() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test19");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    var0.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var0.setAcronym("User [id=null, name=null, email=null, password=428e147830819130e93707f1ce3a3cdb, phone=null, city=null]");
    var0.setName("Country [id=100, name=null, acronym=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test20() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test20");


    br.com.addvisor.model.Address var2 = new br.com.addvisor.model.Address();
    java.lang.String var3 = var2.toString();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var2.setCity(var4);
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    var17.setId((java.lang.Long)1L);
    var17.setName("null\nnull\nnull");
    var17.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getUf();
    var8.setState(var17);
    int var26 = var4.compareTo(var8);
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address("Country [id=null, name=null\nnull\nnull, acronym=null]", "Evaluate [id=null, user=null, service=null, note=null, comment=]", var8);
    var27.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null\nnull\nnull"+ "'", var3.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == (-6));

  }

  public void test21() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test21");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    var0.addContact("User [id=null, name=null, email=null, password=null, phone=null, city=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    java.util.Map var10 = var0.getContacts();
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    var11.setId((java.lang.Long)10L);
    var11.setId((java.lang.Long)0L);
    var11.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    br.com.addvisor.model.Agenda var20 = new br.com.addvisor.model.Agenda();
    java.util.List var21 = var20.getNames();
    var18.setNames(var21);
    java.util.List var23 = var18.getNumbers();
    boolean var24 = var11.equals((java.lang.Object)var18);
    br.com.addvisor.model.Agenda var25 = new br.com.addvisor.model.Agenda();
    java.util.List var26 = var25.getNames();
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    var25.setNames(var28);
    java.util.List var30 = var25.getNumbers();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    java.util.List var33 = var31.getNumbers();
    br.com.addvisor.model.Agenda var34 = new br.com.addvisor.model.Agenda();
    java.util.List var35 = var34.getNames();
    java.util.List var36 = var34.getNumbers();
    var31.setNames(var36);
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    java.util.List var43 = var41.getNumbers();
    var38.setNames(var43);
    var31.setNames(var43);
    var25.setNumbers(var43);
    var25.addContact("", "");
    br.com.addvisor.model.Agenda var50 = new br.com.addvisor.model.Agenda();
    java.util.List var51 = var50.getNames();
    br.com.addvisor.model.Agenda var52 = new br.com.addvisor.model.Agenda();
    java.util.List var53 = var52.getNames();
    var50.setNames(var53);
    java.util.List var55 = var50.getNumbers();
    var25.setNames(var55);
    br.com.addvisor.model.Agenda var57 = new br.com.addvisor.model.Agenda();
    java.util.List var58 = var57.getNames();
    br.com.addvisor.model.Agenda var59 = new br.com.addvisor.model.Agenda();
    java.util.List var60 = var59.getNames();
    var57.setNames(var60);
    var25.setNames(var60);
    var18.setNumbers(var60);
    br.com.addvisor.model.Agenda var64 = new br.com.addvisor.model.Agenda();
    java.util.List var65 = var64.getNames();
    java.util.List var66 = var64.getNumbers();
    var64.addContact("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var70 = new br.com.addvisor.model.Evaluate();
    var70.setId((java.lang.Long)10L);
    var70.setId((java.lang.Long)0L);
    var70.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var77 = new br.com.addvisor.model.Agenda();
    java.util.List var78 = var77.getNames();
    br.com.addvisor.model.Agenda var79 = new br.com.addvisor.model.Agenda();
    java.util.List var80 = var79.getNames();
    var77.setNames(var80);
    java.util.List var82 = var77.getNumbers();
    boolean var83 = var70.equals((java.lang.Object)var77);
    java.util.List var84 = var77.getNumbers();
    var64.setNames(var84);
    br.com.addvisor.model.Agenda var86 = new br.com.addvisor.model.Agenda();
    java.util.Map var87 = var86.getContacts();
    var64.setContacts(var87);
    var18.setContacts(var87);
    var0.setContacts(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);

  }

  public void test22() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test22");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    java.lang.String var41 = var0.getEmail();
    br.com.addvisor.model.City var42 = var0.getCity();
    java.lang.String var43 = var0.getPhone();
    java.lang.Long var44 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);

  }

  public void test23() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test23");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getName();
    java.lang.Long var8 = var0.getId();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    java.lang.String var21 = var18.getName();
    var18.setId((java.lang.Integer)10);
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    var24.setId((java.lang.Long)10L);
    var24.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var29 = var24.getService();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var33 = var32.getId();
    var32.setId((java.lang.Long)(-1L));
    var32.setPhone("null\nnull\nnull");
    java.lang.String var38 = var32.getEmail();
    var32.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var24.setUser(var32);
    boolean var42 = var18.equals((java.lang.Object)var32);
    var18.setAcronym("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]");
    var0.setCountry(var18);
    var0.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + 1L+ "'", var8.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);

  }

  public void test24() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test24");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    java.lang.String var7 = var1.getPassword();
    java.lang.String var8 = var1.toString();
    var1.setPhone("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.City var11 = var1.getCity();
    var1.setPassword("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nService [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test25() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test25");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    java.lang.String var41 = var0.getEmail();
    java.lang.String var42 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);

  }

  public void test26() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test26");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    boolean var23 = var17.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    var17.setService(var24);
    br.com.addvisor.model.enums.ServiceCat var33 = var24.getCategory();
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    var34.setId((java.lang.Long)0L);
    var24.setAddress(var34);
    var0.setService(var24);
    br.com.addvisor.model.User var39 = new br.com.addvisor.model.User();
    boolean var41 = var39.equals((java.lang.Object)(-1L));
    java.lang.String var42 = var39.getDDD();
    var39.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var45 = var39.getCity();
    var0.setUser(var39);
    java.lang.String var47 = var0.toString();
    java.lang.String var48 = var0.getComment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=null, comment=null]"+ "'", var47.equals("Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=null, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);

  }

  public void test27() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test27");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    var2.setNames(var5);
    java.util.List var7 = var2.getNumbers();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    var2.setNumbers(var20);
    var2.addContact("", "");
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    var2.setNames(var32);
    boolean var34 = var0.equals((java.lang.Object)var2);
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.List var36 = var35.getNames();
    br.com.addvisor.model.Agenda var37 = new br.com.addvisor.model.Agenda();
    java.util.List var38 = var37.getNames();
    var35.setNames(var38);
    java.util.List var40 = var35.getNumbers();
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    java.util.List var43 = var41.getNumbers();
    br.com.addvisor.model.Agenda var44 = new br.com.addvisor.model.Agenda();
    java.util.List var45 = var44.getNames();
    java.util.List var46 = var44.getNumbers();
    var41.setNames(var46);
    br.com.addvisor.model.Agenda var48 = new br.com.addvisor.model.Agenda();
    java.util.List var49 = var48.getNames();
    java.util.List var50 = var48.getNumbers();
    br.com.addvisor.model.Agenda var51 = new br.com.addvisor.model.Agenda();
    java.util.List var52 = var51.getNames();
    java.util.List var53 = var51.getNumbers();
    var48.setNames(var53);
    var41.setNames(var53);
    var35.setNumbers(var53);
    var2.setNumbers(var53);
    var2.addContact("Country [id=null, name=null, acronym=null]", "null - null");
    java.util.Map var61 = var2.getContacts();
    var2.addContact("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]", "Evaluate [id=-1, user=User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var2.addContact("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]", "Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);

  }

  public void test28() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test28");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    java.lang.Float var7 = var0.getNote();
    var0.setId((java.lang.Long)(-1L));
    var0.setNote((java.lang.Float)10.0f);
    br.com.addvisor.model.User var12 = var0.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test29() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test29");


    br.com.addvisor.model.City var10 = new br.com.addvisor.model.City();
    var10.setName("hi!");
    var10.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    java.lang.String var16 = var15.getComplement();
    java.lang.String var17 = var15.toString();
    boolean var18 = var10.equals((java.lang.Object)var17);
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var10);
    br.com.addvisor.model.Address var20 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var10);
    var10.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var23 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var10);
    java.lang.String var24 = var23.getPassword();
    br.com.addvisor.model.Evaluate var25 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    boolean var28 = var26.equals((java.lang.Object)(byte)100);
    var26.setUf("null\nnull\nnull");
    boolean var31 = var25.equals((java.lang.Object)var26);
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    boolean var35 = var33.equals((java.lang.Object)(-1L));
    java.lang.String var36 = var33.toString();
    java.lang.String var37 = var33.getPassword();
    var32.setUser(var33);
    br.com.addvisor.model.Address var39 = var32.getAddress();
    java.lang.String var40 = var32.getDescription();
    boolean var41 = var25.equals((java.lang.Object)var32);
    java.lang.String var42 = var32.getTags();
    br.com.addvisor.model.Evaluate var45 = new br.com.addvisor.model.Evaluate(var23, var32, (java.lang.Float)10.0f, "Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]");
    br.com.addvisor.model.User var46 = var32.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null\nnull\nnull"+ "'", var17.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "4238a597ad0f3ff8363f52f6e8c3507"+ "'", var24.equals("4238a597ad0f3ff8363f52f6e8c3507"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test30() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test30");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var33 = new br.com.addvisor.model.Service();
    java.lang.String var34 = var33.toString();
    var0.setService(var33);
    br.com.addvisor.model.Service var36 = var0.getService();
    var36.setName("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nService [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var34.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test31() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test31");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("null - null", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var2.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var7 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var7);
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    var7.setState(var14);
    var14.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var21 = new br.com.addvisor.model.State();
    boolean var23 = var21.equals((java.lang.Object)(byte)100);
    var21.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    int var27 = var21.compareTo(var26);
    var26.setName("");
    int var30 = var14.compareTo(var26);
    br.com.addvisor.model.City var31 = new br.com.addvisor.model.City();
    var31.setName("hi!");
    var31.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address();
    java.lang.String var37 = var36.getComplement();
    java.lang.String var38 = var36.toString();
    boolean var39 = var31.equals((java.lang.Object)var38);
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var41 = new br.com.addvisor.model.State();
    var41.setId((java.lang.Long)1L);
    var41.setName("null\nnull\nnull");
    var41.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var48 = var41.getUf();
    boolean var49 = var40.equals((java.lang.Object)var41);
    var31.setState(var41);
    br.com.addvisor.model.Country var51 = new br.com.addvisor.model.Country();
    java.lang.Integer var52 = var51.getId();
    br.com.addvisor.model.Agenda var53 = new br.com.addvisor.model.Agenda();
    java.util.List var54 = var53.getNames();
    br.com.addvisor.model.Agenda var55 = new br.com.addvisor.model.Agenda();
    java.util.List var56 = var55.getNames();
    var53.setNames(var56);
    java.util.List var58 = var53.getNumbers();
    br.com.addvisor.model.Agenda var59 = new br.com.addvisor.model.Agenda();
    java.util.List var60 = var59.getNames();
    java.util.List var61 = var59.getNumbers();
    br.com.addvisor.model.Agenda var62 = new br.com.addvisor.model.Agenda();
    java.util.List var63 = var62.getNames();
    java.util.List var64 = var62.getNumbers();
    var59.setNames(var64);
    br.com.addvisor.model.Agenda var66 = new br.com.addvisor.model.Agenda();
    java.util.List var67 = var66.getNames();
    java.util.List var68 = var66.getNumbers();
    br.com.addvisor.model.Agenda var69 = new br.com.addvisor.model.Agenda();
    java.util.List var70 = var69.getNames();
    java.util.List var71 = var69.getNumbers();
    var66.setNames(var71);
    var59.setNames(var71);
    var53.setNumbers(var71);
    var53.addContact("", "");
    br.com.addvisor.model.Agenda var78 = new br.com.addvisor.model.Agenda();
    java.util.List var79 = var78.getNames();
    br.com.addvisor.model.Agenda var80 = new br.com.addvisor.model.Agenda();
    java.util.List var81 = var80.getNames();
    var78.setNames(var81);
    java.util.List var83 = var78.getNumbers();
    var53.setNames(var83);
    boolean var85 = var51.equals((java.lang.Object)var53);
    var51.setName("null\nnull\nnull");
    var41.setCountry(var51);
    br.com.addvisor.model.Country var89 = var41.getCountry();
    var26.setCountry(var89);
    boolean var91 = var2.equals((java.lang.Object)var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null\nnull\nnull"+ "'", var38.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test32() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test32");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.City var7 = new br.com.addvisor.model.City();
    var7.setName("hi!");
    var7.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getComplement();
    java.lang.String var14 = var12.toString();
    boolean var15 = var7.equals((java.lang.Object)var14);
    br.com.addvisor.model.User var16 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var7);
    boolean var17 = var2.equals((java.lang.Object)"hi!");
    br.com.addvisor.model.State var18 = var2.getState();
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.toString();
    br.com.addvisor.model.City var21 = new br.com.addvisor.model.City();
    var21.setName("hi!");
    var21.setName("null\nnull\nnull");
    var19.setCity(var21);
    java.lang.String var27 = var21.getName();
    br.com.addvisor.model.User var30 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var31 = new br.com.addvisor.model.State();
    var31.setId((java.lang.Long)1L);
    var31.setName("null\nnull\nnull");
    var31.setUf("Country [id=null, name=null, acronym=null]");
    var31.setName("null - null");
    boolean var40 = var30.equals((java.lang.Object)var31);
    java.lang.String var41 = var31.toString();
    var21.setState(var31);
    int var43 = var2.compareTo(var21);
    br.com.addvisor.model.Address var44 = new br.com.addvisor.model.Address("User [id=null, name=null, email=null, password=null, phone=null, city=User [id=null, name=null, email=null, password=null, phone=null, city=null] - null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    var2.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null\nnull\nnull"+ "'", var20.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "null - null - Country [id=null, name=null, acronym=null]"+ "'", var41.equals("null - null - Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 0);

  }

  public void test33() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test33");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var0.compareTo(var9);
    var9.setName("Evaluate [id=0, user=null, service=null, note=100.0, comment=null]");
    java.lang.String var13 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "Evaluate [id=0, user=null, service=null, note=100.0, comment=null] - null"+ "'", var13.equals("Evaluate [id=0, user=null, service=null, note=100.0, comment=null] - null"));

  }

  public void test34() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test34");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var3 = var2.getId();
    java.lang.String var4 = var2.toString();
    var2.setEmail("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var2.setEmail("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]");
    var2.setEmail("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]"));

  }

  public void test35() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test35");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getAcronym();
    java.lang.String var4 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var4.equals("Country [id=null, name=null, acronym=null]"));

  }

  public void test36() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test36");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.Country var3 = var0.getCountry();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    var4.setId((java.lang.Long)1L);
    var4.setName("null\nnull\nnull");
    var4.setUf("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    boolean var13 = var11.equals((java.lang.Object)(byte)100);
    var11.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    int var17 = var11.compareTo(var16);
    br.com.addvisor.model.Country var18 = var16.getCountry();
    int var19 = var4.compareTo(var16);
    var4.setId((java.lang.Long)0L);
    boolean var22 = var0.equals((java.lang.Object)0L);
    br.com.addvisor.model.Service var23 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var24 = new br.com.addvisor.model.User();
    boolean var26 = var24.equals((java.lang.Object)(-1L));
    java.lang.String var27 = var24.toString();
    java.lang.String var28 = var24.getPassword();
    var23.setUser(var24);
    br.com.addvisor.model.Address var30 = var23.getAddress();
    br.com.addvisor.model.enums.ServiceCat var31 = var23.getCategory();
    br.com.addvisor.model.Agenda var32 = new br.com.addvisor.model.Agenda();
    java.util.List var33 = var32.getNames();
    br.com.addvisor.model.Agenda var34 = new br.com.addvisor.model.Agenda();
    java.util.List var35 = var34.getNames();
    var32.setNames(var35);
    java.util.List var37 = var32.getNumbers();
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    java.util.List var43 = var41.getNumbers();
    var38.setNames(var43);
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    java.util.List var47 = var45.getNumbers();
    br.com.addvisor.model.Agenda var48 = new br.com.addvisor.model.Agenda();
    java.util.List var49 = var48.getNames();
    java.util.List var50 = var48.getNumbers();
    var45.setNames(var50);
    var38.setNames(var50);
    var32.setNumbers(var50);
    var23.setPhones(var50);
    java.lang.String var55 = var23.getDescription();
    br.com.addvisor.model.enums.ServiceCat var56 = var23.getCategory();
    java.lang.String var57 = var23.toString();
    boolean var58 = var0.equals((java.lang.Object)var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var27.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"+ "'", var57.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);

  }

  public void test37() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test37");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.toString();
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var4.setCity(var6);
    var6.setId((java.lang.Long)10L);
    java.lang.String var12 = var6.getName();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]", " - ", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]", var6);
    java.lang.String var14 = var6.toString();
    java.lang.String var15 = var6.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null\nnull\nnull"+ "'", var5.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "hi!"+ "'", var14.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "hi!"+ "'", var15.equals("hi!"));

  }

  public void test38() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test38");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.String var6 = var0.getComment();
    java.lang.String var7 = var0.getComment();
    br.com.addvisor.model.Evaluate var8 = new br.com.addvisor.model.Evaluate();
    var8.setId((java.lang.Long)10L);
    var8.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var13 = var8.getUser();
    var8.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    java.lang.String var17 = var16.getName();
    var8.setService(var16);
    var0.setService(var16);
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User("", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var22.setPhone("null - null");
    var22.setEmail("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.Long var27 = var22.getId();
    var16.setUser(var22);
    var22.setPhone("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test39() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test39");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test40() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test40");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    java.lang.String var4 = var3.getComplement();
    java.lang.String var5 = var3.getComplement();
    br.com.addvisor.model.City var6 = var3.getCity();
    br.com.addvisor.model.City var7 = var3.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var4.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var5.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test41() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test41");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    java.lang.String var9 = var0.getDescription();
    br.com.addvisor.model.Address var10 = new br.com.addvisor.model.Address();
    java.lang.String var11 = var10.toString();
    br.com.addvisor.model.City var12 = new br.com.addvisor.model.City();
    var12.setName("hi!");
    var10.setCity(var12);
    var10.setLocation("");
    java.lang.String var18 = var10.getLocation();
    var0.setAddress(var10);
    java.lang.Long var20 = var0.getId();
    java.lang.String var21 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=\nnull\nhi!, category=null, phones=null]"+ "'", var21.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=\nnull\nhi!, category=null, phones=null]"));

  }

  public void test42() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test42");


    br.com.addvisor.model.Evaluate var2 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    boolean var5 = var3.equals((java.lang.Object)(byte)100);
    var3.setUf("null\nnull\nnull");
    boolean var8 = var2.equals((java.lang.Object)var3);
    br.com.addvisor.model.Service var9 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    var9.setUser(var10);
    br.com.addvisor.model.Address var16 = var9.getAddress();
    var2.setService(var9);
    br.com.addvisor.model.enums.ServiceCat var18 = var9.getCategory();
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    var19.setId((java.lang.Long)0L);
    var9.setAddress(var19);
    java.lang.String var23 = var19.getLocation();
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.toString();
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    var26.setName("hi!");
    var24.setCity(var26);
    var26.setId((java.lang.Long)10L);
    java.lang.String var32 = var26.getName();
    var19.setCity(var26);
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull", var26);
    java.lang.String var35 = var34.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null\nnull\nnull"+ "'", var25.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]\nUser [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull\nhi!"+ "'", var35.equals("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]\nUser [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull\nhi!"));

  }

  public void test43() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test43");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    java.lang.Long var3 = var0.getId();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    java.lang.Integer var14 = var13.getId();
    var9.setCountry(var13);
    br.com.addvisor.model.Country var16 = new br.com.addvisor.model.Country();
    java.lang.Integer var17 = var16.getId();
    java.lang.String var18 = var16.getName();
    var9.setCountry(var16);
    int var20 = var0.compareTo(var9);
    var9.setUf("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    var9.setName("Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]");
    var9.setUf("Evaluate [id=10, user=null, service=null, note=null, comment=null]");
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    boolean var36 = var27.equals((java.lang.Object)var28);
    br.com.addvisor.model.Service var37 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var38 = new br.com.addvisor.model.User();
    boolean var40 = var38.equals((java.lang.Object)(-1L));
    java.lang.String var41 = var38.toString();
    java.lang.String var42 = var38.getPassword();
    var37.setUser(var38);
    br.com.addvisor.model.Address var44 = var37.getAddress();
    java.lang.String var45 = var37.getName();
    br.com.addvisor.model.City var46 = new br.com.addvisor.model.City();
    var46.setName("hi!");
    var46.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var51 = new br.com.addvisor.model.Address();
    java.lang.String var52 = var51.getComplement();
    java.lang.String var53 = var51.toString();
    boolean var54 = var46.equals((java.lang.Object)var53);
    br.com.addvisor.model.State var55 = new br.com.addvisor.model.State();
    var55.setId((java.lang.Long)1L);
    var55.setName("null\nnull\nnull");
    var55.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var62 = var55.getUf();
    var46.setState(var55);
    boolean var64 = var37.equals((java.lang.Object)var46);
    br.com.addvisor.model.Evaluate var67 = new br.com.addvisor.model.Evaluate(var27, var37, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var68 = new br.com.addvisor.model.User();
    boolean var70 = var68.equals((java.lang.Object)(-1L));
    java.lang.String var71 = var68.getDDD();
    var68.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var74 = new br.com.addvisor.model.Address();
    java.lang.String var75 = var74.toString();
    br.com.addvisor.model.City var76 = new br.com.addvisor.model.City();
    var76.setName("hi!");
    var76.setName("null\nnull\nnull");
    var74.setCity(var76);
    var68.setCity(var76);
    var67.setUser(var68);
    var67.setComment("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    boolean var86 = var9.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var41.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "null\nnull\nnull"+ "'", var53.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "null\nnull\nnull"+ "'", var75.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);

  }

  public void test44() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test44");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var3 = var2.getState();
    java.lang.Long var4 = var2.getId();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var2);
    br.com.addvisor.model.City var6 = var5.getCity();
    var5.setLocation("Service [id=1, name=null, description=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test45() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test45");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    java.lang.Float var1 = var0.getMedia();
    java.lang.Float var2 = var0.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test46() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test46");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test47() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test47");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var9 = var8.getId();
    var8.setId((java.lang.Long)(-1L));
    var8.setPhone("null\nnull\nnull");
    java.lang.String var14 = var8.getEmail();
    var8.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var0.setUser(var8);
    var8.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    br.com.addvisor.model.City var20 = var8.getCity();
    br.com.addvisor.model.City var21 = var8.getCity();
    var8.setId((java.lang.Long)1L);
    var8.setPhone("User [id=1, name=null, email=null, password=6a526e9ea8abcc547d30e98aac13c6cc, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]");
    java.lang.Long var26 = var8.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + 1L+ "'", var26.equals(1L));

  }

  public void test48() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test48");


    br.com.addvisor.model.City var10 = new br.com.addvisor.model.City();
    var10.setName("hi!");
    var10.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    java.lang.String var16 = var15.getComplement();
    java.lang.String var17 = var15.toString();
    boolean var18 = var10.equals((java.lang.Object)var17);
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var10);
    br.com.addvisor.model.Address var20 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var10);
    java.lang.Long var21 = var10.getId();
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull", "Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var10);
    br.com.addvisor.model.Evaluate var23 = new br.com.addvisor.model.Evaluate();
    var23.setId((java.lang.Long)10L);
    var23.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var28 = var23.getService();
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var32 = var31.getId();
    var31.setId((java.lang.Long)(-1L));
    var31.setPhone("null\nnull\nnull");
    java.lang.String var37 = var31.getEmail();
    var31.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var23.setUser(var31);
    br.com.addvisor.model.Address var41 = new br.com.addvisor.model.Address();
    java.lang.String var42 = var41.toString();
    br.com.addvisor.model.City var43 = new br.com.addvisor.model.City();
    var43.setName("hi!");
    var43.setName("null\nnull\nnull");
    var41.setCity(var43);
    java.lang.String var49 = var43.getName();
    br.com.addvisor.model.State var50 = var43.getState();
    var31.setCity(var43);
    java.lang.String var52 = var43.toString();
    int var53 = var10.compareTo(var43);
    java.lang.String var54 = var10.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null\nnull\nnull"+ "'", var17.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "null\nnull\nnull"+ "'", var42.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "null\nnull\nnull"+ "'", var49.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "null\nnull\nnull"+ "'", var52.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "null\nnull\nnull"+ "'", var54.equals("null\nnull\nnull"));

  }

  public void test49() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test49");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.Integer var3 = var0.getId();
    var0.setName("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    java.lang.String var6 = var0.getAcronym();
    br.com.addvisor.model.Evaluate var7 = new br.com.addvisor.model.Evaluate();
    var7.setId((java.lang.Long)10L);
    var7.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var12 = var7.getUser();
    var7.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var15 = new br.com.addvisor.model.Service();
    java.lang.String var16 = var15.getName();
    var7.setService(var15);
    boolean var18 = var0.equals((java.lang.Object)var15);
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.User var28 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var29 = new br.com.addvisor.model.State();
    var29.setId((java.lang.Long)1L);
    var29.setName("null\nnull\nnull");
    var29.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var36 = var29.getUf();
    boolean var37 = var28.equals((java.lang.Object)var29);
    var19.setState(var29);
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    var39.setId((java.lang.Long)10L);
    var39.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var44 = var39.getUser();
    boolean var45 = var19.equals((java.lang.Object)var39);
    br.com.addvisor.model.State var46 = new br.com.addvisor.model.State();
    boolean var48 = var46.equals((java.lang.Object)(byte)100);
    var46.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var51 = new br.com.addvisor.model.State();
    int var52 = var46.compareTo(var51);
    java.lang.String var53 = var51.getName();
    var19.setState(var51);
    br.com.addvisor.model.State var55 = new br.com.addvisor.model.State();
    boolean var57 = var55.equals((java.lang.Object)(byte)100);
    var55.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var60 = new br.com.addvisor.model.State();
    int var61 = var55.compareTo(var60);
    var60.setName("");
    br.com.addvisor.model.Country var64 = new br.com.addvisor.model.Country();
    java.lang.Integer var65 = var64.getId();
    var60.setCountry(var64);
    java.lang.String var67 = var64.getName();
    var51.setCountry(var64);
    java.lang.Integer var69 = var64.getId();
    java.lang.Integer var70 = var64.getId();
    java.lang.String var71 = var64.toString();
    br.com.addvisor.model.User var72 = new br.com.addvisor.model.User();
    boolean var74 = var72.equals((java.lang.Object)(-1L));
    boolean var76 = var72.equals((java.lang.Object)100.0d);
    boolean var77 = var64.equals((java.lang.Object)var72);
    boolean var78 = var0.equals((java.lang.Object)var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var71.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);

  }

  public void test50() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test50");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    var0.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));

  }

  public void test51() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test51");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var24.setMedia((java.lang.Float)100.0f);
    java.lang.Long var44 = var24.getId();
    br.com.addvisor.model.enums.ServiceCat var45 = var24.getCategory();
    var24.setName("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]");
    br.com.addvisor.model.enums.ServiceCat var48 = var24.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);

  }

  public void test52() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test52");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getName();
    var0.setEmail("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=[]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test53() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test53");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    var40.setComment("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.User var43 = new br.com.addvisor.model.User();
    boolean var45 = var43.equals((java.lang.Object)(-1L));
    java.lang.String var46 = var43.toString();
    java.lang.String var47 = var43.getPassword();
    java.lang.String var48 = var43.getPassword();
    java.lang.String var49 = var43.getEmail();
    var40.setUser(var43);
    java.lang.String var51 = var43.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var46.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);

  }

  public void test54() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test54");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    java.lang.String var11 = var6.getPhone();
    var0.setUser(var6);
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    java.lang.String var14 = var13.toString();
    var13.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var17 = var13.getAddress();
    var13.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var20 = var13.getName();
    br.com.addvisor.model.Evaluate var23 = new br.com.addvisor.model.Evaluate(var6, var13, (java.lang.Float)1.0f, "");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.toString();
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    var26.setName("hi!");
    var24.setCity(var26);
    br.com.addvisor.model.City var30 = new br.com.addvisor.model.City();
    var30.setName("hi!");
    var30.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address();
    java.lang.String var36 = var35.getComplement();
    java.lang.String var37 = var35.toString();
    boolean var38 = var30.equals((java.lang.Object)var37);
    br.com.addvisor.model.State var39 = new br.com.addvisor.model.State();
    var39.setId((java.lang.Long)1L);
    var39.setName("null\nnull\nnull");
    var39.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var46 = var39.getUf();
    var30.setState(var39);
    int var48 = var26.compareTo(var30);
    java.lang.Long var49 = var26.getId();
    br.com.addvisor.model.Service var50 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    boolean var53 = var51.equals((java.lang.Object)(-1L));
    java.lang.String var54 = var51.toString();
    java.lang.String var55 = var51.getPassword();
    var50.setUser(var51);
    boolean var57 = var26.equals((java.lang.Object)var51);
    var6.setCity(var26);
    boolean var60 = var26.equals((java.lang.Object)"null - null");
    br.com.addvisor.model.State var61 = new br.com.addvisor.model.State();
    boolean var63 = var61.equals((java.lang.Object)(byte)100);
    var61.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var66 = new br.com.addvisor.model.State();
    int var67 = var61.compareTo(var66);
    java.lang.String var68 = var66.getName();
    var66.setId((java.lang.Long)10L);
    var26.setState(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var14.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null\nnull\nnull"+ "'", var25.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "null\nnull\nnull"+ "'", var37.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var54.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);

  }

  public void test55() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test55");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.City var9 = new br.com.addvisor.model.City();
    var9.setName("hi!");
    var9.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var14 = new br.com.addvisor.model.Address();
    java.lang.String var15 = var14.getComplement();
    java.lang.String var16 = var14.toString();
    boolean var17 = var9.equals((java.lang.Object)var16);
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    var18.setId((java.lang.Long)1L);
    var18.setName("null\nnull\nnull");
    var18.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var25 = var18.getUf();
    var9.setState(var18);
    boolean var27 = var0.equals((java.lang.Object)var9);
    java.lang.String var28 = var9.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null\nnull\nnull"+ "'", var28.equals("null\nnull\nnull"));

  }

  public void test56() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test56");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    java.lang.Float var6 = var0.getNote();
    var0.setNote((java.lang.Float)100.0f);
    java.lang.Long var9 = var0.getId();
    br.com.addvisor.model.User var10 = var0.getUser();
    br.com.addvisor.model.User var11 = var0.getUser();
    java.lang.Float var12 = var0.getNote();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + 0L+ "'", var9.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + 100.0f+ "'", var12.equals(100.0f));

  }

  public void test57() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test57");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    java.lang.Float var1 = var0.getMedia();
    br.com.addvisor.model.Evaluate var2 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    boolean var5 = var3.equals((java.lang.Object)(byte)100);
    var3.setUf("null\nnull\nnull");
    boolean var8 = var2.equals((java.lang.Object)var3);
    br.com.addvisor.model.Service var9 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    var9.setUser(var10);
    br.com.addvisor.model.Address var16 = var9.getAddress();
    var2.setService(var9);
    br.com.addvisor.model.enums.ServiceCat var18 = var9.getCategory();
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    var19.setId((java.lang.Long)0L);
    var9.setAddress(var19);
    java.lang.String var23 = var19.getLocation();
    java.lang.Long var24 = var19.getId();
    java.lang.String var25 = var19.getLocation();
    var0.setAddress(var19);
    java.lang.Float var27 = var0.getMedia();
    var0.setTags("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Evaluate [id=0, user=null, service=null, note=null, comment=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + 0L+ "'", var24.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test58() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test58");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("null - null", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var2.setId((java.lang.Long)0L);
    java.lang.String var5 = var2.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test59() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test59");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    boolean var10 = var2.equals((java.lang.Object)var9);
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", var2);
    java.lang.String var12 = var2.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null\nnull\nnull"+ "'", var12.equals("null\nnull\nnull"));

  }

  public void test60() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test60");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    var14.setCountry(var21);
    int var23 = var0.compareTo(var14);
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    boolean var30 = var28.equals((java.lang.Object)(byte)100);
    var28.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    int var34 = var28.compareTo(var33);
    var33.setName("");
    var26.setState(var33);
    var33.setName("null\nnull\nnull");
    int var40 = var14.compareTo(var33);
    br.com.addvisor.model.City var43 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var44 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var43);
    br.com.addvisor.model.State var45 = new br.com.addvisor.model.State();
    boolean var47 = var45.equals((java.lang.Object)(byte)100);
    var45.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var50 = new br.com.addvisor.model.State();
    int var51 = var45.compareTo(var50);
    var50.setName("");
    var43.setState(var50);
    int var55 = var14.compareTo(var50);
    br.com.addvisor.model.State var56 = new br.com.addvisor.model.State();
    var56.setId((java.lang.Long)1L);
    var56.setName("null\nnull\nnull");
    var56.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var63 = var56.getUf();
    java.lang.String var64 = var56.getName();
    br.com.addvisor.model.Country var65 = new br.com.addvisor.model.Country();
    java.lang.String var66 = var65.getAcronym();
    boolean var67 = var56.equals((java.lang.Object)var65);
    java.lang.String var68 = var65.getAcronym();
    var65.setAcronym("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var65.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var50.setCountry(var65);
    var50.setName("User [id=null, name=null, email=null, password=428e147830819130e93707f1ce3a3cdb, phone=null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var64.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);

  }

  public void test61() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test61");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    var24.setName("");
    var24.setName("null\nhi!\nnull\nnull\nnull");
    var24.setTags("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    java.util.List var41 = var24.getPhones();
    java.util.List var42 = var24.getPhones();
    br.com.addvisor.model.enums.ServiceCat var43 = var24.getCategory();
    var24.setMedia((java.lang.Float)100.0f);
    br.com.addvisor.model.User var46 = var24.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test62() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test62");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.Country var3 = var0.getCountry();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    var4.setId((java.lang.Long)1L);
    var4.setName("null\nnull\nnull");
    var4.setUf("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    boolean var13 = var11.equals((java.lang.Object)(byte)100);
    var11.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    int var17 = var11.compareTo(var16);
    br.com.addvisor.model.Country var18 = var16.getCountry();
    int var19 = var4.compareTo(var16);
    var4.setId((java.lang.Long)0L);
    boolean var22 = var0.equals((java.lang.Object)0L);
    java.lang.String var23 = var0.getName();
    var0.setName("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]");
    java.lang.String var26 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]"+ "'", var26.equals("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]"));

  }

  public void test63() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test63");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("null - null", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var3 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    java.lang.String var7 = var4.toString();
    java.lang.String var8 = var4.getPassword();
    var3.setUser(var4);
    br.com.addvisor.model.Address var10 = var3.getAddress();
    java.lang.String var11 = var3.getTags();
    var3.setId((java.lang.Long)1L);
    br.com.addvisor.model.Evaluate var16 = new br.com.addvisor.model.Evaluate(var2, var3, (java.lang.Float)(-1.0f), "\nnull\nhi!");
    br.com.addvisor.model.Address var17 = var3.getAddress();
    var3.setDescription("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull");
    var3.setDescription("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.Long var22 = var3.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + 1L+ "'", var22.equals(1L));

  }

  public void test64() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test64");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var0.setUser(var9);
    br.com.addvisor.model.Service var15 = var0.getService();
    var15.setName("21c96d96756cfeed7f71110d9cb1788b");
    java.lang.String var18 = var15.getTags();
    var15.setTags("Service [id=null, name=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test65() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test65");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    br.com.addvisor.model.Agenda var7 = new br.com.addvisor.model.Agenda();
    java.util.List var8 = var7.getNames();
    java.util.List var9 = var7.getNumbers();
    br.com.addvisor.model.Agenda var10 = new br.com.addvisor.model.Agenda();
    java.util.List var11 = var10.getNames();
    java.util.List var12 = var10.getNumbers();
    var7.setNames(var12);
    var0.setNames(var12);
    java.util.Map var15 = var0.getContacts();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.Map var17 = var16.getContacts();
    var0.setContacts(var17);
    var0.addContact("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test66() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test66");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = var0.getService();
    br.com.addvisor.model.User var7 = var0.getUser();
    br.com.addvisor.model.Service var8 = var0.getService();
    var0.setId((java.lang.Long)(-1L));
    java.lang.String var11 = var0.getComment();
    br.com.addvisor.model.Agenda var12 = new br.com.addvisor.model.Agenda();
    java.util.List var13 = var12.getNames();
    java.util.List var14 = var12.getNumbers();
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    var12.setNames(var17);
    br.com.addvisor.model.Agenda var19 = new br.com.addvisor.model.Agenda();
    java.util.List var20 = var19.getNames();
    java.util.List var21 = var19.getNumbers();
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    java.util.List var24 = var22.getNumbers();
    var19.setNames(var24);
    var12.setNames(var24);
    java.util.Map var27 = var12.getContacts();
    java.util.List var28 = var12.getNames();
    boolean var29 = var0.equals((java.lang.Object)var12);
    br.com.addvisor.model.Evaluate var30 = new br.com.addvisor.model.Evaluate();
    var30.setId((java.lang.Long)10L);
    var30.setId((java.lang.Long)0L);
    var30.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var37 = new br.com.addvisor.model.Agenda();
    java.util.List var38 = var37.getNames();
    br.com.addvisor.model.Agenda var39 = new br.com.addvisor.model.Agenda();
    java.util.List var40 = var39.getNames();
    var37.setNames(var40);
    java.util.List var42 = var37.getNumbers();
    boolean var43 = var30.equals((java.lang.Object)var37);
    java.util.List var44 = var37.getNumbers();
    var12.setNames(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);

  }

  public void test67() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test67");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    java.lang.String var1 = var0.toString();
    var0.setTags("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.Long var4 = var0.getId();
    var0.setMedia((java.lang.Float)(-1.0f));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var1.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test68() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test68");


    br.com.addvisor.model.Address var2 = new br.com.addvisor.model.Address();
    java.lang.String var3 = var2.toString();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var4.setName("null\nnull\nnull");
    var2.setCity(var4);
    java.lang.Long var10 = var4.getId();
    java.lang.String var11 = var4.getName();
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=Country [id=null, name=null, acronym=null]]", "User [id=0, name=null, email=null, password=null, phone=null, city=null]", var4);
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    var13.setId((java.lang.Integer)100);
    java.lang.String var16 = var13.getAcronym();
    java.lang.Integer var17 = var13.getId();
    boolean var18 = var4.equals((java.lang.Object)var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null\nnull\nnull"+ "'", var3.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + 100+ "'", var17.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);

  }

  public void test69() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test69");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    boolean var10 = var2.equals((java.lang.Object)var9);
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var11.equals((java.lang.Object)var12);
    var2.setState(var12);
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var2);
    br.com.addvisor.model.City var23 = var22.getCity();
    br.com.addvisor.model.State var24 = new br.com.addvisor.model.State();
    boolean var26 = var24.equals((java.lang.Object)(byte)100);
    var24.setUf("null\nnull\nnull");
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    var29.setNames(var32);
    java.util.List var34 = var29.getNumbers();
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.List var36 = var35.getNames();
    java.util.List var37 = var35.getNumbers();
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    var35.setNames(var40);
    br.com.addvisor.model.Agenda var42 = new br.com.addvisor.model.Agenda();
    java.util.List var43 = var42.getNames();
    java.util.List var44 = var42.getNumbers();
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    java.util.List var47 = var45.getNumbers();
    var42.setNames(var47);
    var35.setNames(var47);
    var29.setNumbers(var47);
    var29.addContact("", "");
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    br.com.addvisor.model.Agenda var56 = new br.com.addvisor.model.Agenda();
    java.util.List var57 = var56.getNames();
    var54.setNames(var57);
    java.util.List var59 = var54.getNumbers();
    var29.setNames(var59);
    boolean var61 = var24.equals((java.lang.Object)var29);
    java.lang.String var62 = var24.toString();
    var23.setState(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "null - null\nnull\nnull"+ "'", var62.equals("null - null\nnull\nnull"));

  }

  public void test70() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test70");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("User [id=100, name=null, email=null, password=null, phone=null, city=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test71() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test71");


    br.com.addvisor.model.Address var2 = new br.com.addvisor.model.Address();
    java.lang.String var3 = var2.toString();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var2.setCity(var4);
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address("User [id=null, name=null, email=null, password=6a526e9ea8abcc547d30e98aac13c6cc, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]", "null - null - Country [id=null, name=null, acronym=null]", var4);
    br.com.addvisor.model.City var9 = new br.com.addvisor.model.City();
    var9.setName("hi!");
    var9.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var14 = new br.com.addvisor.model.Address();
    java.lang.String var15 = var14.getComplement();
    java.lang.String var16 = var14.toString();
    boolean var17 = var9.equals((java.lang.Object)var16);
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var19 = new br.com.addvisor.model.State();
    var19.setId((java.lang.Long)1L);
    var19.setName("null\nnull\nnull");
    var19.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var26 = var19.getUf();
    boolean var27 = var18.equals((java.lang.Object)var19);
    var9.setState(var19);
    br.com.addvisor.model.Evaluate var29 = new br.com.addvisor.model.Evaluate();
    var29.setId((java.lang.Long)10L);
    var29.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var34 = var29.getUser();
    boolean var35 = var9.equals((java.lang.Object)var29);
    boolean var36 = var8.equals((java.lang.Object)var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null\nnull\nnull"+ "'", var3.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);

  }

  public void test72() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test72");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    br.com.addvisor.model.City var31 = new br.com.addvisor.model.City();
    var31.setName("hi!");
    var31.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address();
    java.lang.String var37 = var36.getComplement();
    java.lang.String var38 = var36.toString();
    boolean var39 = var31.equals((java.lang.Object)var38);
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var41 = new br.com.addvisor.model.State();
    var41.setId((java.lang.Long)1L);
    var41.setName("null\nnull\nnull");
    var41.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var48 = var41.getUf();
    boolean var49 = var40.equals((java.lang.Object)var41);
    var31.setState(var41);
    br.com.addvisor.model.Address var51 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var31);
    var51.setLocation("null\nnull\nnull");
    br.com.addvisor.model.Service var54 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var55 = new br.com.addvisor.model.User();
    boolean var57 = var55.equals((java.lang.Object)(-1L));
    java.lang.String var58 = var55.toString();
    java.lang.String var59 = var55.getPassword();
    var54.setUser(var55);
    br.com.addvisor.model.Address var61 = var54.getAddress();
    java.lang.String var62 = var54.getName();
    br.com.addvisor.model.City var63 = new br.com.addvisor.model.City();
    var63.setName("hi!");
    var63.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address();
    java.lang.String var69 = var68.getComplement();
    java.lang.String var70 = var68.toString();
    boolean var71 = var63.equals((java.lang.Object)var70);
    br.com.addvisor.model.State var72 = new br.com.addvisor.model.State();
    var72.setId((java.lang.Long)1L);
    var72.setName("null\nnull\nnull");
    var72.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var79 = var72.getUf();
    var63.setState(var72);
    boolean var81 = var54.equals((java.lang.Object)var63);
    var51.setCity(var63);
    var16.setAddress(var51);
    br.com.addvisor.model.State var84 = new br.com.addvisor.model.State();
    var84.setId((java.lang.Long)1L);
    var84.setName("null\nnull\nnull");
    var84.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var91 = var84.getUf();
    java.lang.String var92 = var84.getName();
    br.com.addvisor.model.State var93 = new br.com.addvisor.model.State();
    int var94 = var84.compareTo(var93);
    boolean var95 = var16.equals((java.lang.Object)var94);
    br.com.addvisor.model.enums.ServiceCat var96 = var16.getCategory();
    var16.setId((java.lang.Long)100L);
    java.util.List var99 = var16.getPhones();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null\nnull\nnull"+ "'", var38.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "null\nnull\nnull"+ "'", var70.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var92.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var96);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var99);

  }

  public void test73() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test73");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getName();
    java.lang.String var26 = var21.getName();
    java.lang.String var27 = var21.getName();
    boolean var28 = var17.equals((java.lang.Object)var21);
    var21.setPassword("hi! - User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    java.lang.String var31 = var21.getEmail();
    java.lang.Long var32 = var21.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);

  }

  public void test74() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test74");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var10 = var0.getUser();
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.toString();
    br.com.addvisor.model.City var13 = new br.com.addvisor.model.City();
    var13.setName("hi!");
    var11.setCity(var13);
    br.com.addvisor.model.City var17 = new br.com.addvisor.model.City();
    var17.setName("hi!");
    var17.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address();
    java.lang.String var23 = var22.getComplement();
    java.lang.String var24 = var22.toString();
    boolean var25 = var17.equals((java.lang.Object)var24);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    var17.setState(var26);
    int var35 = var13.compareTo(var17);
    java.lang.Long var36 = var13.getId();
    br.com.addvisor.model.Service var37 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var38 = new br.com.addvisor.model.User();
    boolean var40 = var38.equals((java.lang.Object)(-1L));
    java.lang.String var41 = var38.toString();
    java.lang.String var42 = var38.getPassword();
    var37.setUser(var38);
    boolean var44 = var13.equals((java.lang.Object)var38);
    br.com.addvisor.model.Evaluate var45 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var46 = new br.com.addvisor.model.State();
    boolean var48 = var46.equals((java.lang.Object)(byte)100);
    var46.setUf("null\nnull\nnull");
    boolean var51 = var45.equals((java.lang.Object)var46);
    br.com.addvisor.model.Service var52 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var53 = new br.com.addvisor.model.User();
    boolean var55 = var53.equals((java.lang.Object)(-1L));
    java.lang.String var56 = var53.toString();
    java.lang.String var57 = var53.getPassword();
    var52.setUser(var53);
    br.com.addvisor.model.Address var59 = var52.getAddress();
    var45.setService(var52);
    br.com.addvisor.model.enums.ServiceCat var61 = var52.getCategory();
    br.com.addvisor.model.Address var62 = new br.com.addvisor.model.Address();
    var62.setId((java.lang.Long)0L);
    var52.setAddress(var62);
    br.com.addvisor.model.User var66 = new br.com.addvisor.model.User();
    boolean var68 = var66.equals((java.lang.Object)(-1L));
    java.lang.String var69 = var66.toString();
    java.lang.String var70 = var66.getName();
    java.lang.String var71 = var66.getName();
    java.lang.String var72 = var66.getName();
    boolean var73 = var62.equals((java.lang.Object)var66);
    boolean var74 = var38.equals((java.lang.Object)var66);
    boolean var75 = var0.equals((java.lang.Object)var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "null\nnull\nnull"+ "'", var12.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null\nnull\nnull"+ "'", var24.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var41.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var56.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var69.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);

  }

  public void test75() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test75");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.Country var3 = var0.getCountry();
    var0.setId((java.lang.Long)1L);
    java.lang.Long var6 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 1L+ "'", var6.equals(1L));

  }

  public void test76() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test76");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var7 = new br.com.addvisor.model.Agenda();
    java.util.List var8 = var7.getNames();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    var7.setNames(var10);
    java.util.List var12 = var7.getNumbers();
    boolean var13 = var0.equals((java.lang.Object)var7);
    java.lang.String var14 = var0.toString();
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    var15.setComplement("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var18 = var0.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Service var19 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var20 = new br.com.addvisor.model.User();
    boolean var22 = var20.equals((java.lang.Object)(-1L));
    java.lang.String var23 = var20.toString();
    java.lang.String var24 = var20.getPassword();
    var19.setUser(var20);
    br.com.addvisor.model.Address var26 = var19.getAddress();
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address();
    java.lang.String var28 = var27.getComplement();
    java.lang.String var29 = var27.toString();
    br.com.addvisor.model.City var30 = var27.getCity();
    br.com.addvisor.model.State var31 = new br.com.addvisor.model.State();
    var31.setId((java.lang.Long)1L);
    var31.setName("null\nnull\nnull");
    var31.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var38 = var31.getUf();
    boolean var39 = var27.equals((java.lang.Object)var31);
    var19.setAddress(var27);
    br.com.addvisor.model.User var41 = var19.getUser();
    br.com.addvisor.model.enums.ServiceCat var42 = var19.getCategory();
    var0.setService(var19);
    java.lang.Float var44 = var0.getNote();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var14.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var23.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null\nnull\nnull"+ "'", var29.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);

  }

  public void test77() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test77");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    boolean var23 = var17.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    var17.setService(var24);
    br.com.addvisor.model.enums.ServiceCat var33 = var24.getCategory();
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    var34.setId((java.lang.Long)0L);
    var24.setAddress(var34);
    var0.setService(var24);
    br.com.addvisor.model.User var39 = new br.com.addvisor.model.User();
    boolean var41 = var39.equals((java.lang.Object)(-1L));
    java.lang.String var42 = var39.getDDD();
    var39.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var45 = var39.getCity();
    var0.setUser(var39);
    br.com.addvisor.model.User var47 = var0.getUser();
    var0.setId((java.lang.Long)100L);
    java.lang.String var50 = var0.getComment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);

  }

  public void test78() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test78");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    var5.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var12 = new br.com.addvisor.model.Country();
    java.lang.Integer var13 = var12.getId();
    java.lang.String var14 = var12.getName();
    var12.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var17 = var12.getAcronym();
    var12.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var5.setCountry(var12);
    java.lang.String var21 = var5.toString();
    java.lang.String var22 = var5.getUf();
    java.lang.String var23 = var5.toString();
    java.lang.String var24 = var5.getUf();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var17.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var21.equals("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var22.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var23.equals("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var24.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test79() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test79");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    var6.addContact("User [id=null, name=null, email=null, password=428e147830819130e93707f1ce3a3cdb, phone=null, city=null]", "null - null\nnull\nnull");
    java.util.List var11 = var6.getNames();
    var0.setNumbers(var11);
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    java.util.List var18 = var16.getNumbers();
    var13.setNames(var18);
    var13.addContact("User [id=null, name=null, email=null, password=null, phone=null, city=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    boolean var25 = var23.equals((java.lang.Object)(byte)100);
    var23.setUf("null\nnull\nnull");
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    br.com.addvisor.model.Agenda var30 = new br.com.addvisor.model.Agenda();
    java.util.List var31 = var30.getNames();
    var28.setNames(var31);
    java.util.List var33 = var28.getNumbers();
    br.com.addvisor.model.Agenda var34 = new br.com.addvisor.model.Agenda();
    java.util.List var35 = var34.getNames();
    java.util.List var36 = var34.getNumbers();
    br.com.addvisor.model.Agenda var37 = new br.com.addvisor.model.Agenda();
    java.util.List var38 = var37.getNames();
    java.util.List var39 = var37.getNumbers();
    var34.setNames(var39);
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    java.util.List var43 = var41.getNumbers();
    br.com.addvisor.model.Agenda var44 = new br.com.addvisor.model.Agenda();
    java.util.List var45 = var44.getNames();
    java.util.List var46 = var44.getNumbers();
    var41.setNames(var46);
    var34.setNames(var46);
    var28.setNumbers(var46);
    var28.addContact("", "");
    br.com.addvisor.model.Agenda var53 = new br.com.addvisor.model.Agenda();
    java.util.List var54 = var53.getNames();
    br.com.addvisor.model.Agenda var55 = new br.com.addvisor.model.Agenda();
    java.util.List var56 = var55.getNames();
    var53.setNames(var56);
    java.util.List var58 = var53.getNumbers();
    var28.setNames(var58);
    boolean var60 = var23.equals((java.lang.Object)var28);
    java.util.List var61 = var28.getNames();
    var13.setNumbers(var61);
    java.util.List var63 = var13.getNumbers();
    java.util.Map var64 = var13.getContacts();
    var0.setContacts(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);

  }

  public void test80() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test80");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    java.lang.String var21 = var7.getName();
    java.lang.Long var22 = var7.getId();
    java.lang.Long var23 = var7.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test81() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test81");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    var0.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var5 = var0.getName();
    var0.setName("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=User [id=null, name=null, email=null, password=null, phone=null, city=null], tags=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], media=null, address=null, category=null, phones=null], note=100.0, comment=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test82() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test82");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.getPrice("Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=null, comment=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test83() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test83");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.User var22 = var0.getUser();
    java.lang.String var23 = var0.toString();
    br.com.addvisor.model.Address var24 = var0.getAddress();
    java.lang.Long var25 = var24.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var23.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test84() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test84");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    var16.setComplement("");
    var16.setId((java.lang.Long)0L);
    java.lang.String var21 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull\n\nnull\nnull\nnull"+ "'", var21.equals("null\nnull\nnull\n\nnull\nnull\nnull"));

  }

  public void test85() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test85");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.getDDD();
    var41.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address();
    java.lang.String var48 = var47.toString();
    br.com.addvisor.model.City var49 = new br.com.addvisor.model.City();
    var49.setName("hi!");
    var49.setName("null\nnull\nnull");
    var47.setCity(var49);
    var41.setCity(var49);
    var40.setUser(var41);
    var40.setComment("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var59 = var40.getService();
    br.com.addvisor.model.Evaluate var60 = new br.com.addvisor.model.Evaluate();
    var60.setId((java.lang.Long)10L);
    var60.setId((java.lang.Long)0L);
    java.lang.Float var65 = var60.getNote();
    br.com.addvisor.model.Service var66 = new br.com.addvisor.model.Service();
    java.lang.String var67 = var66.toString();
    var60.setService(var66);
    br.com.addvisor.model.Address var69 = new br.com.addvisor.model.Address();
    java.lang.String var70 = var69.getLocation();
    java.lang.String var71 = var69.toString();
    var66.setAddress(var69);
    br.com.addvisor.model.User var73 = var66.getUser();
    java.lang.String var74 = var66.getTags();
    java.lang.String var75 = var66.toString();
    var40.setService(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var67.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "null\nnull\nnull"+ "'", var71.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var75.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"));

  }

  public void test86() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test86");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    var15.setId((java.lang.Long)1L);
    var15.setName("null\nnull\nnull");
    var15.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var22 = var15.getUf();
    var6.setState(var15);
    int var24 = var2.compareTo(var6);
    var2.setName("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    java.lang.Long var27 = var2.getId();
    br.com.addvisor.model.User var28 = new br.com.addvisor.model.User();
    boolean var30 = var28.equals((java.lang.Object)(-1L));
    java.lang.String var31 = var28.toString();
    java.lang.String var32 = var28.getPassword();
    java.lang.String var33 = var28.getPhone();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var35 = new br.com.addvisor.model.State();
    var35.setId((java.lang.Long)1L);
    var35.setName("null\nnull\nnull");
    var35.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var42 = var35.getUf();
    boolean var43 = var34.equals((java.lang.Object)var35);
    br.com.addvisor.model.Service var44 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var45 = new br.com.addvisor.model.User();
    boolean var47 = var45.equals((java.lang.Object)(-1L));
    java.lang.String var48 = var45.toString();
    java.lang.String var49 = var45.getPassword();
    var44.setUser(var45);
    br.com.addvisor.model.Address var51 = var44.getAddress();
    java.lang.String var52 = var44.getName();
    br.com.addvisor.model.City var53 = new br.com.addvisor.model.City();
    var53.setName("hi!");
    var53.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var58 = new br.com.addvisor.model.Address();
    java.lang.String var59 = var58.getComplement();
    java.lang.String var60 = var58.toString();
    boolean var61 = var53.equals((java.lang.Object)var60);
    br.com.addvisor.model.State var62 = new br.com.addvisor.model.State();
    var62.setId((java.lang.Long)1L);
    var62.setName("null\nnull\nnull");
    var62.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var69 = var62.getUf();
    var53.setState(var62);
    boolean var71 = var44.equals((java.lang.Object)var53);
    br.com.addvisor.model.Evaluate var74 = new br.com.addvisor.model.Evaluate(var34, var44, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var77 = new br.com.addvisor.model.Evaluate(var28, var44, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.City var78 = var28.getCity();
    var28.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var28.setPhone("Service [id=null, name=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var83 = var2.equals((java.lang.Object)"Service [id=null, name=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var31.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var48.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "null\nnull\nnull"+ "'", var60.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);

  }

  public void test87() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test87");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    java.util.List var6 = var0.getNumbers();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test88() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test88");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Float var50 = var49.getNote();
    java.lang.Float var51 = var49.getNote();
    br.com.addvisor.model.Service var52 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var53 = new br.com.addvisor.model.User();
    boolean var55 = var53.equals((java.lang.Object)(-1L));
    java.lang.String var56 = var53.toString();
    java.lang.String var57 = var53.getPassword();
    var52.setUser(var53);
    br.com.addvisor.model.Address var59 = var52.getAddress();
    br.com.addvisor.model.User var60 = new br.com.addvisor.model.User();
    boolean var62 = var60.equals((java.lang.Object)(-1L));
    boolean var64 = var60.equals((java.lang.Object)100.0d);
    var52.setUser(var60);
    br.com.addvisor.model.Service var66 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var67 = new br.com.addvisor.model.User();
    boolean var69 = var67.equals((java.lang.Object)(-1L));
    java.lang.String var70 = var67.toString();
    java.lang.String var71 = var67.getPassword();
    var66.setUser(var67);
    br.com.addvisor.model.Address var73 = var66.getAddress();
    java.lang.String var74 = var66.getName();
    var66.setTags("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]");
    br.com.addvisor.model.Evaluate var79 = new br.com.addvisor.model.Evaluate(var60, var66, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]");
    var49.setUser(var60);
    br.com.addvisor.model.Service var81 = var49.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + 0.0f+ "'", var50.equals(0.0f));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + 0.0f+ "'", var51.equals(0.0f));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var56.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var70.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);

  }

  public void test89() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test89");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)(-1L));
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var20 = new br.com.addvisor.model.City();
    var20.setName("hi!");
    var20.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var25 = new br.com.addvisor.model.Address();
    java.lang.String var26 = var25.getComplement();
    java.lang.String var27 = var25.toString();
    boolean var28 = var20.equals((java.lang.Object)var27);
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var20);
    br.com.addvisor.model.City var32 = new br.com.addvisor.model.City();
    var32.setName("hi!");
    var32.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    boolean var40 = var32.equals((java.lang.Object)var39);
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    var42.setId((java.lang.Long)1L);
    var42.setName("null\nnull\nnull");
    var42.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var49 = var42.getUf();
    boolean var50 = var41.equals((java.lang.Object)var42);
    var32.setState(var42);
    br.com.addvisor.model.Address var52 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var32);
    int var53 = var20.compareTo(var32);
    var0.setCity(var20);
    var0.setId((java.lang.Long)100L);
    java.lang.String var57 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]"+ "'", var57.equals("User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]"));

  }

  public void test90() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test90");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.User var22 = var0.getUser();
    java.lang.String var23 = var0.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test91() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test91");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.Country var9 = new br.com.addvisor.model.Country();
    java.lang.String var10 = var9.getAcronym();
    boolean var11 = var0.equals((java.lang.Object)var9);
    java.lang.String var12 = var9.getAcronym();
    java.lang.String var13 = var9.toString();
    java.lang.String var14 = var9.toString();
    java.lang.String var15 = var9.getName();
    java.lang.String var16 = var9.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var13.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var14.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test92() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test92");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    br.com.addvisor.model.Agenda var7 = new br.com.addvisor.model.Agenda();
    java.util.List var8 = var7.getNames();
    java.util.List var9 = var7.getNumbers();
    br.com.addvisor.model.Agenda var10 = new br.com.addvisor.model.Agenda();
    java.util.List var11 = var10.getNames();
    java.util.List var12 = var10.getNumbers();
    var7.setNames(var12);
    var0.setNames(var12);
    java.util.Map var15 = var0.getContacts();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.Map var17 = var16.getContacts();
    var0.setContacts(var17);
    java.util.Map var19 = var0.getContacts();
    java.util.List var20 = var0.getNames();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test93() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test93");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("Evaluate [id=-1, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test94() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test94");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    java.lang.String var21 = var17.getLocation();
    br.com.addvisor.model.City var24 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var25 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var24);
    java.lang.Long var26 = var24.getId();
    var17.setCity(var24);
    java.lang.String var28 = var24.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);

  }

  public void test95() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test95");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Long var50 = var16.getId();
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    boolean var53 = var51.equals((java.lang.Object)(-1L));
    boolean var55 = var51.equals((java.lang.Object)100.0d);
    var51.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.toString();
    var16.setUser(var51);
    var51.setPassword("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));

  }

  public void test96() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test96");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var3 = var2.getPhone();
    br.com.addvisor.model.Service var4 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var5 = new br.com.addvisor.model.User();
    boolean var7 = var5.equals((java.lang.Object)(-1L));
    java.lang.String var8 = var5.toString();
    java.lang.String var9 = var5.getPassword();
    var4.setUser(var5);
    br.com.addvisor.model.Address var11 = var4.getAddress();
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getComplement();
    java.lang.String var14 = var12.toString();
    br.com.addvisor.model.City var15 = var12.getCity();
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    var16.setId((java.lang.Long)1L);
    var16.setName("null\nnull\nnull");
    var16.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var23 = var16.getUf();
    boolean var24 = var12.equals((java.lang.Object)var16);
    var4.setAddress(var12);
    br.com.addvisor.model.User var26 = var4.getUser();
    java.lang.String var27 = var4.toString();
    br.com.addvisor.model.enums.ServiceCat var28 = var4.getCategory();
    br.com.addvisor.model.Evaluate var31 = new br.com.addvisor.model.Evaluate(var2, var4, (java.lang.Float)0.0f, "Service [id=1, name=null, description=Evaluate [id=null, user=null, service=null, note=null, comment=null], tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var32 = new br.com.addvisor.model.Evaluate();
    var32.setId((java.lang.Long)10L);
    var32.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var37 = var32.getUser();
    java.lang.String var38 = var32.getComment();
    java.lang.String var39 = var32.getComment();
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate();
    var40.setId((java.lang.Long)10L);
    var40.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var45 = var40.getUser();
    var40.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var48 = new br.com.addvisor.model.Service();
    java.lang.String var49 = var48.getName();
    var40.setService(var48);
    var32.setService(var48);
    br.com.addvisor.model.Evaluate var54 = new br.com.addvisor.model.Evaluate(var2, var48, (java.lang.Float)1.0f, "Service [id=null, name=null, description=User [id=null, name=null, email=null, password=null, phone=null, city=null], tags=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.User var55 = var54.getUser();
    java.lang.Long var56 = var54.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var27.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);

  }

  public void test97() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test97");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    var2.setState(var9);
    var9.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    boolean var18 = var16.equals((java.lang.Object)(byte)100);
    var16.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var21 = new br.com.addvisor.model.State();
    int var22 = var16.compareTo(var21);
    var21.setName("");
    int var25 = var9.compareTo(var21);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    br.com.addvisor.model.State var29 = new br.com.addvisor.model.State();
    var29.setId((java.lang.Long)1L);
    var29.setName("null\nnull\nnull");
    var29.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var36 = var29.getUf();
    java.lang.String var37 = var29.getName();
    br.com.addvisor.model.Country var38 = new br.com.addvisor.model.Country();
    java.lang.String var39 = var38.getAcronym();
    boolean var40 = var29.equals((java.lang.Object)var38);
    var26.setCountry(var38);
    var21.setCountry(var38);
    java.lang.Integer var43 = var38.getId();
    java.lang.String var44 = var38.getName();
    var38.setName("Evaluate [id=null, user=null, service=null, note=null, comment=null]");
    var38.setAcronym("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);

  }

  public void test98() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test98");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.State var2 = new br.com.addvisor.model.State();
    boolean var4 = var2.equals((java.lang.Object)(byte)100);
    var2.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    int var8 = var2.compareTo(var7);
    boolean var9 = var0.equals((java.lang.Object)var7);
    var0.setName("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getLocation();
    java.lang.String var14 = var12.getComplement();
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    java.lang.String var16 = var15.toString();
    br.com.addvisor.model.City var17 = new br.com.addvisor.model.City();
    var17.setName("hi!");
    var17.setName("null\nnull\nnull");
    var15.setCity(var17);
    java.lang.Long var23 = var17.getId();
    var12.setCity(var17);
    boolean var25 = var0.equals((java.lang.Object)var17);
    br.com.addvisor.model.Address var26 = new br.com.addvisor.model.Address();
    java.lang.String var27 = var26.toString();
    br.com.addvisor.model.City var28 = new br.com.addvisor.model.City();
    var28.setName("hi!");
    var28.setName("null\nnull\nnull");
    var26.setCity(var28);
    java.lang.String var34 = var28.getName();
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    int var37 = var17.compareTo(var28);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate();
    var40.setId((java.lang.Long)10L);
    var40.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var45 = var40.getService();
    br.com.addvisor.model.User var48 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var49 = var48.getId();
    var48.setId((java.lang.Long)(-1L));
    var48.setPhone("null\nnull\nnull");
    java.lang.String var54 = var48.getEmail();
    var48.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var40.setUser(var48);
    br.com.addvisor.model.Address var58 = new br.com.addvisor.model.Address();
    java.lang.String var59 = var58.toString();
    br.com.addvisor.model.City var60 = new br.com.addvisor.model.City();
    var60.setName("hi!");
    var60.setName("null\nnull\nnull");
    var58.setCity(var60);
    java.lang.String var66 = var60.getName();
    br.com.addvisor.model.State var67 = var60.getState();
    var48.setCity(var60);
    br.com.addvisor.model.Address var69 = new br.com.addvisor.model.Address("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]", var60);
    boolean var70 = var28.equals((java.lang.Object)var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null\nnull\nnull"+ "'", var34.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "null\nnull\nnull"+ "'", var59.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "null\nnull\nnull"+ "'", var66.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);

  }

  public void test99() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test99");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    java.lang.Long var19 = var0.getId();
    br.com.addvisor.model.City var20 = var0.getCity();
    java.lang.Long var21 = var0.getId();
    java.lang.String var22 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null\nnull\nnull\nnull\nnull"+ "'", var22.equals("null\nnull\nnull\nnull\nnull"));

  }

  public void test100() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test100");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test101() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test101");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    var0.setName("null\nnull\nnull");
    java.lang.String var5 = var0.getName();
    br.com.addvisor.model.Evaluate var6 = new br.com.addvisor.model.Evaluate();
    var6.setId((java.lang.Long)10L);
    var6.setId((java.lang.Long)0L);
    var6.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    var13.setNames(var16);
    java.util.List var18 = var13.getNumbers();
    boolean var19 = var6.equals((java.lang.Object)var13);
    java.util.List var20 = var13.getNumbers();
    boolean var21 = var0.equals((java.lang.Object)var13);
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    var22.setNames(var25);
    java.util.List var27 = var22.getNumbers();
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    java.util.List var30 = var28.getNumbers();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    java.util.List var33 = var31.getNumbers();
    var28.setNames(var33);
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.List var36 = var35.getNames();
    java.util.List var37 = var35.getNumbers();
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    var35.setNames(var40);
    var28.setNames(var40);
    var22.setNumbers(var40);
    var13.setNames(var40);
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    java.util.List var47 = var45.getNumbers();
    br.com.addvisor.model.Agenda var48 = new br.com.addvisor.model.Agenda();
    java.util.List var49 = var48.getNames();
    java.util.List var50 = var48.getNumbers();
    var45.setNames(var50);
    br.com.addvisor.model.Agenda var52 = new br.com.addvisor.model.Agenda();
    java.util.List var53 = var52.getNames();
    java.util.List var54 = var52.getNumbers();
    br.com.addvisor.model.Agenda var55 = new br.com.addvisor.model.Agenda();
    java.util.List var56 = var55.getNames();
    java.util.List var57 = var55.getNumbers();
    var52.setNames(var57);
    var45.setNames(var57);
    br.com.addvisor.model.Agenda var60 = new br.com.addvisor.model.Agenda();
    java.util.List var61 = var60.getNames();
    java.util.List var62 = var60.getNumbers();
    var45.setNames(var62);
    br.com.addvisor.model.Service var64 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var65 = new br.com.addvisor.model.User();
    boolean var67 = var65.equals((java.lang.Object)(-1L));
    java.lang.String var68 = var65.toString();
    java.lang.String var69 = var65.getPassword();
    var64.setUser(var65);
    br.com.addvisor.model.Address var71 = var64.getAddress();
    java.util.List var72 = var64.getPhones();
    br.com.addvisor.model.Agenda var73 = new br.com.addvisor.model.Agenda();
    java.util.List var74 = var73.getNames();
    java.util.List var75 = var73.getNumbers();
    br.com.addvisor.model.Agenda var76 = new br.com.addvisor.model.Agenda();
    java.util.List var77 = var76.getNames();
    java.util.List var78 = var76.getNumbers();
    var73.setNames(var78);
    var64.setPhones(var78);
    var45.setNames(var78);
    var13.setNumbers(var78);
    java.util.Map var83 = var13.getContacts();
    java.util.Map var84 = var13.getContacts();
    var13.addContact("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]\nUser [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull\nhi!", "Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]\nUser [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull\nhi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null\nnull\nnull"+ "'", var5.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var68.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);

  }

  public void test102() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test102");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    var0.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getName();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    boolean var9 = var7.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.State var10 = new br.com.addvisor.model.State();
    boolean var12 = var10.equals((java.lang.Object)(byte)100);
    var10.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    int var16 = var10.compareTo(var15);
    java.lang.String var17 = var15.getName();
    var15.setId((java.lang.Long)10L);
    java.lang.Long var20 = var15.getId();
    int var21 = var7.compareTo(var15);
    boolean var22 = var0.equals((java.lang.Object)var7);
    java.lang.String var23 = var0.getAcronym();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + 10L+ "'", var20.equals(10L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));

  }

  public void test103() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test103");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.getComplement();
    java.lang.String var6 = var4.toString();
    java.lang.String var7 = var4.getComplement();
    br.com.addvisor.model.City var12 = new br.com.addvisor.model.City();
    var12.setName("hi!");
    var12.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    java.lang.String var18 = var17.getComplement();
    java.lang.String var19 = var17.toString();
    boolean var20 = var12.equals((java.lang.Object)var19);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var12);
    var4.setCity(var12);
    var4.setComplement("hi!");
    br.com.addvisor.model.City var25 = var4.getCity();
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Evaluate [id=0, user=null, service=null, note=null, comment=null]]", "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=null, user=null, service=null, note=null, comment=]", var25);
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var30 = new br.com.addvisor.model.State();
    var30.setId((java.lang.Long)1L);
    var30.setName("null\nnull\nnull");
    var30.setUf("Country [id=null, name=null, acronym=null]");
    var30.setName("null - null");
    boolean var39 = var29.equals((java.lang.Object)var30);
    var25.setState(var30);
    java.lang.Long var41 = var30.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null\nnull\nnull"+ "'", var6.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + 1L+ "'", var41.equals(1L));

  }

  public void test104() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test104");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.City var17 = new br.com.addvisor.model.City();
    var17.setName("hi!");
    var17.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address();
    java.lang.String var23 = var22.getComplement();
    java.lang.String var24 = var22.toString();
    boolean var25 = var17.equals((java.lang.Object)var24);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    var17.setState(var26);
    br.com.addvisor.model.State var35 = var17.getState();
    var17.setName("null - null\nnull\nnull");
    boolean var38 = var0.equals((java.lang.Object)var17);
    br.com.addvisor.model.State var39 = new br.com.addvisor.model.State();
    boolean var41 = var39.equals((java.lang.Object)(byte)100);
    var39.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var44 = new br.com.addvisor.model.State();
    int var45 = var39.compareTo(var44);
    var44.setName("");
    var17.setState(var44);
    br.com.addvisor.model.State var49 = var17.getState();
    br.com.addvisor.model.Evaluate var50 = new br.com.addvisor.model.Evaluate();
    var50.setId((java.lang.Long)10L);
    var50.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var55 = var50.getService();
    br.com.addvisor.model.User var56 = new br.com.addvisor.model.User();
    boolean var58 = var56.equals((java.lang.Object)(-1L));
    java.lang.String var59 = var56.toString();
    java.lang.String var60 = var56.getPassword();
    java.lang.String var61 = var56.getPhone();
    var50.setUser(var56);
    br.com.addvisor.model.Service var63 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var64 = new br.com.addvisor.model.User();
    boolean var66 = var64.equals((java.lang.Object)(-1L));
    java.lang.String var67 = var64.toString();
    java.lang.String var68 = var64.getPassword();
    var63.setUser(var64);
    br.com.addvisor.model.Address var70 = var63.getAddress();
    br.com.addvisor.model.Address var71 = new br.com.addvisor.model.Address();
    java.lang.String var72 = var71.getComplement();
    java.lang.String var73 = var71.toString();
    br.com.addvisor.model.City var74 = var71.getCity();
    br.com.addvisor.model.State var75 = new br.com.addvisor.model.State();
    var75.setId((java.lang.Long)1L);
    var75.setName("null\nnull\nnull");
    var75.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var82 = var75.getUf();
    boolean var83 = var71.equals((java.lang.Object)var75);
    var63.setAddress(var71);
    var63.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var87 = var63.getDescription();
    var50.setService(var63);
    java.lang.Long var89 = var50.getId();
    br.com.addvisor.model.Service var90 = var50.getService();
    boolean var91 = var49.equals((java.lang.Object)var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null\nnull\nnull"+ "'", var24.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var59.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var67.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "null\nnull\nnull"+ "'", var73.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + 0L+ "'", var89.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test105() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test105");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)(-1L));
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var20 = new br.com.addvisor.model.City();
    var20.setName("hi!");
    var20.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var25 = new br.com.addvisor.model.Address();
    java.lang.String var26 = var25.getComplement();
    java.lang.String var27 = var25.toString();
    boolean var28 = var20.equals((java.lang.Object)var27);
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var20);
    br.com.addvisor.model.City var32 = new br.com.addvisor.model.City();
    var32.setName("hi!");
    var32.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    boolean var40 = var32.equals((java.lang.Object)var39);
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    var42.setId((java.lang.Long)1L);
    var42.setName("null\nnull\nnull");
    var42.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var49 = var42.getUf();
    boolean var50 = var41.equals((java.lang.Object)var42);
    var32.setState(var42);
    br.com.addvisor.model.Address var52 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var32);
    int var53 = var20.compareTo(var32);
    var0.setCity(var20);
    java.lang.String var55 = var0.getPassword();
    java.lang.String var56 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);

  }

  public void test106() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test106");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var24.setName("null - null\nnull\nnull");
    java.util.List var44 = var24.getPhones();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);

  }

  public void test107() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test107");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    var0.addContact("User [id=null, name=null, email=null, password=null, phone=null, city=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    java.util.List var10 = var0.getNames();
    java.util.Map var11 = var0.getContacts();
    java.util.List var12 = var0.getNumbers();
    java.util.List var13 = var0.getNumbers();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test108() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test108");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    java.lang.String var30 = var16.getTags();
    var16.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var33 = var16.getAddress();
    br.com.addvisor.model.Service var34 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    java.lang.String var39 = var35.getPassword();
    var34.setUser(var35);
    br.com.addvisor.model.Address var41 = var34.getAddress();
    br.com.addvisor.model.Address var42 = new br.com.addvisor.model.Address();
    java.lang.String var43 = var42.getComplement();
    java.lang.String var44 = var42.toString();
    br.com.addvisor.model.City var45 = var42.getCity();
    br.com.addvisor.model.State var46 = new br.com.addvisor.model.State();
    var46.setId((java.lang.Long)1L);
    var46.setName("null\nnull\nnull");
    var46.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var53 = var46.getUf();
    boolean var54 = var42.equals((java.lang.Object)var46);
    var34.setAddress(var42);
    br.com.addvisor.model.Address var56 = new br.com.addvisor.model.Address();
    java.lang.String var57 = var56.getComplement();
    java.lang.String var58 = var56.toString();
    var56.setId((java.lang.Long)1L);
    java.lang.Long var61 = var56.getId();
    java.lang.String var62 = var56.getLocation();
    var34.setAddress(var56);
    var16.setAddress(var56);
    br.com.addvisor.model.City var65 = var56.getCity();
    var56.setComplement("User [id=null, name=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, email=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], password=767ca4906ff527b215592f830290ac13, phone=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null\nnull\nnull"+ "'", var44.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "null\nnull\nnull"+ "'", var58.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + 1L+ "'", var61.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);

  }

  public void test109() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test109");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    java.lang.Long var19 = var0.getId();
    java.lang.String var20 = var0.getLocation();
    br.com.addvisor.model.City var21 = var0.getCity();
    java.lang.String var22 = var0.getComplement();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test110() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test110");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)(-1L));
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var20 = new br.com.addvisor.model.City();
    var20.setName("hi!");
    var20.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var25 = new br.com.addvisor.model.Address();
    java.lang.String var26 = var25.getComplement();
    java.lang.String var27 = var25.toString();
    boolean var28 = var20.equals((java.lang.Object)var27);
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var20);
    br.com.addvisor.model.City var32 = new br.com.addvisor.model.City();
    var32.setName("hi!");
    var32.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    boolean var40 = var32.equals((java.lang.Object)var39);
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    var42.setId((java.lang.Long)1L);
    var42.setName("null\nnull\nnull");
    var42.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var49 = var42.getUf();
    boolean var50 = var41.equals((java.lang.Object)var42);
    var32.setState(var42);
    br.com.addvisor.model.Address var52 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var32);
    int var53 = var20.compareTo(var32);
    var0.setCity(var20);
    var0.setId((java.lang.Long)100L);
    br.com.addvisor.model.City var57 = var0.getCity();
    java.lang.Long var58 = var57.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);

  }

  public void test111() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test111");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    var0.setId((java.lang.Long)1L);
    java.lang.Long var11 = var0.getId();
    var0.setDescription("null - null\nnull\nnull");
    java.lang.String var14 = var0.getTags();
    java.lang.String var15 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + 1L+ "'", var11.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "Service [id=1, name=null, description=null - null\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var15.equals("Service [id=1, name=null, description=null - null\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test112() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test112");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.valueOf(" - null");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test113() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test113");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    br.com.addvisor.model.City var3 = var0.getCity();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    var4.setId((java.lang.Long)1L);
    var4.setName("null\nnull\nnull");
    var4.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var11 = var4.getUf();
    boolean var12 = var0.equals((java.lang.Object)var4);
    java.lang.Long var13 = var4.getId();
    boolean var15 = var4.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var16 = new br.com.addvisor.model.User();
    boolean var18 = var16.equals((java.lang.Object)(-1L));
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = var16.getPassword();
    java.lang.String var21 = var16.getPassword();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate();
    var22.setId((java.lang.Long)10L);
    var22.setId((java.lang.Long)0L);
    var22.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    var29.setNames(var32);
    java.util.List var34 = var29.getNumbers();
    boolean var35 = var22.equals((java.lang.Object)var29);
    java.util.List var36 = var29.getNumbers();
    boolean var37 = var16.equals((java.lang.Object)var29);
    java.util.Map var38 = var29.getContacts();
    java.util.Map var39 = var29.getContacts();
    boolean var40 = var4.equals((java.lang.Object)var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + 1L+ "'", var13.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var19.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);

  }

  public void test114() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test114");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    java.lang.String var9 = var8.getName();
    var0.setService(var8);
    java.lang.Long var11 = var0.getId();
    var0.setNote((java.lang.Float)10.0f);
    br.com.addvisor.model.Service var14 = var0.getService();
    br.com.addvisor.model.User var15 = var14.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + 0L+ "'", var11.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test115() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test115");


    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var4.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var9 = new br.com.addvisor.model.Address();
    java.lang.String var10 = var9.getComplement();
    java.lang.String var11 = var9.toString();
    boolean var12 = var4.equals((java.lang.Object)var11);
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var4);
    br.com.addvisor.model.City var16 = new br.com.addvisor.model.City();
    var16.setName("hi!");
    var16.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.getComplement();
    java.lang.String var23 = var21.toString();
    boolean var24 = var16.equals((java.lang.Object)var23);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    boolean var34 = var25.equals((java.lang.Object)var26);
    var16.setState(var26);
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var16);
    int var37 = var4.compareTo(var16);
    var4.setName("User [id=null, name=null, email=null, password=300fac9da4ec249ae6eb64ef8825ae47, phone=null - null - null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nnull\nnull"+ "'", var23.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 0);

  }

  public void test116() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test116");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    java.lang.Long var21 = var17.getId();
    var17.setLocation("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var17.setComplement("4238a597ad0f3ff8363f52f6e8c3507");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + 0L+ "'", var21.equals(0L));

  }

  public void test117() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test117");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    br.com.addvisor.model.Evaluate var7 = new br.com.addvisor.model.Evaluate();
    var7.setId((java.lang.Long)10L);
    var7.setId((java.lang.Long)0L);
    java.lang.Float var12 = var7.getNote();
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    java.lang.String var14 = var13.toString();
    var7.setService(var13);
    var7.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var18 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var19 = new br.com.addvisor.model.State();
    boolean var21 = var19.equals((java.lang.Object)(byte)100);
    var19.setUf("null\nnull\nnull");
    boolean var24 = var18.equals((java.lang.Object)var19);
    br.com.addvisor.model.Service var25 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.toString();
    java.lang.String var30 = var26.getPassword();
    var25.setUser(var26);
    br.com.addvisor.model.Address var32 = var25.getAddress();
    var18.setService(var25);
    br.com.addvisor.model.enums.ServiceCat var34 = var25.getCategory();
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address();
    var35.setId((java.lang.Long)0L);
    var25.setAddress(var35);
    boolean var39 = var7.equals((java.lang.Object)var25);
    java.lang.String var40 = var25.getName();
    var25.setMedia((java.lang.Float)100.0f);
    br.com.addvisor.model.Evaluate var45 = new br.com.addvisor.model.Evaluate(var0, var25, (java.lang.Float)1.0f, "Country [id=100, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]]");
    java.lang.String var46 = var0.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var14.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var29.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);

  }

  public void test118() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test118");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getPassword();
    java.lang.String var7 = var0.getName();
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var8.setUser(var9);
    br.com.addvisor.model.Address var15 = var8.getAddress();
    java.lang.String var16 = var8.getName();
    br.com.addvisor.model.Address var17 = var8.getAddress();
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User();
    boolean var20 = var18.equals((java.lang.Object)(-1L));
    java.lang.String var21 = var18.toString();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate();
    var22.setId((java.lang.Long)10L);
    var22.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var27 = var22.getUser();
    boolean var28 = var18.equals((java.lang.Object)var22);
    java.lang.String var29 = var18.getPassword();
    var18.setId((java.lang.Long)(-1L));
    java.lang.String var32 = var18.getPhone();
    var8.setUser(var18);
    br.com.addvisor.model.Evaluate var36 = new br.com.addvisor.model.Evaluate(var0, var8, (java.lang.Float)10.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    var36.setNote((java.lang.Float)0.0f);
    br.com.addvisor.model.Service var39 = var36.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var21.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);

  }

  public void test119() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test119");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.Float var8 = var0.getMedia();
    java.lang.String var9 = var0.getDescription();
    java.lang.Float var10 = var0.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test120() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test120");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    var0.setComment("Country [id=null, name=null, acronym=null]");
    java.lang.Long var19 = var0.getId();
    java.lang.String var20 = var0.getComment();
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    java.lang.Integer var22 = var21.getId();
    java.lang.String var23 = var21.getName();
    java.lang.String var24 = var21.getName();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    boolean var29 = var25.equals((java.lang.Object)100.0d);
    var25.setId((java.lang.Long)100L);
    boolean var32 = var21.equals((java.lang.Object)var25);
    boolean var33 = var0.equals((java.lang.Object)var21);
    java.lang.String var34 = var21.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var20.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);

  }

  public void test121() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test121");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    var2.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));

  }

  public void test122() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test122");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var0.setUser(var9);
    br.com.addvisor.model.Service var15 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var16 = new br.com.addvisor.model.User();
    boolean var18 = var16.equals((java.lang.Object)(-1L));
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = var16.getPassword();
    var15.setUser(var16);
    br.com.addvisor.model.Address var22 = var15.getAddress();
    java.lang.String var23 = var15.getName();
    var15.setId((java.lang.Long)1L);
    java.lang.Long var26 = var15.getId();
    java.util.List var27 = var15.getPhones();
    br.com.addvisor.model.Evaluate var28 = new br.com.addvisor.model.Evaluate();
    var28.setId((java.lang.Long)10L);
    var28.setId((java.lang.Long)0L);
    java.lang.Float var33 = var28.getNote();
    br.com.addvisor.model.Service var34 = new br.com.addvisor.model.Service();
    java.lang.String var35 = var34.toString();
    var28.setService(var34);
    var28.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    boolean var42 = var40.equals((java.lang.Object)(byte)100);
    var40.setUf("null\nnull\nnull");
    boolean var45 = var39.equals((java.lang.Object)var40);
    br.com.addvisor.model.Service var46 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    boolean var49 = var47.equals((java.lang.Object)(-1L));
    java.lang.String var50 = var47.toString();
    java.lang.String var51 = var47.getPassword();
    var46.setUser(var47);
    br.com.addvisor.model.Address var53 = var46.getAddress();
    var39.setService(var46);
    br.com.addvisor.model.enums.ServiceCat var55 = var46.getCategory();
    br.com.addvisor.model.Address var56 = new br.com.addvisor.model.Address();
    var56.setId((java.lang.Long)0L);
    var46.setAddress(var56);
    boolean var60 = var28.equals((java.lang.Object)var46);
    java.lang.String var61 = var46.getName();
    br.com.addvisor.model.User var62 = var46.getUser();
    boolean var63 = var15.equals((java.lang.Object)var46);
    java.lang.String var64 = var15.getDescription();
    br.com.addvisor.model.Address var65 = var15.getAddress();
    br.com.addvisor.model.Evaluate var68 = new br.com.addvisor.model.Evaluate(var9, var15, (java.lang.Float)0.0f, "User [id=1, name=null, email=null, password=6a526e9ea8abcc547d30e98aac13c6cc, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]");
    br.com.addvisor.model.City var75 = new br.com.addvisor.model.City();
    var75.setName("hi!");
    var75.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var80 = new br.com.addvisor.model.Address();
    java.lang.String var81 = var80.getComplement();
    java.lang.String var82 = var80.toString();
    boolean var83 = var75.equals((java.lang.Object)var82);
    br.com.addvisor.model.User var84 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var75);
    br.com.addvisor.model.Address var85 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var75);
    var85.setComplement("");
    br.com.addvisor.model.City var88 = var85.getCity();
    br.com.addvisor.model.Evaluate var89 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var90 = new br.com.addvisor.model.State();
    boolean var92 = var90.equals((java.lang.Object)(byte)100);
    var90.setUf("null\nnull\nnull");
    boolean var95 = var89.equals((java.lang.Object)var90);
    var88.setState(var90);
    var9.setCity(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var19.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + 1L+ "'", var26.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var35.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "null\nnull\nnull"+ "'", var82.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);

  }

  public void test123() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test123");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    var24.setName("");
    br.com.addvisor.model.City var39 = new br.com.addvisor.model.City();
    var39.setName("hi!");
    java.lang.String var42 = var39.getName();
    br.com.addvisor.model.Address var43 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "", var39);
    boolean var44 = var24.equals((java.lang.Object)var39);
    java.lang.String var45 = var24.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "hi!"+ "'", var42.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);

  }

  public void test124() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test124");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    java.lang.String var4 = var0.getDDD();
    br.com.addvisor.model.Service var5 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    var5.setUser(var6);
    br.com.addvisor.model.Address var12 = var5.getAddress();
    java.lang.String var13 = var5.getName();
    br.com.addvisor.model.City var14 = new br.com.addvisor.model.City();
    var14.setName("hi!");
    var14.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.getComplement();
    java.lang.String var21 = var19.toString();
    boolean var22 = var14.equals((java.lang.Object)var21);
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    var23.setId((java.lang.Long)1L);
    var23.setName("null\nnull\nnull");
    var23.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var30 = var23.getUf();
    var14.setState(var23);
    boolean var32 = var5.equals((java.lang.Object)var14);
    br.com.addvisor.model.Service var33 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    boolean var36 = var34.equals((java.lang.Object)(-1L));
    java.lang.String var37 = var34.toString();
    java.lang.String var38 = var34.getPassword();
    var33.setUser(var34);
    br.com.addvisor.model.Address var40 = var33.getAddress();
    java.lang.String var41 = var33.getName();
    java.lang.String var42 = var33.getDescription();
    br.com.addvisor.model.Address var43 = new br.com.addvisor.model.Address();
    java.lang.String var44 = var43.toString();
    br.com.addvisor.model.City var45 = new br.com.addvisor.model.City();
    var45.setName("hi!");
    var43.setCity(var45);
    var43.setLocation("");
    java.lang.String var51 = var43.getLocation();
    var33.setAddress(var43);
    boolean var53 = var14.equals((java.lang.Object)var43);
    var0.setCity(var14);
    br.com.addvisor.model.City var59 = new br.com.addvisor.model.City();
    var59.setName("hi!");
    var59.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var64 = new br.com.addvisor.model.Address();
    java.lang.String var65 = var64.getComplement();
    java.lang.String var66 = var64.toString();
    boolean var67 = var59.equals((java.lang.Object)var66);
    br.com.addvisor.model.User var68 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var59);
    br.com.addvisor.model.City var71 = new br.com.addvisor.model.City();
    var71.setName("hi!");
    var71.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var76 = new br.com.addvisor.model.Address();
    java.lang.String var77 = var76.getComplement();
    java.lang.String var78 = var76.toString();
    boolean var79 = var71.equals((java.lang.Object)var78);
    br.com.addvisor.model.User var80 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var81 = new br.com.addvisor.model.State();
    var81.setId((java.lang.Long)1L);
    var81.setName("null\nnull\nnull");
    var81.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var88 = var81.getUf();
    boolean var89 = var80.equals((java.lang.Object)var81);
    var71.setState(var81);
    br.com.addvisor.model.Address var91 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var71);
    int var92 = var59.compareTo(var71);
    int var93 = var14.compareTo(var59);
    java.lang.String var94 = var59.getName();
    br.com.addvisor.model.State var95 = var59.getState();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null\nnull\nnull"+ "'", var44.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "null\nnull\nnull"+ "'", var66.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var78 + "' != '" + "null\nnull\nnull"+ "'", var78.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var92 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var93 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + "null\nnull\nnull"+ "'", var94.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);

  }

  public void test125() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test125");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    var0.setComplement("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var6 = var0.getCity();
    var0.setComplement("User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test126() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test126");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    java.lang.String var1 = var0.toString();
    var0.setMedia((java.lang.Float)10.0f);
    var0.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var1.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test127() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test127");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var0.setUser(var9);
    br.com.addvisor.model.Service var15 = var0.getService();
    br.com.addvisor.model.City var18 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var19 = var18.getState();
    java.lang.Long var20 = var18.getId();
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var18);
    var21.setComplement("");
    var21.setId((java.lang.Long)1L);
    var21.setId((java.lang.Long)(-1L));
    boolean var28 = var0.equals((java.lang.Object)var21);
    br.com.addvisor.model.Service var29 = var0.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test128() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test128");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var3 = var2.getId();
    java.lang.String var4 = var2.toString();
    var2.setEmail("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var2.setEmail("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]");
    java.lang.String var9 = var2.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var9.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));

  }

  public void test129() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test129");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    java.lang.Float var7 = var0.getNote();
    var0.setComment("Country [id=null, name=null, acronym=null]");
    java.lang.Float var10 = var0.getNote();
    java.lang.String var11 = var0.getComment();
    java.lang.Float var12 = var0.getNote();
    var0.setNote((java.lang.Float)1.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var11.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test130() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test130");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.getPrice("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null] - null");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test131() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test131");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=null]\n\nnull", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");

  }

  public void test132() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test132");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    br.com.addvisor.model.Country var10 = var5.getCountry();
    br.com.addvisor.model.Country var11 = var5.getCountry();
    java.lang.String var12 = var5.getName();
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    java.lang.Integer var14 = var13.getId();
    java.lang.String var15 = var13.getName();
    java.lang.String var16 = var13.getName();
    var13.setId((java.lang.Integer)100);
    java.lang.String var19 = var13.getName();
    var13.setAcronym("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var13.setId((java.lang.Integer)(-19));
    var5.setCountry(var13);
    var13.setAcronym("User [id=0, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Integer var27 = var13.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + (-19)+ "'", var27.equals((-19)));

  }

  public void test133() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test133");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    java.lang.String var22 = var19.getName();
    boolean var23 = var8.equals((java.lang.Object)var22);
    java.lang.Long var24 = var8.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!"+ "'", var22.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test134() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test134");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getName();
    java.lang.String var7 = var0.getPassword();
    java.lang.String var8 = var0.getPhone();
    java.lang.String var9 = var0.getPassword();
    java.lang.String var10 = var0.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test135() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test135");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getName();
    var0.setService(var7);
    java.lang.String var17 = var7.getDescription();
    br.com.addvisor.model.enums.ServiceCat var18 = var7.getCategory();
    var7.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test136() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test136");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.User var22 = var0.getUser();
    br.com.addvisor.model.Address var23 = new br.com.addvisor.model.Address();
    java.lang.String var24 = var23.getLocation();
    java.lang.String var25 = var23.toString();
    var0.setAddress(var23);
    var0.setDescription("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.City var41 = new br.com.addvisor.model.City();
    var41.setName("hi!");
    var41.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var46 = new br.com.addvisor.model.Address();
    java.lang.String var47 = var46.getComplement();
    java.lang.String var48 = var46.toString();
    boolean var49 = var41.equals((java.lang.Object)var48);
    br.com.addvisor.model.User var50 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var41);
    br.com.addvisor.model.Address var51 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var41);
    var41.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var54 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var41);
    br.com.addvisor.model.Address var55 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var41);
    java.lang.String var56 = var55.getLocation();
    var0.setAddress(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null\nnull\nnull"+ "'", var25.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var56.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test137() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test137");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    java.lang.Long var30 = var16.getId();
    var16.setName("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + 1L+ "'", var30.equals(1L));

  }

  public void test138() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test138");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    boolean var19 = var17.equals((java.lang.Object)(byte)100);
    var17.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var22 = new br.com.addvisor.model.State();
    int var23 = var17.compareTo(var22);
    br.com.addvisor.model.Country var24 = var22.getCountry();
    boolean var25 = var16.equals((java.lang.Object)var22);
    java.lang.String var26 = var16.getComplement();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var26.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));

  }

  public void test139() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test139");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setComment("");
    br.com.addvisor.model.Service var3 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    java.lang.String var7 = var4.toString();
    java.lang.String var8 = var4.getPassword();
    var3.setUser(var4);
    br.com.addvisor.model.Address var10 = var3.getAddress();
    java.lang.String var11 = var3.getDescription();
    var0.setService(var3);
    br.com.addvisor.model.Service var13 = var0.getService();
    java.util.List var14 = var13.getPhones();
    var13.setDescription("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull");
    br.com.addvisor.model.User var17 = var13.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test140() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test140");


    br.com.addvisor.model.City var14 = new br.com.addvisor.model.City();
    var14.setName("hi!");
    var14.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.getComplement();
    java.lang.String var21 = var19.toString();
    boolean var22 = var14.equals((java.lang.Object)var21);
    br.com.addvisor.model.User var23 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var14);
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var14);
    var14.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var14);
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var14);
    var14.setId((java.lang.Long)0L);
    var14.setName("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.State var33 = var14.getState();
    java.lang.String var34 = var14.toString();
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address("Evaluate [id=null, user=null, service=null, note=null, comment=null]\nService [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]\nnull\nnull\nnull", "21c96d96756cfeed7f71110d9cb1788b", var14);
    var14.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var34.equals("Country [id=null, name=null, acronym=null]"));

  }

  public void test141() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test141");


    br.com.addvisor.model.City var14 = new br.com.addvisor.model.City();
    var14.setName("hi!");
    var14.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.getComplement();
    java.lang.String var21 = var19.toString();
    boolean var22 = var14.equals((java.lang.Object)var21);
    br.com.addvisor.model.User var23 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var14);
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var14);
    var14.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var14);
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var14);
    var14.setId((java.lang.Long)0L);
    var14.setName("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.State var33 = var14.getState();
    java.lang.String var34 = var14.toString();
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address("Evaluate [id=null, user=null, service=null, note=null, comment=null]\nService [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]\nnull\nnull\nnull", "21c96d96756cfeed7f71110d9cb1788b", var14);
    br.com.addvisor.model.State var36 = var14.getState();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var34.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);

  }

  public void test142() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test142");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var3 = var0.getService();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var9 = var4.getService();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    java.lang.String var15 = var10.getPhone();
    var4.setUser(var10);
    br.com.addvisor.model.Service var17 = new br.com.addvisor.model.Service();
    java.lang.String var18 = var17.toString();
    var17.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var21 = var17.getAddress();
    var17.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getName();
    br.com.addvisor.model.Evaluate var27 = new br.com.addvisor.model.Evaluate(var10, var17, (java.lang.Float)1.0f, "");
    var0.setService(var17);
    java.lang.Float var29 = var17.getMedia();
    br.com.addvisor.model.User var30 = var17.getUser();
    var17.setMedia((java.lang.Float)(-1.0f));
    var17.setName("4238a597ad0f3ff8363f52f6e8c3507");
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.Map var36 = var35.getContacts();
    java.util.Map var37 = var35.getContacts();
    var35.addContact("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]", "null\nnull\nnull - null");
    boolean var41 = var17.equals((java.lang.Object)var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var18.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);

  }

  public void test143() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test143");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    var9.setNames(var12);
    java.util.List var14 = var9.getNumbers();
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    java.util.List var24 = var22.getNumbers();
    br.com.addvisor.model.Agenda var25 = new br.com.addvisor.model.Agenda();
    java.util.List var26 = var25.getNames();
    java.util.List var27 = var25.getNumbers();
    var22.setNames(var27);
    var15.setNames(var27);
    var9.setNumbers(var27);
    var0.setPhones(var27);
    var0.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var0.setName("Country [id=100, name=null, acronym=hi!]");
    java.lang.Long var36 = var0.getId();
    java.lang.String var37 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "Service [id=null, name=Country [id=100, name=null, acronym=hi!], description=null, tags=null, media=null, address=null, category=null, phones=[]]"+ "'", var37.equals("Service [id=null, name=Country [id=100, name=null, acronym=hi!], description=null, tags=null, media=null, address=null, category=null, phones=[]]"));

  }

  public void test144() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test144");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var12 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    boolean var15 = var13.equals((java.lang.Object)(-1L));
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.getPassword();
    var12.setUser(var13);
    br.com.addvisor.model.Address var19 = var12.getAddress();
    java.lang.String var20 = var12.getName();
    var12.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var23 = var12.getName();
    br.com.addvisor.model.Evaluate var26 = new br.com.addvisor.model.Evaluate(var0, var12, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.enums.ServiceCat var27 = var12.getCategory();
    var12.setDescription("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    java.lang.Float var30 = var12.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var16.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test145() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test145");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    java.lang.String var30 = var16.getTags();
    var16.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var33 = var16.getAddress();
    br.com.addvisor.model.Service var34 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    java.lang.String var39 = var35.getPassword();
    var34.setUser(var35);
    br.com.addvisor.model.Address var41 = var34.getAddress();
    br.com.addvisor.model.Address var42 = new br.com.addvisor.model.Address();
    java.lang.String var43 = var42.getComplement();
    java.lang.String var44 = var42.toString();
    br.com.addvisor.model.City var45 = var42.getCity();
    br.com.addvisor.model.State var46 = new br.com.addvisor.model.State();
    var46.setId((java.lang.Long)1L);
    var46.setName("null\nnull\nnull");
    var46.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var53 = var46.getUf();
    boolean var54 = var42.equals((java.lang.Object)var46);
    var34.setAddress(var42);
    br.com.addvisor.model.Address var56 = new br.com.addvisor.model.Address();
    java.lang.String var57 = var56.getComplement();
    java.lang.String var58 = var56.toString();
    var56.setId((java.lang.Long)1L);
    java.lang.Long var61 = var56.getId();
    java.lang.String var62 = var56.getLocation();
    var34.setAddress(var56);
    var16.setAddress(var56);
    br.com.addvisor.model.City var65 = var56.getCity();
    var56.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null\nnull\nnull"+ "'", var44.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "null\nnull\nnull"+ "'", var58.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + 1L+ "'", var61.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);

  }

  public void test146() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test146");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    java.lang.Long var3 = var0.getId();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    java.lang.Integer var14 = var13.getId();
    var9.setCountry(var13);
    br.com.addvisor.model.Country var16 = new br.com.addvisor.model.Country();
    java.lang.Integer var17 = var16.getId();
    java.lang.String var18 = var16.getName();
    var9.setCountry(var16);
    int var20 = var0.compareTo(var9);
    var9.setName("Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=null, comment=null]");
    var9.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);

  }

  public void test147() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test147");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var16.setDescription("User [id=100, name=null, email=User [id=10, name=null, email=null, password=bab90b8667e900a415ffe18829d9e6f9, phone= - , city=null], password=469817e2fa792793ebc0bb601818134b, phone=null, city=null]");
    var16.setTags("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Evaluate [id=0, user=null, service=null, note=null, comment=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);

  }

  public void test148() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test148");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    br.com.addvisor.model.Agenda var7 = new br.com.addvisor.model.Agenda();
    java.util.List var8 = var7.getNames();
    java.util.List var9 = var7.getNumbers();
    br.com.addvisor.model.Agenda var10 = new br.com.addvisor.model.Agenda();
    java.util.List var11 = var10.getNames();
    java.util.List var12 = var10.getNumbers();
    var7.setNames(var12);
    var0.setNames(var12);
    var0.addContact("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var18.addContact("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    java.util.List var26 = var24.getNumbers();
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    java.util.List var29 = var27.getNumbers();
    var24.setNames(var29);
    var24.addContact("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.util.List var34 = var24.getNames();
    var18.setNames(var34);
    var0.setNames(var34);
    var0.addContact("Evaluate [id=0, user=User [id=-1, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], service=null, note=null, comment=null]", "Evaluate [id=-1, user=User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test149() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test149");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPassword();
    var0.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.Evaluate var8 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    boolean var14 = var8.equals((java.lang.Object)var9);
    br.com.addvisor.model.Service var15 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var16 = new br.com.addvisor.model.User();
    boolean var18 = var16.equals((java.lang.Object)(-1L));
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = var16.getPassword();
    var15.setUser(var16);
    br.com.addvisor.model.Address var22 = var15.getAddress();
    java.lang.String var23 = var15.getDescription();
    boolean var24 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.Evaluate var25 = new br.com.addvisor.model.Evaluate();
    var25.setId((java.lang.Long)10L);
    var25.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var30 = var25.getUser();
    java.lang.Long var31 = var25.getId();
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    boolean var35 = var33.equals((java.lang.Object)(-1L));
    java.lang.String var36 = var33.toString();
    java.lang.String var37 = var33.getPassword();
    var32.setUser(var33);
    br.com.addvisor.model.Address var39 = var32.getAddress();
    java.lang.String var40 = var32.getDescription();
    var25.setService(var32);
    boolean var42 = var15.equals((java.lang.Object)var32);
    br.com.addvisor.model.User var43 = new br.com.addvisor.model.User();
    boolean var45 = var43.equals((java.lang.Object)(-1L));
    java.lang.String var46 = var43.toString();
    java.lang.String var47 = var43.getPassword();
    java.lang.String var48 = var43.getName();
    boolean var49 = var15.equals((java.lang.Object)var43);
    java.lang.Float var50 = var15.getMedia();
    br.com.addvisor.model.Evaluate var53 = new br.com.addvisor.model.Evaluate(var0, var15, (java.lang.Float)0.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var53.setNote((java.lang.Float)(-1.0f));
    var53.setId((java.lang.Long)100L);
    var53.setNote((java.lang.Float)0.0f);
    br.com.addvisor.model.Service var60 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var61 = new br.com.addvisor.model.User();
    boolean var63 = var61.equals((java.lang.Object)(-1L));
    java.lang.String var64 = var61.toString();
    java.lang.String var65 = var61.getPassword();
    var60.setUser(var61);
    br.com.addvisor.model.Address var67 = var60.getAddress();
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address();
    java.lang.String var69 = var68.getComplement();
    java.lang.String var70 = var68.toString();
    br.com.addvisor.model.City var71 = var68.getCity();
    br.com.addvisor.model.State var72 = new br.com.addvisor.model.State();
    var72.setId((java.lang.Long)1L);
    var72.setName("null\nnull\nnull");
    var72.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var79 = var72.getUf();
    boolean var80 = var68.equals((java.lang.Object)var72);
    var60.setAddress(var68);
    var60.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var84 = var60.getDescription();
    var60.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var87 = new br.com.addvisor.model.User();
    boolean var89 = var87.equals((java.lang.Object)(-1L));
    java.lang.String var90 = var87.toString();
    java.lang.String var91 = var87.getPassword();
    java.lang.String var92 = var87.getName();
    java.lang.String var93 = var87.getPassword();
    var60.setUser(var87);
    var53.setService(var60);
    java.lang.String var96 = var60.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var19.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + 0L+ "'", var31.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var46.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var64.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "null\nnull\nnull"+ "'", var70.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var90 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var90.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var96);

  }

  public void test150() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test150");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    var0.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setEmail("hi!");
    java.lang.String var8 = var0.getEmail();
    br.com.addvisor.model.City var11 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var12 = var11.getState();
    java.lang.Long var13 = var11.getId();
    br.com.addvisor.model.Address var14 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var11);
    var14.setComplement("null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    java.lang.String var17 = var14.getComplement();
    br.com.addvisor.model.City var18 = var14.getCity();
    var0.setCity(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"+ "'", var17.equals("null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test151() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test151");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    var11.setId((java.lang.Long)1L);
    var11.setName("null\nnull\nnull");
    var8.setState(var11);
    java.lang.String var17 = var11.toString();
    br.com.addvisor.model.Country var18 = var11.getCountry();
    int var19 = var5.compareTo(var11);
    java.lang.Long var20 = var5.getId();
    var5.setName("Service [id=null, name=null, description=null, tags=null, media=10.0, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null\nnull\nnull - null"+ "'", var17.equals("null\nnull\nnull - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test152() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test152");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setPassword("hi!");
    java.lang.String var7 = var0.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test153() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test153");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    var18.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    var39.setId((java.lang.Long)10L);
    var39.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var44 = var39.getUser();
    boolean var45 = var35.equals((java.lang.Object)var39);
    java.lang.String var46 = var35.getPassword();
    var35.setId((java.lang.Long)0L);
    var35.setName("null\nnull\nnull");
    var18.setUser(var35);
    var35.setPhone("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    java.lang.String var54 = var35.getEmail();
    java.lang.String var55 = var35.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "null\nnull\nnull"+ "'", var55.equals("null\nnull\nnull"));

  }

  public void test154() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test154");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=[]]", "Evaluate [id=null, user=null, service=null, note=null, comment=null]\nService [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]\nnull\nnull\nnull");

  }

  public void test155() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test155");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    boolean var12 = var8.equals((java.lang.Object)100.0d);
    var0.setUser(var8);
    br.com.addvisor.model.User var14 = var0.getUser();
    java.lang.String var15 = var14.toString();
    br.com.addvisor.model.City var16 = var14.getCity();
    br.com.addvisor.model.City var17 = var14.getCity();
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    br.com.addvisor.model.Address var26 = new br.com.addvisor.model.Address();
    java.lang.String var27 = var26.getComplement();
    java.lang.String var28 = var26.toString();
    br.com.addvisor.model.City var29 = var26.getCity();
    br.com.addvisor.model.State var30 = new br.com.addvisor.model.State();
    var30.setId((java.lang.Long)1L);
    var30.setName("null\nnull\nnull");
    var30.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var37 = var30.getUf();
    boolean var38 = var26.equals((java.lang.Object)var30);
    var18.setAddress(var26);
    var18.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var42 = var18.getDescription();
    var18.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var45 = new br.com.addvisor.model.User();
    boolean var47 = var45.equals((java.lang.Object)(-1L));
    java.lang.String var48 = var45.toString();
    java.lang.String var49 = var45.getPassword();
    java.lang.String var50 = var45.getName();
    java.lang.String var51 = var45.getPassword();
    var18.setUser(var45);
    boolean var53 = var14.equals((java.lang.Object)var18);
    var14.setName("User [id=-1, name=Evaluate [id=0, user=null, service=null, note=null, comment=null]\n\nnull, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    java.lang.String var56 = var14.getDDD();
    var14.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var15.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null\nnull\nnull"+ "'", var28.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var48.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);

  }

  public void test156() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test156");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]", "Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null] - null");

  }

  public void test157() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test157");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getDescription();
    java.lang.Float var9 = var0.getMedia();
    var0.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test158() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test158");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    var9.setId((java.lang.Long)1L);
    var9.setName("null\nnull\nnull");
    var9.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var16 = var9.getUf();
    java.lang.String var17 = var9.getName();
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.String var19 = var18.getAcronym();
    boolean var20 = var9.equals((java.lang.Object)var18);
    java.lang.String var21 = var18.getAcronym();
    java.lang.String var22 = var18.toString();
    var0.setCountry(var18);
    java.lang.String var24 = var18.getName();
    java.lang.String var25 = var18.getAcronym();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var17.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var22.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test159() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test159");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]", "null\nhi!\nnull\nnull\nnull");
    br.com.addvisor.model.Service var3 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    java.lang.String var7 = var4.toString();
    java.lang.String var8 = var4.getPassword();
    var3.setUser(var4);
    br.com.addvisor.model.Address var10 = var3.getAddress();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    boolean var15 = var11.equals((java.lang.Object)100.0d);
    var3.setUser(var11);
    br.com.addvisor.model.User var17 = var3.getUser();
    java.lang.Float var18 = var3.getMedia();
    br.com.addvisor.model.Evaluate var21 = new br.com.addvisor.model.Evaluate(var2, var3, (java.lang.Float)10.0f, "Evaluate [id=100, user=User [id=null, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test160() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test160");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.getPrice("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test161() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test161");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var3 = var2.getState();
    java.lang.Long var4 = var2.getId();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var2);
    br.com.addvisor.model.City var6 = var5.getCity();
    var6.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\nnull - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test162() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test162");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.Service var1 = var0.getService();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var4);
    br.com.addvisor.model.State var6 = new br.com.addvisor.model.State();
    boolean var8 = var6.equals((java.lang.Object)(byte)100);
    var6.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    int var12 = var6.compareTo(var11);
    var11.setName("");
    var4.setState(var11);
    var11.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    int var24 = var18.compareTo(var23);
    var23.setName("");
    int var27 = var11.compareTo(var23);
    boolean var28 = var0.equals((java.lang.Object)var11);
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "");
    var0.setUser(var31);
    var31.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address();
    java.lang.String var36 = var35.toString();
    br.com.addvisor.model.City var37 = new br.com.addvisor.model.City();
    var37.setName("hi!");
    var35.setCity(var37);
    var37.setId((java.lang.Long)10L);
    br.com.addvisor.model.City var43 = new br.com.addvisor.model.City();
    var43.setName("hi!");
    var43.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var48 = new br.com.addvisor.model.Address();
    java.lang.String var49 = var48.getComplement();
    java.lang.String var50 = var48.toString();
    boolean var51 = var43.equals((java.lang.Object)var50);
    br.com.addvisor.model.State var52 = new br.com.addvisor.model.State();
    var52.setId((java.lang.Long)1L);
    var52.setName("null\nnull\nnull");
    var52.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var59 = var52.getUf();
    var43.setState(var52);
    boolean var61 = var37.equals((java.lang.Object)var43);
    var31.setCity(var43);
    java.lang.String var63 = var43.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null\nnull\nnull"+ "'", var36.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "null\nnull\nnull"+ "'", var50.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "null\nnull\nnull"+ "'", var63.equals("null\nnull\nnull"));

  }

  public void test163() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test163");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("null - null", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    var2.setEmail("7250c560acbd5b52abb473bb886fa1ff");

  }

  public void test164() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test164");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    var0.setLocation("");
    java.lang.String var8 = var0.getLocation();
    java.lang.String var9 = var0.getComplement();
    java.lang.String var10 = var0.toString();
    java.lang.String var11 = var0.getComplement();
    var0.setId((java.lang.Long)100L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "\nnull\nhi!"+ "'", var10.equals("\nnull\nhi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test165() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test165");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.toString();
    br.com.addvisor.model.City var7 = new br.com.addvisor.model.City();
    var7.setName("hi!");
    var5.setCity(var7);
    java.lang.String var11 = var7.getName();
    boolean var12 = var0.equals((java.lang.Object)var11);
    var0.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null\nnull\nnull"+ "'", var6.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "hi!"+ "'", var11.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);

  }

  public void test166() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test166");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getPassword();
    java.lang.String var8 = var0.getEmail();
    var0.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test167() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test167");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setId((java.lang.Long)100L);
    java.lang.String var9 = var0.toString();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.Service var12 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    boolean var15 = var13.equals((java.lang.Object)(-1L));
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.getPassword();
    var12.setUser(var13);
    br.com.addvisor.model.Address var19 = var12.getAddress();
    java.lang.String var20 = var12.getName();
    var12.setId((java.lang.Long)1L);
    java.lang.Long var23 = var12.getId();
    java.util.List var24 = var12.getPhones();
    br.com.addvisor.model.Evaluate var25 = new br.com.addvisor.model.Evaluate();
    var25.setId((java.lang.Long)10L);
    var25.setId((java.lang.Long)0L);
    java.lang.Float var30 = var25.getNote();
    br.com.addvisor.model.Service var31 = new br.com.addvisor.model.Service();
    java.lang.String var32 = var31.toString();
    var25.setService(var31);
    var25.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var36 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var37 = new br.com.addvisor.model.State();
    boolean var39 = var37.equals((java.lang.Object)(byte)100);
    var37.setUf("null\nnull\nnull");
    boolean var42 = var36.equals((java.lang.Object)var37);
    br.com.addvisor.model.Service var43 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var44 = new br.com.addvisor.model.User();
    boolean var46 = var44.equals((java.lang.Object)(-1L));
    java.lang.String var47 = var44.toString();
    java.lang.String var48 = var44.getPassword();
    var43.setUser(var44);
    br.com.addvisor.model.Address var50 = var43.getAddress();
    var36.setService(var43);
    br.com.addvisor.model.enums.ServiceCat var52 = var43.getCategory();
    br.com.addvisor.model.Address var53 = new br.com.addvisor.model.Address();
    var53.setId((java.lang.Long)0L);
    var43.setAddress(var53);
    boolean var57 = var25.equals((java.lang.Object)var43);
    java.lang.String var58 = var43.getName();
    br.com.addvisor.model.User var59 = var43.getUser();
    boolean var60 = var12.equals((java.lang.Object)var43);
    java.lang.String var61 = var43.getTags();
    var0.setService(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var9.equals("Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var16.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 1L+ "'", var23.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var32.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var47.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);

  }

  public void test168() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test168");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=0, user=null, service=null, note=null, comment=null]\n\nnull");

  }

  public void test169() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test169");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getDDD();
    java.lang.String var8 = var0.getEmail();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test170() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test170");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Float var10 = var0.getNote();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    br.com.addvisor.model.Evaluate var15 = new br.com.addvisor.model.Evaluate();
    var15.setId((java.lang.Long)10L);
    var15.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var20 = var15.getUser();
    boolean var21 = var11.equals((java.lang.Object)var15);
    java.lang.String var22 = var11.getPassword();
    var0.setUser(var11);
    var11.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test171() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test171");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    var0.setLocation("hi!");
    var0.setComplement("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    var0.setId((java.lang.Long)1L);
    java.lang.String var25 = var0.getComplement();
    br.com.addvisor.model.Service var26 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User();
    boolean var29 = var27.equals((java.lang.Object)(-1L));
    java.lang.String var30 = var27.toString();
    java.lang.String var31 = var27.getPassword();
    var26.setUser(var27);
    br.com.addvisor.model.Address var33 = var26.getAddress();
    java.lang.String var34 = var26.getName();
    br.com.addvisor.model.City var35 = new br.com.addvisor.model.City();
    var35.setName("hi!");
    var35.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var40 = new br.com.addvisor.model.Address();
    java.lang.String var41 = var40.getComplement();
    java.lang.String var42 = var40.toString();
    boolean var43 = var35.equals((java.lang.Object)var42);
    br.com.addvisor.model.State var44 = new br.com.addvisor.model.State();
    var44.setId((java.lang.Long)1L);
    var44.setName("null\nnull\nnull");
    var44.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var51 = var44.getUf();
    var35.setState(var44);
    boolean var53 = var26.equals((java.lang.Object)var35);
    var35.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.User var58 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "");
    java.lang.String var59 = var58.getPhone();
    boolean var60 = var35.equals((java.lang.Object)var59);
    var0.setCity(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]"+ "'", var25.equals("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var30.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "null\nnull\nnull"+ "'", var42.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var59.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);

  }

  public void test172() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test172");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    java.lang.String var1 = var0.toString();
    var0.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var4 = var0.getAddress();
    java.lang.Long var5 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var1.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test173() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test173");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "");
    var2.setName("Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.Long var5 = var2.getId();
    java.lang.String var6 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "User [id=null, name=Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], email=null, password=d41d8cd98f00b204e9800998ecf8427e, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]"+ "'", var6.equals("User [id=null, name=Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], email=null, password=d41d8cd98f00b204e9800998ecf8427e, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]"));

  }

  public void test174() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test174");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    java.lang.String var9 = var0.getTags();
    java.lang.String var10 = var0.toString();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var13 = var0.getUser();
    java.lang.String var14 = var13.getEmail();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var10.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test175() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test175");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    var3.setName("null\nnull\nnull");
    var3.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var10 = var3.getUf();
    java.lang.String var11 = var3.getName();
    br.com.addvisor.model.Country var12 = new br.com.addvisor.model.Country();
    java.lang.String var13 = var12.getAcronym();
    boolean var14 = var3.equals((java.lang.Object)var12);
    var0.setCountry(var12);
    java.lang.Integer var16 = var12.getId();
    var12.setId((java.lang.Integer)1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test176() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test176");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.getPrice("Evaluate [id=-1, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test177() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test177");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test178() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test178");


    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    boolean var8 = var4.equals((java.lang.Object)100.0d);
    var4.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var15 = new br.com.addvisor.model.City();
    var15.setName("hi!");
    var15.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var20 = new br.com.addvisor.model.Address();
    java.lang.String var21 = var20.getComplement();
    java.lang.String var22 = var20.toString();
    boolean var23 = var15.equals((java.lang.Object)var22);
    br.com.addvisor.model.User var24 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var15);
    br.com.addvisor.model.City var27 = new br.com.addvisor.model.City();
    var27.setName("hi!");
    var27.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var32 = new br.com.addvisor.model.Address();
    java.lang.String var33 = var32.getComplement();
    java.lang.String var34 = var32.toString();
    boolean var35 = var27.equals((java.lang.Object)var34);
    br.com.addvisor.model.User var36 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var37 = new br.com.addvisor.model.State();
    var37.setId((java.lang.Long)1L);
    var37.setName("null\nnull\nnull");
    var37.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var44 = var37.getUf();
    boolean var45 = var36.equals((java.lang.Object)var37);
    var27.setState(var37);
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var27);
    int var48 = var15.compareTo(var27);
    var4.setCity(var27);
    var27.setName("\nnull\nhi!");
    java.lang.String var52 = var27.toString();
    br.com.addvisor.model.User var53 = new br.com.addvisor.model.User("Evaluate [id=0, user=User [id=-1, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], service=null, note=null, comment=null]", "Evaluate [id=null, user=null, service=null, note=10.0, comment=null]", "4238a597ad0f3ff8363f52f6e8c3507", "Us", var27);
    java.lang.String var54 = var53.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null\nnull\nnull"+ "'", var22.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null\nnull\nnull"+ "'", var34.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "\nnull\nhi!"+ "'", var52.equals("\nnull\nhi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "User [id=null, name=Evaluate [id=0, user=User [id=-1, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], service=null, note=null, comment=null], email=Evaluate [id=null, user=null, service=null, note=10.0, comment=null], password=f3bbd10077d9cef5ced80df4e3d3fbd8, phone=Us, city=\nnull\nhi!]"+ "'", var54.equals("User [id=null, name=Evaluate [id=0, user=User [id=-1, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], service=null, note=null, comment=null], email=Evaluate [id=null, user=null, service=null, note=10.0, comment=null], password=f3bbd10077d9cef5ced80df4e3d3fbd8, phone=Us, city=\nnull\nhi!]"));

  }

  public void test179() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test179");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.Service var3 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    java.lang.String var7 = var4.toString();
    java.lang.String var8 = var4.getPassword();
    var3.setUser(var4);
    br.com.addvisor.model.Address var10 = var3.getAddress();
    java.lang.String var11 = var3.getName();
    java.lang.String var12 = var3.getDescription();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    var14.setId((java.lang.Long)1L);
    var14.setName("null\nnull\nnull");
    var14.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var21 = var14.getUf();
    boolean var22 = var13.equals((java.lang.Object)var14);
    br.com.addvisor.model.Service var23 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var24 = new br.com.addvisor.model.User();
    boolean var26 = var24.equals((java.lang.Object)(-1L));
    java.lang.String var27 = var24.toString();
    java.lang.String var28 = var24.getPassword();
    var23.setUser(var24);
    br.com.addvisor.model.Address var30 = var23.getAddress();
    java.lang.String var31 = var23.getName();
    br.com.addvisor.model.City var32 = new br.com.addvisor.model.City();
    var32.setName("hi!");
    var32.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    boolean var40 = var32.equals((java.lang.Object)var39);
    br.com.addvisor.model.State var41 = new br.com.addvisor.model.State();
    var41.setId((java.lang.Long)1L);
    var41.setName("null\nnull\nnull");
    var41.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var48 = var41.getUf();
    var32.setState(var41);
    boolean var50 = var23.equals((java.lang.Object)var32);
    br.com.addvisor.model.Evaluate var53 = new br.com.addvisor.model.Evaluate(var13, var23, (java.lang.Float)100.0f, "");
    var3.setUser(var13);
    br.com.addvisor.model.Evaluate var55 = new br.com.addvisor.model.Evaluate();
    var55.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var58 = var55.getService();
    br.com.addvisor.model.Evaluate var59 = new br.com.addvisor.model.Evaluate();
    var59.setId((java.lang.Long)10L);
    var59.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var64 = var59.getService();
    br.com.addvisor.model.User var65 = new br.com.addvisor.model.User();
    boolean var67 = var65.equals((java.lang.Object)(-1L));
    java.lang.String var68 = var65.toString();
    java.lang.String var69 = var65.getPassword();
    java.lang.String var70 = var65.getPhone();
    var59.setUser(var65);
    br.com.addvisor.model.Service var72 = new br.com.addvisor.model.Service();
    java.lang.String var73 = var72.toString();
    var72.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var76 = var72.getAddress();
    var72.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var79 = var72.getName();
    br.com.addvisor.model.Evaluate var82 = new br.com.addvisor.model.Evaluate(var65, var72, (java.lang.Float)1.0f, "");
    var55.setService(var72);
    java.lang.Float var84 = var72.getMedia();
    br.com.addvisor.model.Evaluate var87 = new br.com.addvisor.model.Evaluate(var13, var72, (java.lang.Float)100.0f, "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.Long var88 = var87.getId();
    br.com.addvisor.model.Service var89 = var87.getService();
    br.com.addvisor.model.enums.ServiceCat var90 = var89.getCategory();
    br.com.addvisor.model.Evaluate var93 = new br.com.addvisor.model.Evaluate(var2, var89, (java.lang.Float)10.0f, "null - null - null");
    java.lang.Float var94 = var93.getNote();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var27.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var68.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var73.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var94 + "' != '" + 10.0f+ "'", var94.equals(10.0f));

  }

  public void test180() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test180");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    var0.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var6 = new br.com.addvisor.model.Address();
    java.lang.String var7 = var6.toString();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    var6.setCity(var8);
    var0.setCity(var8);
    java.lang.String var15 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test181() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test181");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var0.setPhones(var11);
    java.lang.Float var13 = var0.getMedia();
    java.lang.String var14 = var0.getTags();
    br.com.addvisor.model.Address var15 = var0.getAddress();
    br.com.addvisor.model.Address var16 = var0.getAddress();
    br.com.addvisor.model.User var17 = var0.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test182() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test182");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.Service var1 = var0.getService();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var4);
    br.com.addvisor.model.State var6 = new br.com.addvisor.model.State();
    boolean var8 = var6.equals((java.lang.Object)(byte)100);
    var6.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    int var12 = var6.compareTo(var11);
    var11.setName("");
    var4.setState(var11);
    var11.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    int var24 = var18.compareTo(var23);
    var23.setName("");
    int var27 = var11.compareTo(var23);
    boolean var28 = var0.equals((java.lang.Object)var11);
    var11.setName("User [id=0, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    var39.setId((java.lang.Long)10L);
    var39.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var44 = var39.getUser();
    boolean var45 = var35.equals((java.lang.Object)var39);
    java.lang.String var46 = var35.getPassword();
    var35.setId((java.lang.Long)(-1L));
    var35.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var55 = new br.com.addvisor.model.City();
    var55.setName("hi!");
    var55.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var60 = new br.com.addvisor.model.Address();
    java.lang.String var61 = var60.getComplement();
    java.lang.String var62 = var60.toString();
    boolean var63 = var55.equals((java.lang.Object)var62);
    br.com.addvisor.model.User var64 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var55);
    br.com.addvisor.model.City var67 = new br.com.addvisor.model.City();
    var67.setName("hi!");
    var67.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var72 = new br.com.addvisor.model.Address();
    java.lang.String var73 = var72.getComplement();
    java.lang.String var74 = var72.toString();
    boolean var75 = var67.equals((java.lang.Object)var74);
    br.com.addvisor.model.User var76 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var77 = new br.com.addvisor.model.State();
    var77.setId((java.lang.Long)1L);
    var77.setName("null\nnull\nnull");
    var77.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var84 = var77.getUf();
    boolean var85 = var76.equals((java.lang.Object)var77);
    var67.setState(var77);
    br.com.addvisor.model.Address var87 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var67);
    int var88 = var55.compareTo(var67);
    var35.setCity(var55);
    br.com.addvisor.model.User var90 = new br.com.addvisor.model.User("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]", " - null", "null - null\nnull\nnull", "Country [id=null, name=null, acronym=null]", var55);
    boolean var91 = var11.equals((java.lang.Object)"null - null\nnull\nnull");
    var11.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "null\nnull\nnull"+ "'", var62.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var74 + "' != '" + "null\nnull\nnull"+ "'", var74.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test183() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test183");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=[]]", " -");
    java.lang.Long var3 = var2.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test184() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test184");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    java.lang.String var11 = var6.getPhone();
    var0.setUser(var6);
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    java.lang.String var14 = var13.toString();
    var13.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var17 = var13.getAddress();
    var13.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var20 = var13.getName();
    br.com.addvisor.model.Evaluate var23 = new br.com.addvisor.model.Evaluate(var6, var13, (java.lang.Float)1.0f, "");
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var25 = new br.com.addvisor.model.State();
    boolean var27 = var25.equals((java.lang.Object)(byte)100);
    var25.setUf("null\nnull\nnull");
    boolean var30 = var24.equals((java.lang.Object)var25);
    br.com.addvisor.model.Service var31 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User();
    boolean var34 = var32.equals((java.lang.Object)(-1L));
    java.lang.String var35 = var32.toString();
    java.lang.String var36 = var32.getPassword();
    var31.setUser(var32);
    br.com.addvisor.model.Address var38 = var31.getAddress();
    java.lang.String var39 = var31.getDescription();
    boolean var40 = var24.equals((java.lang.Object)var31);
    br.com.addvisor.model.Evaluate var41 = new br.com.addvisor.model.Evaluate();
    var41.setId((java.lang.Long)10L);
    var41.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var46 = var41.getUser();
    java.lang.Long var47 = var41.getId();
    br.com.addvisor.model.Service var48 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var49 = new br.com.addvisor.model.User();
    boolean var51 = var49.equals((java.lang.Object)(-1L));
    java.lang.String var52 = var49.toString();
    java.lang.String var53 = var49.getPassword();
    var48.setUser(var49);
    br.com.addvisor.model.Address var55 = var48.getAddress();
    java.lang.String var56 = var48.getDescription();
    var41.setService(var48);
    boolean var58 = var31.equals((java.lang.Object)var48);
    br.com.addvisor.model.User var59 = new br.com.addvisor.model.User();
    boolean var61 = var59.equals((java.lang.Object)(-1L));
    java.lang.String var62 = var59.getDDD();
    var59.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var65 = var48.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var68 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    var48.setUser(var68);
    java.lang.String var70 = var48.getName();
    boolean var71 = var13.equals((java.lang.Object)var48);
    br.com.addvisor.model.City var74 = new br.com.addvisor.model.City();
    var74.setName("hi!");
    java.lang.String var77 = var74.getName();
    br.com.addvisor.model.Address var78 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "", var74);
    var78.setLocation("Country [id=null, name=null, acronym=null]");
    var48.setAddress(var78);
    var78.setId((java.lang.Long)10L);
    java.lang.Long var84 = var78.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var14.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var35.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + 0L+ "'", var47.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var52.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + 10L+ "'", var84.equals(10L));

  }

  public void test185() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test185");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    var2.setName("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    java.lang.Long var8 = var2.getId();
    java.lang.Long var9 = var2.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test186() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test186");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.City var17 = var16.getCity();
    var16.setId((java.lang.Long)10L);
    java.lang.String var20 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null\nnull\nnull\nUser [id=null, name=null, email=null, password=null, phone=null, city=null]\nnull\nnull\nnull"+ "'", var20.equals("null\nnull\nnull\nUser [id=null, name=null, email=null, password=null, phone=null, city=null]\nnull\nnull\nnull"));

  }

  public void test187() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test187");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setUf("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    var3.setName("null\nnull\nnull");
    var3.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var10 = var3.getUf();
    java.lang.String var11 = var3.getName();
    br.com.addvisor.model.Country var12 = new br.com.addvisor.model.Country();
    java.lang.String var13 = var12.getAcronym();
    boolean var14 = var3.equals((java.lang.Object)var12);
    java.lang.String var15 = var12.getAcronym();
    var12.setAcronym("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var12.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var20 = var12.toString();
    var0.setCountry(var12);
    br.com.addvisor.model.State var22 = new br.com.addvisor.model.State();
    var22.setId((java.lang.Long)1L);
    var22.setName("null\nnull\nnull");
    var22.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var29 = var22.getUf();
    br.com.addvisor.model.Country var30 = var22.getCountry();
    br.com.addvisor.model.State var31 = new br.com.addvisor.model.State();
    boolean var33 = var31.equals((java.lang.Object)(byte)100);
    var31.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var36 = new br.com.addvisor.model.State();
    int var37 = var31.compareTo(var36);
    var36.setName("");
    br.com.addvisor.model.Country var40 = new br.com.addvisor.model.Country();
    java.lang.Integer var41 = var40.getId();
    var36.setCountry(var40);
    br.com.addvisor.model.Country var43 = new br.com.addvisor.model.Country();
    var36.setCountry(var43);
    int var45 = var22.compareTo(var36);
    br.com.addvisor.model.City var48 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var49 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var48);
    br.com.addvisor.model.State var50 = new br.com.addvisor.model.State();
    boolean var52 = var50.equals((java.lang.Object)(byte)100);
    var50.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var55 = new br.com.addvisor.model.State();
    int var56 = var50.compareTo(var55);
    var55.setName("");
    var48.setState(var55);
    var55.setName("null\nnull\nnull");
    int var62 = var36.compareTo(var55);
    java.lang.Long var63 = var55.getId();
    java.lang.String var64 = var55.getName();
    int var65 = var0.compareTo(var55);
    java.lang.String var66 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]"+ "'", var20.equals("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "null\nnull\nnull"+ "'", var64.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "null - Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var66.equals("null - Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test188() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test188");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    var5.setName("");
    br.com.addvisor.model.Country var9 = new br.com.addvisor.model.Country();
    java.lang.Integer var10 = var9.getId();
    var5.setCountry(var9);
    java.lang.String var12 = var9.getName();
    var9.setId((java.lang.Integer)10);
    br.com.addvisor.model.Evaluate var15 = new br.com.addvisor.model.Evaluate();
    var15.setId((java.lang.Long)10L);
    var15.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var20 = var15.getService();
    br.com.addvisor.model.User var23 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var24 = var23.getId();
    var23.setId((java.lang.Long)(-1L));
    var23.setPhone("null\nnull\nnull");
    java.lang.String var29 = var23.getEmail();
    var23.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var15.setUser(var23);
    boolean var33 = var9.equals((java.lang.Object)var23);
    java.lang.String var34 = var9.toString();
    var9.setAcronym("User [id=null, name=null, email=null, password=bab90b8667e900a415ffe18829d9e6f9, phone=, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "Country [id=10, name=null, acronym=null]"+ "'", var34.equals("Country [id=10, name=null, acronym=null]"));

  }

  public void test189() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test189");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    var5.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var12 = new br.com.addvisor.model.Country();
    java.lang.Integer var13 = var12.getId();
    java.lang.String var14 = var12.getName();
    var12.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var17 = var12.getAcronym();
    var12.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var5.setCountry(var12);
    java.lang.String var21 = var5.toString();
    java.lang.String var22 = var5.getUf();
    java.lang.String var23 = var5.toString();
    br.com.addvisor.model.State var24 = new br.com.addvisor.model.State();
    boolean var26 = var24.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.Country var27 = var24.getCountry();
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    boolean var30 = var28.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.State var31 = new br.com.addvisor.model.State();
    boolean var33 = var31.equals((java.lang.Object)(byte)100);
    var31.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var36 = new br.com.addvisor.model.State();
    int var37 = var31.compareTo(var36);
    java.lang.String var38 = var36.getName();
    var36.setId((java.lang.Long)10L);
    java.lang.Long var41 = var36.getId();
    int var42 = var28.compareTo(var36);
    int var43 = var24.compareTo(var36);
    br.com.addvisor.model.State var44 = new br.com.addvisor.model.State();
    boolean var46 = var44.equals((java.lang.Object)(byte)100);
    var44.setUf("null\nnull\nnull");
    java.lang.String var49 = var44.getName();
    br.com.addvisor.model.Country var50 = var44.getCountry();
    java.lang.Long var51 = var44.getId();
    int var52 = var24.compareTo(var44);
    int var53 = var5.compareTo(var24);
    java.lang.String var54 = var5.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var17.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var21.equals("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var22.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var23.equals("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + 10L+ "'", var41.equals(10L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var54.equals("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test190() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test190");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.Service var6 = var0.getService();
    java.lang.Long var7 = var0.getId();
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var8.setUser(var9);
    br.com.addvisor.model.Address var15 = var8.getAddress();
    java.lang.String var16 = var8.getName();
    br.com.addvisor.model.Address var17 = var8.getAddress();
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User();
    boolean var20 = var18.equals((java.lang.Object)(-1L));
    java.lang.String var21 = var18.toString();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate();
    var22.setId((java.lang.Long)10L);
    var22.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var27 = var22.getUser();
    boolean var28 = var18.equals((java.lang.Object)var22);
    java.lang.String var29 = var18.getPassword();
    var18.setId((java.lang.Long)(-1L));
    java.lang.String var32 = var18.getPhone();
    var8.setUser(var18);
    br.com.addvisor.model.Address var34 = var8.getAddress();
    var8.setTags("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    var0.setService(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + 0L+ "'", var7.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var21.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);

  }

  public void test191() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test191");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    var16.setDescription("Evaluate [id=null, user=null, service=null, note=null, comment=null]");
    java.util.List var32 = var16.getPhones();
    var16.setTags("Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    java.lang.Float var35 = var16.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);

  }

  public void test192() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test192");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.Service var11 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var12 = new br.com.addvisor.model.User();
    boolean var14 = var12.equals((java.lang.Object)(-1L));
    java.lang.String var15 = var12.toString();
    java.lang.String var16 = var12.getPassword();
    var11.setUser(var12);
    br.com.addvisor.model.Address var18 = var11.getAddress();
    java.lang.String var19 = var11.getName();
    var11.setId((java.lang.Long)1L);
    java.lang.Long var22 = var11.getId();
    var11.setDescription("null - null\nnull\nnull");
    boolean var25 = var0.equals((java.lang.Object)var11);
    java.lang.String var26 = var11.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var15.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + 1L+ "'", var22.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "Service [id=1, name=null, description=null - null\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var26.equals("Service [id=1, name=null, description=null - null\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test193() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test193");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var0.setId((java.lang.Long)0L);
    java.lang.Long var12 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + 0L+ "'", var12.equals(0L));

  }

  public void test194() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test194");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    br.com.addvisor.model.Country var10 = var5.getCountry();
    java.lang.String var11 = var5.toString();
    br.com.addvisor.model.Evaluate var12 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var13 = new br.com.addvisor.model.State();
    boolean var15 = var13.equals((java.lang.Object)(byte)100);
    var13.setUf("null\nnull\nnull");
    boolean var18 = var12.equals((java.lang.Object)var13);
    br.com.addvisor.model.Service var19 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var20 = new br.com.addvisor.model.User();
    boolean var22 = var20.equals((java.lang.Object)(-1L));
    java.lang.String var23 = var20.toString();
    java.lang.String var24 = var20.getPassword();
    var19.setUser(var20);
    br.com.addvisor.model.Address var26 = var19.getAddress();
    java.lang.String var27 = var19.getDescription();
    boolean var28 = var12.equals((java.lang.Object)var19);
    br.com.addvisor.model.City var29 = new br.com.addvisor.model.City();
    var29.setName("hi!");
    var29.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    java.lang.String var35 = var34.getComplement();
    java.lang.String var36 = var34.toString();
    boolean var37 = var29.equals((java.lang.Object)var36);
    br.com.addvisor.model.State var38 = new br.com.addvisor.model.State();
    var38.setId((java.lang.Long)1L);
    var38.setName("null\nnull\nnull");
    var38.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var45 = var38.getUf();
    var29.setState(var38);
    br.com.addvisor.model.State var47 = var29.getState();
    var29.setName("null - null\nnull\nnull");
    boolean var50 = var12.equals((java.lang.Object)var29);
    br.com.addvisor.model.State var51 = new br.com.addvisor.model.State();
    boolean var53 = var51.equals((java.lang.Object)(byte)100);
    var51.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var56 = new br.com.addvisor.model.State();
    int var57 = var51.compareTo(var56);
    var56.setName("");
    var29.setState(var56);
    int var61 = var5.compareTo(var56);
    br.com.addvisor.model.Country var62 = new br.com.addvisor.model.Country();
    java.lang.Integer var63 = var62.getId();
    java.lang.String var64 = var62.getName();
    java.lang.String var65 = var62.getName();
    var62.setId((java.lang.Integer)100);
    var62.setAcronym("hi!");
    java.lang.String var70 = var62.toString();
    java.lang.String var71 = var62.toString();
    var5.setCountry(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null - null"+ "'", var11.equals("null - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var23.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null\nnull\nnull"+ "'", var36.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "Country [id=100, name=null, acronym=hi!]"+ "'", var70.equals("Country [id=100, name=null, acronym=hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "Country [id=100, name=null, acronym=hi!]"+ "'", var71.equals("Country [id=100, name=null, acronym=hi!]"));

  }

  public void test195() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test195");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setPassword("hi!");
    java.lang.String var7 = var0.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test196() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test196");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    var0.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.getComplement();
    java.lang.String var7 = var5.toString();
    boolean var8 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var10 = new br.com.addvisor.model.State();
    var10.setId((java.lang.Long)1L);
    var10.setName("null\nnull\nnull");
    var10.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var17 = var10.getUf();
    boolean var18 = var9.equals((java.lang.Object)var10);
    var0.setState(var10);
    br.com.addvisor.model.Evaluate var20 = new br.com.addvisor.model.Evaluate();
    var20.setId((java.lang.Long)10L);
    var20.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var25 = var20.getUser();
    boolean var26 = var0.equals((java.lang.Object)var20);
    br.com.addvisor.model.State var27 = new br.com.addvisor.model.State();
    boolean var29 = var27.equals((java.lang.Object)(byte)100);
    var27.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var32 = new br.com.addvisor.model.State();
    int var33 = var27.compareTo(var32);
    java.lang.String var34 = var32.getName();
    var0.setState(var32);
    br.com.addvisor.model.State var36 = new br.com.addvisor.model.State();
    boolean var38 = var36.equals((java.lang.Object)(byte)100);
    var36.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var41 = new br.com.addvisor.model.State();
    int var42 = var36.compareTo(var41);
    var41.setName("");
    br.com.addvisor.model.Country var45 = new br.com.addvisor.model.Country();
    java.lang.Integer var46 = var45.getId();
    var41.setCountry(var45);
    java.lang.String var48 = var45.getName();
    var32.setCountry(var45);
    br.com.addvisor.model.User var50 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var51 = new br.com.addvisor.model.State();
    var51.setId((java.lang.Long)1L);
    var51.setName("null\nnull\nnull");
    var51.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.getUf();
    boolean var59 = var50.equals((java.lang.Object)var51);
    int var60 = var32.compareTo(var51);
    var51.setId((java.lang.Long)1L);
    java.lang.Long var63 = var51.getId();
    br.com.addvisor.model.State var64 = new br.com.addvisor.model.State();
    var64.setId((java.lang.Long)1L);
    var64.setName("null\nnull\nnull");
    var64.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var71 = var64.getUf();
    java.lang.String var72 = var64.getName();
    br.com.addvisor.model.Country var73 = new br.com.addvisor.model.Country();
    java.lang.String var74 = var73.getAcronym();
    boolean var75 = var64.equals((java.lang.Object)var73);
    java.lang.String var76 = var73.getAcronym();
    var51.setCountry(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + 1L+ "'", var63.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var72.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);

  }

  public void test197() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test197");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var3 = var2.getState();
    java.lang.Long var4 = var2.getId();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var2);
    var5.setComplement("");
    var5.setId((java.lang.Long)1L);
    var5.setLocation("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    br.com.addvisor.model.City var12 = var5.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test198() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test198");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    var0.setComplement("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    var0.setId((java.lang.Long)100L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));

  }

  public void test199() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test199");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    java.lang.String var9 = var0.getDescription();
    var0.setMedia((java.lang.Float)1.0f);
    java.util.List var12 = var0.getPhones();
    java.lang.Float var13 = var0.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + 1.0f+ "'", var13.equals(1.0f));

  }

  public void test200() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test200");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    var14.setCountry(var21);
    int var23 = var0.compareTo(var14);
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    boolean var30 = var28.equals((java.lang.Object)(byte)100);
    var28.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    int var34 = var28.compareTo(var33);
    var33.setName("");
    var26.setState(var33);
    var33.setName("null\nnull\nnull");
    int var40 = var14.compareTo(var33);
    br.com.addvisor.model.Country var41 = var14.getCountry();
    var14.setId((java.lang.Long)0L);
    java.lang.Long var44 = var14.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + 0L+ "'", var44.equals(0L));

  }

  public void test201() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test201");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    java.lang.String var12 = var0.getPhone();
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    var13.addContact("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var19 = new br.com.addvisor.model.Evaluate();
    var19.setId((java.lang.Long)10L);
    var19.setId((java.lang.Long)0L);
    var19.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var26 = new br.com.addvisor.model.Agenda();
    java.util.List var27 = var26.getNames();
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    var26.setNames(var29);
    java.util.List var31 = var26.getNumbers();
    boolean var32 = var19.equals((java.lang.Object)var26);
    java.util.List var33 = var26.getNumbers();
    var13.setNames(var33);
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.Map var36 = var35.getContacts();
    var13.setContacts(var36);
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    java.util.List var43 = var41.getNumbers();
    var38.setNames(var43);
    var38.addContact("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.util.List var48 = var38.getNames();
    var13.setNumbers(var48);
    boolean var50 = var0.equals((java.lang.Object)var48);
    java.lang.String var51 = var0.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);

  }

  public void test202() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test202");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.valueOf("Country [id=100, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test203() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test203");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var0.setUser(var9);
    br.com.addvisor.model.Service var15 = var0.getService();
    br.com.addvisor.model.City var18 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var19 = var18.getState();
    java.lang.Long var20 = var18.getId();
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var18);
    var21.setComplement("");
    var21.setId((java.lang.Long)1L);
    var21.setId((java.lang.Long)(-1L));
    boolean var28 = var0.equals((java.lang.Object)var21);
    br.com.addvisor.model.Service var29 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var30 = new br.com.addvisor.model.User();
    boolean var32 = var30.equals((java.lang.Object)(-1L));
    java.lang.String var33 = var30.toString();
    java.lang.String var34 = var30.getPassword();
    var29.setUser(var30);
    java.lang.String var36 = var30.getPassword();
    var0.setUser(var30);
    var0.setNote((java.lang.Float)(-1.0f));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var33.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);

  }

  public void test204() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test204");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.Country var9 = new br.com.addvisor.model.Country();
    java.lang.String var10 = var9.getAcronym();
    boolean var11 = var0.equals((java.lang.Object)var9);
    java.lang.String var12 = var9.getAcronym();
    var9.setAcronym("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var9.setAcronym("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var9.setId((java.lang.Integer)0);
    java.lang.Integer var19 = var9.getId();
    var9.setName("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + 0+ "'", var19.equals(0));

  }

  public void test205() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test205");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User();
    boolean var24 = var22.equals((java.lang.Object)(-1L));
    java.lang.String var25 = var22.toString();
    java.lang.String var26 = var22.getName();
    java.lang.String var27 = var22.getName();
    java.lang.String var28 = var22.getName();
    java.lang.String var29 = var22.getPassword();
    var0.setUser(var22);
    java.lang.String var31 = var0.getName();
    br.com.addvisor.model.Address var32 = var0.getAddress();
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    boolean var35 = var33.equals((java.lang.Object)(byte)100);
    var33.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var38 = new br.com.addvisor.model.State();
    int var39 = var33.compareTo(var38);
    java.lang.String var40 = var38.getName();
    var38.setId((java.lang.Long)10L);
    var38.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var45 = new br.com.addvisor.model.Address();
    java.lang.String var46 = var45.getComplement();
    java.lang.String var47 = var45.toString();
    br.com.addvisor.model.City var48 = var45.getCity();
    br.com.addvisor.model.State var49 = new br.com.addvisor.model.State();
    var49.setId((java.lang.Long)1L);
    var49.setName("null\nnull\nnull");
    var49.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var56 = var49.getUf();
    boolean var57 = var45.equals((java.lang.Object)var49);
    int var58 = var38.compareTo(var49);
    br.com.addvisor.model.State var59 = new br.com.addvisor.model.State();
    boolean var61 = var59.equals((java.lang.Object)(byte)100);
    var59.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var64 = new br.com.addvisor.model.State();
    int var65 = var59.compareTo(var64);
    java.lang.String var66 = var64.getName();
    var64.setId((java.lang.Long)10L);
    var64.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var71 = new br.com.addvisor.model.Country();
    java.lang.Integer var72 = var71.getId();
    java.lang.String var73 = var71.getName();
    var71.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var76 = var71.getAcronym();
    var71.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var64.setCountry(var71);
    int var80 = var49.compareTo(var64);
    boolean var81 = var0.equals((java.lang.Object)var64);
    br.com.addvisor.model.Address var82 = var0.getAddress();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var25.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "null\nnull\nnull"+ "'", var47.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var76.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);

  }

  public void test206() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test206");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var44 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    var24.setUser(var44);
    var44.setId((java.lang.Long)1L);
    java.lang.String var48 = var44.toString();
    var44.setName("Country [id=null, name=null, acronym=null]");
    java.lang.String var51 = var44.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "User [id=1, name=null, email=null, password=6a526e9ea8abcc547d30e98aac13c6cc, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]"+ "'", var48.equals("User [id=1, name=null, email=null, password=6a526e9ea8abcc547d30e98aac13c6cc, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var51.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));

  }

  public void test207() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test207");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    int var6 = var0.compareTo(var3);
    var0.setId((java.lang.Long)100L);
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null] - Us");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);

  }

  public void test208() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test208");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var54 = new br.com.addvisor.model.City();
    var54.setName("hi!");
    var54.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var59 = new br.com.addvisor.model.Address();
    java.lang.String var60 = var59.getComplement();
    java.lang.String var61 = var59.toString();
    boolean var62 = var54.equals((java.lang.Object)var61);
    br.com.addvisor.model.User var63 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var54);
    br.com.addvisor.model.Address var64 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var54);
    var54.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var67 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var54);
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var54);
    java.lang.String var69 = var68.getLocation();
    var24.setAddress(var68);
    var24.setDescription("User [id=10, name=null, email=null, password=bab90b8667e900a415ffe18829d9e6f9, phone=null - null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "null\nnull\nnull"+ "'", var61.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var69.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test209() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test209");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    java.lang.String var4 = var3.getComplement();
    java.lang.String var5 = var3.getComplement();
    br.com.addvisor.model.City var6 = var3.getCity();
    var3.setLocation("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]");
    java.lang.String var9 = var3.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var4.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var5.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]\nEvaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]\nnull"+ "'", var9.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]\nEvaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]\nnull"));

  }

  public void test210() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test210");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.Float var29 = var0.getNote();
    br.com.addvisor.model.Service var30 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    var30.setUser(var31);
    br.com.addvisor.model.Address var37 = var30.getAddress();
    var0.setService(var30);
    br.com.addvisor.model.Service var39 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    boolean var42 = var40.equals((java.lang.Object)(-1L));
    java.lang.String var43 = var40.toString();
    java.lang.String var44 = var40.getPassword();
    var39.setUser(var40);
    br.com.addvisor.model.Address var46 = var39.getAddress();
    br.com.addvisor.model.enums.ServiceCat var47 = var39.getCategory();
    var0.setService(var39);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var51 = var0.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var43.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);

  }

  public void test211() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test211");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    java.lang.String var9 = var0.getTags();
    java.lang.String var10 = var0.toString();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var13 = var0.getUser();
    br.com.addvisor.model.Evaluate var14 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    boolean var17 = var15.equals((java.lang.Object)(byte)100);
    var15.setUf("null\nnull\nnull");
    boolean var20 = var14.equals((java.lang.Object)var15);
    br.com.addvisor.model.Service var21 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User();
    boolean var24 = var22.equals((java.lang.Object)(-1L));
    java.lang.String var25 = var22.toString();
    java.lang.String var26 = var22.getPassword();
    var21.setUser(var22);
    br.com.addvisor.model.Address var28 = var21.getAddress();
    java.lang.String var29 = var21.getDescription();
    boolean var30 = var14.equals((java.lang.Object)var21);
    java.lang.String var31 = var14.toString();
    boolean var32 = var13.equals((java.lang.Object)var14);
    java.lang.String var33 = var14.getComment();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var10.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var25.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "Evaluate [id=null, user=null, service=null, note=null, comment=null]"+ "'", var31.equals("Evaluate [id=null, user=null, service=null, note=null, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);

  }

  public void test212() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test212");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    boolean var23 = var17.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    var17.setService(var24);
    br.com.addvisor.model.enums.ServiceCat var33 = var24.getCategory();
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    var34.setId((java.lang.Long)0L);
    var24.setAddress(var34);
    var0.setService(var24);
    br.com.addvisor.model.User var39 = new br.com.addvisor.model.User();
    boolean var41 = var39.equals((java.lang.Object)(-1L));
    java.lang.String var42 = var39.getDDD();
    var39.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var45 = var39.getCity();
    var0.setUser(var39);
    br.com.addvisor.model.User var47 = var0.getUser();
    br.com.addvisor.model.User var50 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    java.lang.String var51 = var50.getEmail();
    java.lang.String var52 = var50.getEmail();
    java.lang.String var53 = var50.getPassword();
    boolean var54 = var0.equals((java.lang.Object)var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "6a526e9ea8abcc547d30e98aac13c6cc"+ "'", var53.equals("6a526e9ea8abcc547d30e98aac13c6cc"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);

  }

  public void test213() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test213");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getName();
    br.com.addvisor.model.User var12 = new br.com.addvisor.model.User();
    boolean var14 = var12.equals((java.lang.Object)(-1L));
    java.lang.String var15 = var12.toString();
    br.com.addvisor.model.Evaluate var16 = new br.com.addvisor.model.Evaluate();
    var16.setId((java.lang.Long)10L);
    var16.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var21 = var16.getUser();
    boolean var22 = var12.equals((java.lang.Object)var16);
    java.lang.String var23 = var12.getPassword();
    var12.setId((java.lang.Long)(-1L));
    var12.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var32 = new br.com.addvisor.model.City();
    var32.setName("hi!");
    var32.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    boolean var40 = var32.equals((java.lang.Object)var39);
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var32);
    br.com.addvisor.model.City var44 = new br.com.addvisor.model.City();
    var44.setName("hi!");
    var44.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var49 = new br.com.addvisor.model.Address();
    java.lang.String var50 = var49.getComplement();
    java.lang.String var51 = var49.toString();
    boolean var52 = var44.equals((java.lang.Object)var51);
    br.com.addvisor.model.User var53 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var54 = new br.com.addvisor.model.State();
    var54.setId((java.lang.Long)1L);
    var54.setName("null\nnull\nnull");
    var54.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var61 = var54.getUf();
    boolean var62 = var53.equals((java.lang.Object)var54);
    var44.setState(var54);
    br.com.addvisor.model.Address var64 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var44);
    int var65 = var32.compareTo(var44);
    var12.setCity(var32);
    br.com.addvisor.model.User var67 = new br.com.addvisor.model.User("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]", " - null", "null - null\nnull\nnull", "Country [id=null, name=null, acronym=null]", var32);
    var0.setCity(var32);
    br.com.addvisor.model.City var69 = var0.getCity();
    br.com.addvisor.model.State var70 = var69.getState();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var15.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "null\nnull\nnull"+ "'", var51.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);

  }

  public void test214() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test214");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var12 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    boolean var15 = var13.equals((java.lang.Object)(-1L));
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.getPassword();
    var12.setUser(var13);
    br.com.addvisor.model.Address var19 = var12.getAddress();
    java.lang.String var20 = var12.getName();
    var12.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var23 = var12.getName();
    br.com.addvisor.model.Evaluate var26 = new br.com.addvisor.model.Evaluate(var0, var12, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.enums.ServiceCat var27 = var12.getCategory();
    var12.setDescription("Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]");
    var12.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var16.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test215() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test215");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    int var9 = var2.compareTo(var6);
    br.com.addvisor.model.City var10 = new br.com.addvisor.model.City();
    var10.setName("hi!");
    var10.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    java.lang.String var16 = var15.getComplement();
    java.lang.String var17 = var15.toString();
    boolean var18 = var10.equals((java.lang.Object)var17);
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var20 = new br.com.addvisor.model.State();
    var20.setId((java.lang.Long)1L);
    var20.setName("null\nnull\nnull");
    var20.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var27 = var20.getUf();
    boolean var28 = var19.equals((java.lang.Object)var20);
    var10.setState(var20);
    var20.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var2.setState(var20);
    java.lang.Long var33 = var2.getId();
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    boolean var36 = var34.equals((java.lang.Object)(byte)100);
    var34.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var39 = new br.com.addvisor.model.State();
    int var40 = var34.compareTo(var39);
    java.lang.String var41 = var39.getName();
    var39.setId((java.lang.Long)10L);
    br.com.addvisor.model.Country var44 = var39.getCountry();
    var39.setUf("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var47 = var39.getName();
    br.com.addvisor.model.State var48 = new br.com.addvisor.model.State();
    boolean var50 = var48.equals((java.lang.Object)(byte)100);
    var48.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var53 = new br.com.addvisor.model.State();
    int var54 = var48.compareTo(var53);
    var53.setName("");
    br.com.addvisor.model.Country var57 = new br.com.addvisor.model.Country();
    java.lang.Integer var58 = var57.getId();
    var53.setCountry(var57);
    int var60 = var39.compareTo(var53);
    var2.setState(var53);
    var2.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null\nnull\nnull"+ "'", var17.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 0);

  }

  public void test216() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test216");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    var0.setNote((java.lang.Float)0.0f);
    java.lang.String var19 = var0.getComment();
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User("Evaluate [id=null, user=null, service=null, note=null, comment=]", "Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var0.setUser(var22);
    java.lang.Long var24 = var0.getId();
    var0.setId((java.lang.Long)100L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test217() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test217");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.Address var9 = var0.getAddress();
    var0.setTags("Evaluate [id=0, user=User [id=-1, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], service=null, note=null, comment=null]");
    br.com.addvisor.model.Address var12 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var13 = var0.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test218() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test218");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    java.lang.String var11 = var6.getPhone();
    var0.setUser(var6);
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    boolean var16 = var14.equals((java.lang.Object)(-1L));
    java.lang.String var17 = var14.toString();
    java.lang.String var18 = var14.getPassword();
    var13.setUser(var14);
    br.com.addvisor.model.Address var20 = var13.getAddress();
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.getComplement();
    java.lang.String var23 = var21.toString();
    br.com.addvisor.model.City var24 = var21.getCity();
    br.com.addvisor.model.State var25 = new br.com.addvisor.model.State();
    var25.setId((java.lang.Long)1L);
    var25.setName("null\nnull\nnull");
    var25.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var32 = var25.getUf();
    boolean var33 = var21.equals((java.lang.Object)var25);
    var13.setAddress(var21);
    var13.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var37 = var13.getDescription();
    var0.setService(var13);
    java.lang.Long var39 = var0.getId();
    br.com.addvisor.model.Service var40 = var0.getService();
    br.com.addvisor.model.Service var41 = var0.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var17.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nnull\nnull"+ "'", var23.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + 0L+ "'", var39.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);

  }

  public void test219() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test219");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    var7.setName("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    java.lang.Long var19 = var7.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test220() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test220");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    var5.setName("");
    br.com.addvisor.model.Country var9 = new br.com.addvisor.model.Country();
    java.lang.Integer var10 = var9.getId();
    var5.setCountry(var9);
    var9.setName("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    java.lang.String var14 = var9.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Country [id=null, name=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], acronym=null]"+ "'", var14.equals("Country [id=null, name=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], acronym=null]"));

  }

  public void test221() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test221");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Country var7 = new br.com.addvisor.model.Country();
    java.lang.Integer var8 = var7.getId();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    boolean var16 = var7.equals((java.lang.Object)var14);
    var14.setName("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    int var19 = var1.compareTo(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);

  }

  public void test222() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test222");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("Evaluate [id=1, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=null, note=-1.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test223() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test223");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    var24.setMedia((java.lang.Float)1.0f);
    var24.setId((java.lang.Long)1L);
    br.com.addvisor.model.Service var39 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    boolean var42 = var40.equals((java.lang.Object)(-1L));
    java.lang.String var43 = var40.toString();
    java.lang.String var44 = var40.getPassword();
    var39.setUser(var40);
    br.com.addvisor.model.Address var46 = var39.getAddress();
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address();
    java.lang.String var48 = var47.getComplement();
    java.lang.String var49 = var47.toString();
    br.com.addvisor.model.City var50 = var47.getCity();
    br.com.addvisor.model.State var51 = new br.com.addvisor.model.State();
    var51.setId((java.lang.Long)1L);
    var51.setName("null\nnull\nnull");
    var51.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.getUf();
    boolean var59 = var47.equals((java.lang.Object)var51);
    var39.setAddress(var47);
    var39.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var63 = var39.getDescription();
    var39.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var66 = new br.com.addvisor.model.User();
    boolean var68 = var66.equals((java.lang.Object)(-1L));
    java.lang.String var69 = var66.toString();
    java.lang.String var70 = var66.getPassword();
    java.lang.String var71 = var66.getName();
    java.lang.String var72 = var66.getPassword();
    var39.setUser(var66);
    var24.setUser(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var43.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "null\nnull\nnull"+ "'", var49.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var69.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);

  }

  public void test224() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test224");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    java.lang.String var9 = var0.getTags();
    java.lang.String var10 = var0.toString();
    var0.setTags("Country [id=null, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]]");
    br.com.addvisor.model.City var13 = new br.com.addvisor.model.City();
    var13.setName("hi!");
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    var16.setId((java.lang.Long)1L);
    var16.setName("null\nnull\nnull");
    var13.setState(var16);
    boolean var22 = var0.equals((java.lang.Object)var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var10.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);

  }

  public void test225() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test225");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    var0.addContact("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null\nhi!\nnull\nnull\nnull");
    java.util.Map var4 = var0.getContacts();
    var0.addContact("Evaluate [id=0, user=null, service=null, note=null, comment=null]", "Service [id=null, name=null\nnull\nnull - null, description=null, tags=null, media=100.0, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test226() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test226");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    var0.setComment("Country [id=null, name=null, acronym=null]");
    java.lang.Long var19 = var0.getId();
    java.lang.String var20 = var0.getComment();
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    java.lang.Integer var22 = var21.getId();
    java.lang.String var23 = var21.getName();
    java.lang.String var24 = var21.getName();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    boolean var29 = var25.equals((java.lang.Object)100.0d);
    var25.setId((java.lang.Long)100L);
    boolean var32 = var21.equals((java.lang.Object)var25);
    boolean var33 = var0.equals((java.lang.Object)var21);
    var0.setComment("null\nnull\nnull\n\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var20.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);

  }

  public void test227() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test227");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPassword();
    var0.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.Evaluate var8 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    boolean var14 = var8.equals((java.lang.Object)var9);
    br.com.addvisor.model.Service var15 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var16 = new br.com.addvisor.model.User();
    boolean var18 = var16.equals((java.lang.Object)(-1L));
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = var16.getPassword();
    var15.setUser(var16);
    br.com.addvisor.model.Address var22 = var15.getAddress();
    java.lang.String var23 = var15.getDescription();
    boolean var24 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.Evaluate var25 = new br.com.addvisor.model.Evaluate();
    var25.setId((java.lang.Long)10L);
    var25.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var30 = var25.getUser();
    java.lang.Long var31 = var25.getId();
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    boolean var35 = var33.equals((java.lang.Object)(-1L));
    java.lang.String var36 = var33.toString();
    java.lang.String var37 = var33.getPassword();
    var32.setUser(var33);
    br.com.addvisor.model.Address var39 = var32.getAddress();
    java.lang.String var40 = var32.getDescription();
    var25.setService(var32);
    boolean var42 = var15.equals((java.lang.Object)var32);
    br.com.addvisor.model.User var43 = new br.com.addvisor.model.User();
    boolean var45 = var43.equals((java.lang.Object)(-1L));
    java.lang.String var46 = var43.toString();
    java.lang.String var47 = var43.getPassword();
    java.lang.String var48 = var43.getName();
    boolean var49 = var15.equals((java.lang.Object)var43);
    java.lang.Float var50 = var15.getMedia();
    br.com.addvisor.model.Evaluate var53 = new br.com.addvisor.model.Evaluate(var0, var15, (java.lang.Float)0.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var54 = var15.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var19.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + 0L+ "'", var31.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var46.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);

  }

  public void test228() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test228");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    java.lang.Float var7 = var0.getNote();
    var0.setId((java.lang.Long)(-1L));
    java.lang.String var10 = var0.getComment();
    var0.setId((java.lang.Long)0L);
    var0.setNote((java.lang.Float)0.0f);
    var0.setComment("Evaluate [id=-1, user=User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test229() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test229");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getName();
    java.lang.String var26 = var21.getName();
    java.lang.String var27 = var21.getName();
    boolean var28 = var17.equals((java.lang.Object)var21);
    var17.setId((java.lang.Long)10L);
    var17.setComplement("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    var17.setLocation("\nnull\nhi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);

  }

  public void test230() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test230");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.getPrice("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]\nUser [id=null, name=null, email=null, password=null, phone=null, city=null]\nnull\nnull\nnull");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test231() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test231");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    var0.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setEmail("hi!");
    var0.setPassword("null - null - Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    java.lang.Long var19 = var10.getId();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var23 = var10.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test232() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test232");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    var18.setId((java.lang.Long)(-1L));
    java.lang.Long var35 = var18.getId();
    br.com.addvisor.model.enums.ServiceCat var36 = var18.getCategory();
    var18.setDescription("Service [id=null, name=null, description=null, tags=null, media=100.0, address=null, category=null, phones=null]");
    java.lang.String var39 = var18.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + (-1L)+ "'", var35.equals((-1L)));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "Service [id=-1, name=null, description=Service [id=null, name=null, description=null, tags=null, media=100.0, address=null, category=null, phones=null], tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var39.equals("Service [id=-1, name=null, description=Service [id=null, name=null, description=null, tags=null, media=100.0, address=null, category=null, phones=null], tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"));

  }

  public void test233() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test233");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    java.util.List var8 = var6.getNumbers();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var6.setNames(var11);
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    java.util.List var18 = var16.getNumbers();
    var13.setNames(var18);
    var6.setNames(var18);
    var0.setNumbers(var18);
    var0.addContact("", "");
    var0.addContact("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    java.util.List var28 = var0.getNames();
    java.util.Map var29 = var0.getContacts();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test234() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test234");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Long var50 = var16.getId();
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    boolean var53 = var51.equals((java.lang.Object)(-1L));
    boolean var55 = var51.equals((java.lang.Object)100.0d);
    var51.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.toString();
    var16.setUser(var51);
    var16.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    java.lang.String var62 = var16.getName();
    br.com.addvisor.model.Address var63 = var16.getAddress();
    br.com.addvisor.model.City var64 = new br.com.addvisor.model.City();
    var64.setName("hi!");
    var64.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var69 = new br.com.addvisor.model.Address();
    java.lang.String var70 = var69.toString();
    br.com.addvisor.model.City var71 = new br.com.addvisor.model.City();
    var71.setName("hi!");
    var71.setName("null\nnull\nnull");
    var69.setCity(var71);
    java.lang.String var77 = var71.getName();
    br.com.addvisor.model.User var80 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var81 = new br.com.addvisor.model.State();
    var81.setId((java.lang.Long)1L);
    var81.setName("null\nnull\nnull");
    var81.setUf("Country [id=null, name=null, acronym=null]");
    var81.setName("null - null");
    boolean var90 = var80.equals((java.lang.Object)var81);
    java.lang.String var91 = var81.toString();
    var71.setState(var81);
    var64.setState(var81);
    boolean var94 = var16.equals((java.lang.Object)var81);
    var81.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "null\nnull\nnull"+ "'", var70.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "null\nnull\nnull"+ "'", var77.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "null - null - Country [id=null, name=null, acronym=null]"+ "'", var91.equals("null - null - Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var94 == false);

  }

  public void test235() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test235");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var2 = new br.com.addvisor.model.State();
    var2.setId((java.lang.Long)1L);
    var2.setName("null\nnull\nnull");
    var2.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var9 = var2.getUf();
    boolean var10 = var1.equals((java.lang.Object)var2);
    var1.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    boolean var16 = var14.equals((java.lang.Object)(-1L));
    java.lang.String var17 = var14.toString();
    java.lang.String var18 = var14.getPassword();
    var13.setUser(var14);
    br.com.addvisor.model.Address var20 = var13.getAddress();
    java.lang.String var21 = var13.getName();
    var13.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var24 = var13.getName();
    br.com.addvisor.model.Evaluate var27 = new br.com.addvisor.model.Evaluate(var1, var13, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    boolean var28 = var0.equals((java.lang.Object)var1);
    java.lang.String var29 = var1.getPassword();
    java.lang.String var30 = var1.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var17.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var24.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test236() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test236");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.toString();
    br.com.addvisor.model.City var7 = new br.com.addvisor.model.City();
    var7.setName("hi!");
    var5.setCity(var7);
    var0.setCity(var7);
    java.lang.Long var12 = var7.getId();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    var14.setId((java.lang.Long)1L);
    var14.setName("null\nnull\nnull");
    var14.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var21 = var14.getUf();
    boolean var22 = var13.equals((java.lang.Object)var14);
    var14.setName("");
    br.com.addvisor.model.State var25 = new br.com.addvisor.model.State();
    var25.setId((java.lang.Long)1L);
    br.com.addvisor.model.Country var28 = var25.getCountry();
    int var29 = var14.compareTo(var25);
    br.com.addvisor.model.Country var30 = var25.getCountry();
    var7.setState(var25);
    java.lang.String var32 = var25.toString();
    java.lang.Long var33 = var25.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null\nnull\nnull"+ "'", var6.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null - null"+ "'", var32.equals("null - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + 1L+ "'", var33.equals(1L));

  }

  public void test237() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test237");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    var5.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getComplement();
    java.lang.String var14 = var12.toString();
    br.com.addvisor.model.City var15 = var12.getCity();
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    var16.setId((java.lang.Long)1L);
    var16.setName("null\nnull\nnull");
    var16.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var23 = var16.getUf();
    boolean var24 = var12.equals((java.lang.Object)var16);
    int var25 = var5.compareTo(var16);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    boolean var28 = var26.equals((java.lang.Object)(byte)100);
    var26.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var31 = new br.com.addvisor.model.State();
    int var32 = var26.compareTo(var31);
    java.lang.String var33 = var31.getName();
    var31.setId((java.lang.Long)10L);
    var31.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var38 = new br.com.addvisor.model.Country();
    java.lang.Integer var39 = var38.getId();
    java.lang.String var40 = var38.getName();
    var38.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var43 = var38.getAcronym();
    var38.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var31.setCountry(var38);
    int var47 = var16.compareTo(var31);
    var31.setName("User [id=null, name=null, email=null, password=bab90b8667e900a415ffe18829d9e6f9, phone=, city=null]");
    java.lang.String var50 = var31.getUf();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var43.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var50.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test238() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test238");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    var2.setState(var9);
    var9.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    boolean var18 = var16.equals((java.lang.Object)(byte)100);
    var16.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var21 = new br.com.addvisor.model.State();
    int var22 = var16.compareTo(var21);
    var21.setName("");
    int var25 = var9.compareTo(var21);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    br.com.addvisor.model.State var29 = new br.com.addvisor.model.State();
    var29.setId((java.lang.Long)1L);
    var29.setName("null\nnull\nnull");
    var29.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var36 = var29.getUf();
    java.lang.String var37 = var29.getName();
    br.com.addvisor.model.Country var38 = new br.com.addvisor.model.Country();
    java.lang.String var39 = var38.getAcronym();
    boolean var40 = var29.equals((java.lang.Object)var38);
    var26.setCountry(var38);
    var21.setCountry(var38);
    java.lang.Integer var43 = var38.getId();
    java.lang.String var44 = var38.getAcronym();
    java.lang.String var45 = var38.getName();
    java.lang.Integer var46 = var38.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);

  }

  public void test239() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test239");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    var0.setComplement("hi!");
    br.com.addvisor.model.City var21 = var0.getCity();
    java.lang.String var22 = var0.toString();
    java.lang.String var23 = var0.getLocation();
    var0.setComplement("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]");
    var0.setLocation("Country [id=null, name=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], acronym=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null\nhi!\nnull\nnull\nnull"+ "'", var22.equals("null\nhi!\nnull\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test240() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test240");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    br.com.addvisor.model.Evaluate var9 = new br.com.addvisor.model.Evaluate();
    var9.setId((java.lang.Long)10L);
    var9.setId((java.lang.Long)0L);
    var9.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    var16.setNames(var19);
    java.util.List var21 = var16.getNumbers();
    boolean var22 = var9.equals((java.lang.Object)var16);
    java.util.List var23 = var16.getNumbers();
    var0.setPhones(var23);
    br.com.addvisor.model.enums.ServiceCat var25 = var0.getCategory();
    java.lang.String var26 = var0.getDescription();
    java.lang.String var27 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test241() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test241");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    var0.setLocation("hi!");
    var0.setLocation("Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]");
    java.lang.Long var23 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test242() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test242");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    java.lang.String var9 = var0.toString();
    java.lang.String var10 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var10.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));

  }

  public void test243() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test243");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    var0.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var9 = var0.getName();
    br.com.addvisor.model.enums.ServiceCat var10 = var0.getCategory();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.getEmail();
    var0.setUser(var11);
    var0.setId((java.lang.Long)10L);
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User();
    boolean var20 = var18.equals((java.lang.Object)(-1L));
    java.lang.String var21 = var18.getDDD();
    var18.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.toString();
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    var26.setName("hi!");
    var26.setName("null\nnull\nnull");
    var24.setCity(var26);
    var18.setCity(var26);
    var18.setPassword("Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    br.com.addvisor.model.City var35 = var18.getCity();
    var18.setEmail("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    var0.setUser(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null\nnull\nnull"+ "'", var25.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);

  }

  public void test244() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test244");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    java.lang.String var1 = var0.getName();
    java.lang.Float var2 = var0.getMedia();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    br.com.addvisor.model.Agenda var5 = new br.com.addvisor.model.Agenda();
    java.util.List var6 = var5.getNames();
    var3.setNames(var6);
    java.util.List var8 = var3.getNumbers();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    var9.addContact("User [id=null, name=null, email=null, password=428e147830819130e93707f1ce3a3cdb, phone=null, city=null]", "null - null\nnull\nnull");
    java.util.List var14 = var9.getNames();
    var3.setNumbers(var14);
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    var16.setNames(var19);
    java.util.List var21 = var16.getNumbers();
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    java.util.List var24 = var22.getNumbers();
    br.com.addvisor.model.Agenda var25 = new br.com.addvisor.model.Agenda();
    java.util.List var26 = var25.getNames();
    java.util.List var27 = var25.getNumbers();
    var22.setNames(var27);
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    java.util.List var31 = var29.getNumbers();
    br.com.addvisor.model.Agenda var32 = new br.com.addvisor.model.Agenda();
    java.util.List var33 = var32.getNames();
    java.util.List var34 = var32.getNumbers();
    var29.setNames(var34);
    var22.setNames(var34);
    var16.setNumbers(var34);
    var16.addContact("", "");
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    br.com.addvisor.model.Agenda var43 = new br.com.addvisor.model.Agenda();
    java.util.List var44 = var43.getNames();
    var41.setNames(var44);
    java.util.List var46 = var41.getNumbers();
    var16.setNames(var46);
    br.com.addvisor.model.Agenda var48 = new br.com.addvisor.model.Agenda();
    java.util.List var49 = var48.getNames();
    br.com.addvisor.model.Agenda var50 = new br.com.addvisor.model.Agenda();
    java.util.List var51 = var50.getNames();
    var48.setNames(var51);
    var16.setNames(var51);
    java.util.Map var54 = var16.getContacts();
    java.util.List var55 = var16.getNumbers();
    var3.setNumbers(var55);
    java.util.List var57 = var3.getNumbers();
    var0.setPhones(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);

  }

  public void test245() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test245");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var12 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    boolean var15 = var13.equals((java.lang.Object)(-1L));
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.getPassword();
    var12.setUser(var13);
    br.com.addvisor.model.Address var19 = var12.getAddress();
    java.lang.String var20 = var12.getName();
    var12.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var23 = var12.getName();
    br.com.addvisor.model.Evaluate var26 = new br.com.addvisor.model.Evaluate(var0, var12, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var27 = var0.getPhone();
    br.com.addvisor.model.Evaluate var28 = new br.com.addvisor.model.Evaluate();
    var28.setId((java.lang.Long)10L);
    var28.setId((java.lang.Long)0L);
    java.lang.Float var33 = var28.getNote();
    br.com.addvisor.model.Service var34 = new br.com.addvisor.model.Service();
    java.lang.String var35 = var34.toString();
    var28.setService(var34);
    var28.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    boolean var42 = var40.equals((java.lang.Object)(byte)100);
    var40.setUf("null\nnull\nnull");
    boolean var45 = var39.equals((java.lang.Object)var40);
    br.com.addvisor.model.Service var46 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    boolean var49 = var47.equals((java.lang.Object)(-1L));
    java.lang.String var50 = var47.toString();
    java.lang.String var51 = var47.getPassword();
    var46.setUser(var47);
    br.com.addvisor.model.Address var53 = var46.getAddress();
    var39.setService(var46);
    br.com.addvisor.model.enums.ServiceCat var55 = var46.getCategory();
    br.com.addvisor.model.Address var56 = new br.com.addvisor.model.Address();
    var56.setId((java.lang.Long)0L);
    var46.setAddress(var56);
    boolean var60 = var28.equals((java.lang.Object)var46);
    java.lang.String var61 = var46.getName();
    br.com.addvisor.model.User var62 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var63 = new br.com.addvisor.model.State();
    var63.setId((java.lang.Long)1L);
    var63.setName("null\nnull\nnull");
    var63.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var70 = var63.getUf();
    boolean var71 = var62.equals((java.lang.Object)var63);
    var62.setId((java.lang.Long)0L);
    var62.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var76 = var46.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var79 = new br.com.addvisor.model.Evaluate(var0, var46, (java.lang.Float)0.0f, "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var80 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var81 = new br.com.addvisor.model.User();
    boolean var83 = var81.equals((java.lang.Object)(-1L));
    java.lang.String var84 = var81.toString();
    java.lang.String var85 = var81.getPassword();
    var80.setUser(var81);
    br.com.addvisor.model.Address var87 = var80.getAddress();
    java.lang.String var88 = var80.getName();
    var80.setId((java.lang.Long)1L);
    java.lang.Long var91 = var80.getId();
    var80.setDescription("null - null\nnull\nnull");
    java.lang.String var94 = var80.getName();
    java.lang.String var95 = var80.getName();
    br.com.addvisor.model.Evaluate var98 = new br.com.addvisor.model.Evaluate(var0, var80, (java.lang.Float)10.0f, "Country [id=100, name=null, acronym=hi!]\nEvaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var16.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var35.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var84.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + 1L+ "'", var91.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);

  }

  public void test246() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test246");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]", "Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");

  }

  public void test247() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test247");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    java.lang.Long var30 = var16.getId();
    var16.setMedia((java.lang.Float)(-1.0f));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + 1L+ "'", var30.equals(1L));

  }

  public void test248() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test248");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    java.lang.String var7 = var1.getPassword();
    java.lang.String var8 = var1.toString();
    var1.setPhone("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    java.lang.String var11 = var1.toString();
    java.lang.String var12 = var1.getPassword();
    java.lang.String var13 = var1.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test249() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test249");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setUf("Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    boolean var9 = var7.equals((java.lang.Object)(byte)100);
    var7.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    int var13 = var7.compareTo(var12);
    br.com.addvisor.model.Country var14 = var12.getCountry();
    int var15 = var0.compareTo(var12);
    java.lang.String var16 = var12.toString();
    java.lang.String var17 = var12.getUf();
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    java.lang.String var20 = var18.getName();
    var18.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var23 = var18.getAcronym();
    var12.setCountry(var18);
    java.lang.String var25 = var18.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null - null"+ "'", var16.equals("null - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test250() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test250");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    var0.setComplement("hi!");
    br.com.addvisor.model.City var21 = var0.getCity();
    java.lang.String var22 = var0.toString();
    java.lang.String var23 = var0.toString();
    br.com.addvisor.model.User var24 = new br.com.addvisor.model.User();
    boolean var26 = var24.equals((java.lang.Object)(-1L));
    java.lang.String var27 = var24.getDDD();
    java.lang.String var28 = var24.getDDD();
    br.com.addvisor.model.Service var29 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var30 = new br.com.addvisor.model.User();
    boolean var32 = var30.equals((java.lang.Object)(-1L));
    java.lang.String var33 = var30.toString();
    java.lang.String var34 = var30.getPassword();
    var29.setUser(var30);
    br.com.addvisor.model.Address var36 = var29.getAddress();
    java.lang.String var37 = var29.getName();
    br.com.addvisor.model.City var38 = new br.com.addvisor.model.City();
    var38.setName("hi!");
    var38.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var43 = new br.com.addvisor.model.Address();
    java.lang.String var44 = var43.getComplement();
    java.lang.String var45 = var43.toString();
    boolean var46 = var38.equals((java.lang.Object)var45);
    br.com.addvisor.model.State var47 = new br.com.addvisor.model.State();
    var47.setId((java.lang.Long)1L);
    var47.setName("null\nnull\nnull");
    var47.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var54 = var47.getUf();
    var38.setState(var47);
    boolean var56 = var29.equals((java.lang.Object)var38);
    br.com.addvisor.model.Service var57 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var58 = new br.com.addvisor.model.User();
    boolean var60 = var58.equals((java.lang.Object)(-1L));
    java.lang.String var61 = var58.toString();
    java.lang.String var62 = var58.getPassword();
    var57.setUser(var58);
    br.com.addvisor.model.Address var64 = var57.getAddress();
    java.lang.String var65 = var57.getName();
    java.lang.String var66 = var57.getDescription();
    br.com.addvisor.model.Address var67 = new br.com.addvisor.model.Address();
    java.lang.String var68 = var67.toString();
    br.com.addvisor.model.City var69 = new br.com.addvisor.model.City();
    var69.setName("hi!");
    var67.setCity(var69);
    var67.setLocation("");
    java.lang.String var75 = var67.getLocation();
    var57.setAddress(var67);
    boolean var77 = var38.equals((java.lang.Object)var67);
    var24.setCity(var38);
    boolean var79 = var0.equals((java.lang.Object)var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null\nhi!\nnull\nnull\nnull"+ "'", var22.equals("null\nhi!\nnull\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nhi!\nnull\nnull\nnull"+ "'", var23.equals("null\nhi!\nnull\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var33.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + "null\nnull\nnull"+ "'", var45.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var61.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "null\nnull\nnull"+ "'", var68.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + ""+ "'", var75.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test251() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test251");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.City var50 = var0.getCity();
    java.lang.String var51 = var0.getPhone();
    var0.setEmail("null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var0.setName("User [id=null, name=hi!, email=, password=aff97160474a056e838c1f721af01edf, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]");
    java.lang.String var56 = var0.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);

  }

  public void test252() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test252");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    br.com.addvisor.model.User var9 = var0.getUser();
    var9.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test253() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test253");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.String var1 = var0.getAcronym();
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setName("Country [id=null, name=null, acronym=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test254() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test254");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    var0.setId((java.lang.Long)1L);
    java.lang.Long var5 = var0.getId();
    java.lang.String var6 = var0.getLocation();
    java.lang.String var7 = var0.getComplement();
    br.com.addvisor.model.City var8 = var0.getCity();
    java.lang.String var9 = var0.getComplement();
    java.lang.String var10 = var0.toString();
    java.lang.Long var11 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + 1L+ "'", var5.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + 1L+ "'", var11.equals(1L));

  }

  public void test255() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test255");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    br.com.addvisor.model.Evaluate var7 = new br.com.addvisor.model.Evaluate();
    var7.setId((java.lang.Long)10L);
    var7.setId((java.lang.Long)0L);
    java.lang.Float var12 = var7.getNote();
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    java.lang.String var14 = var13.toString();
    var7.setService(var13);
    var7.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var18 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var19 = new br.com.addvisor.model.State();
    boolean var21 = var19.equals((java.lang.Object)(byte)100);
    var19.setUf("null\nnull\nnull");
    boolean var24 = var18.equals((java.lang.Object)var19);
    br.com.addvisor.model.Service var25 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.toString();
    java.lang.String var30 = var26.getPassword();
    var25.setUser(var26);
    br.com.addvisor.model.Address var32 = var25.getAddress();
    var18.setService(var25);
    br.com.addvisor.model.enums.ServiceCat var34 = var25.getCategory();
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address();
    var35.setId((java.lang.Long)0L);
    var25.setAddress(var35);
    boolean var39 = var7.equals((java.lang.Object)var25);
    java.lang.String var40 = var25.getName();
    var25.setMedia((java.lang.Float)100.0f);
    br.com.addvisor.model.Evaluate var45 = new br.com.addvisor.model.Evaluate(var0, var25, (java.lang.Float)1.0f, "Country [id=100, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]]");
    java.lang.String var46 = var0.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var14.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var29.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);

  }

  public void test256() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test256");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getName();
    var0.setService(var7);
    java.lang.Float var17 = var0.getNote();
    br.com.addvisor.model.User var18 = var0.getUser();
    br.com.addvisor.model.City var21 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var21);
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    boolean var25 = var23.equals((java.lang.Object)(byte)100);
    var23.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    int var29 = var23.compareTo(var28);
    var28.setName("");
    var21.setState(var28);
    var28.setId((java.lang.Long)100L);
    var28.setUf("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var37 = var0.equals((java.lang.Object)var28);
    br.com.addvisor.model.City var40 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var41 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var40);
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    boolean var44 = var42.equals((java.lang.Object)(byte)100);
    var42.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var47 = new br.com.addvisor.model.State();
    int var48 = var42.compareTo(var47);
    var47.setName("");
    var40.setState(var47);
    boolean var52 = var28.equals((java.lang.Object)var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);

  }

  public void test257() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test257");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    boolean var10 = var2.equals((java.lang.Object)var9);
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", var2);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address();
    java.lang.String var17 = var16.getComplement();
    java.lang.String var18 = var16.toString();
    java.lang.String var19 = var16.getComplement();
    br.com.addvisor.model.City var24 = new br.com.addvisor.model.City();
    var24.setName("hi!");
    var24.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var29 = new br.com.addvisor.model.Address();
    java.lang.String var30 = var29.getComplement();
    java.lang.String var31 = var29.toString();
    boolean var32 = var24.equals((java.lang.Object)var31);
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var24);
    var16.setCity(var24);
    var16.setComplement("hi!");
    br.com.addvisor.model.City var37 = var16.getCity();
    br.com.addvisor.model.User var38 = new br.com.addvisor.model.User("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Evaluate [id=0, user=null, service=null, note=null, comment=null]]", "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=null, user=null, service=null, note=null, comment=]", var37);
    boolean var39 = var2.equals((java.lang.Object)var37);
    java.lang.String var40 = var2.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null\nnull\nnull"+ "'", var18.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null\nnull\nnull"+ "'", var31.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "null\nnull\nnull"+ "'", var40.equals("null\nnull\nnull"));

  }

  public void test258() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test258");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    boolean var19 = var17.equals((java.lang.Object)(byte)100);
    var17.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var22 = new br.com.addvisor.model.State();
    int var23 = var17.compareTo(var22);
    br.com.addvisor.model.Country var24 = var22.getCountry();
    boolean var25 = var16.equals((java.lang.Object)var22);
    var16.setLocation("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    java.lang.String var28 = var16.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]\nUser [id=null, name=null, email=null, password=null, phone=null, city=null]\nnull\nnull\nnull"+ "'", var28.equals("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]\nUser [id=null, name=null, email=null, password=null, phone=null, city=null]\nnull\nnull\nnull"));

  }

  public void test259() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test259");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    var0.setComplement("hi!");
    br.com.addvisor.model.City var21 = var0.getCity();
    java.lang.String var22 = var0.toString();
    java.lang.String var23 = var0.getLocation();
    br.com.addvisor.model.City var24 = var0.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null\nhi!\nnull\nnull\nnull"+ "'", var22.equals("null\nhi!\nnull\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);

  }

  public void test260() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test260");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    java.lang.Float var6 = var0.getNote();
    var0.setNote((java.lang.Float)100.0f);
    java.lang.Long var9 = var0.getId();
    br.com.addvisor.model.User var10 = var0.getUser();
    br.com.addvisor.model.User var11 = var0.getUser();
    br.com.addvisor.model.User var12 = var0.getUser();
    java.lang.String var13 = var0.toString();
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    var15.setId((java.lang.Long)1L);
    var15.setName("null\nnull\nnull");
    var15.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var22 = var15.getUf();
    boolean var23 = var14.equals((java.lang.Object)var15);
    var14.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var26 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User();
    boolean var29 = var27.equals((java.lang.Object)(-1L));
    java.lang.String var30 = var27.toString();
    java.lang.String var31 = var27.getPassword();
    var26.setUser(var27);
    br.com.addvisor.model.Address var33 = var26.getAddress();
    java.lang.String var34 = var26.getName();
    var26.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var37 = var26.getName();
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var14, var26, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var41 = var14.getPhone();
    br.com.addvisor.model.Evaluate var42 = new br.com.addvisor.model.Evaluate();
    var42.setId((java.lang.Long)10L);
    var42.setId((java.lang.Long)0L);
    java.lang.Float var47 = var42.getNote();
    br.com.addvisor.model.Service var48 = new br.com.addvisor.model.Service();
    java.lang.String var49 = var48.toString();
    var42.setService(var48);
    var42.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var53 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var54 = new br.com.addvisor.model.State();
    boolean var56 = var54.equals((java.lang.Object)(byte)100);
    var54.setUf("null\nnull\nnull");
    boolean var59 = var53.equals((java.lang.Object)var54);
    br.com.addvisor.model.Service var60 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var61 = new br.com.addvisor.model.User();
    boolean var63 = var61.equals((java.lang.Object)(-1L));
    java.lang.String var64 = var61.toString();
    java.lang.String var65 = var61.getPassword();
    var60.setUser(var61);
    br.com.addvisor.model.Address var67 = var60.getAddress();
    var53.setService(var60);
    br.com.addvisor.model.enums.ServiceCat var69 = var60.getCategory();
    br.com.addvisor.model.Address var70 = new br.com.addvisor.model.Address();
    var70.setId((java.lang.Long)0L);
    var60.setAddress(var70);
    boolean var74 = var42.equals((java.lang.Object)var60);
    java.lang.String var75 = var60.getName();
    br.com.addvisor.model.User var76 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var77 = new br.com.addvisor.model.State();
    var77.setId((java.lang.Long)1L);
    var77.setName("null\nnull\nnull");
    var77.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var84 = var77.getUf();
    boolean var85 = var76.equals((java.lang.Object)var77);
    var76.setId((java.lang.Long)0L);
    var76.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var90 = var60.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var93 = new br.com.addvisor.model.Evaluate(var14, var60, (java.lang.Float)0.0f, "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    var0.setService(var60);
    java.lang.String var95 = var60.getDescription();
    br.com.addvisor.model.enums.ServiceCat var96 = var60.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + 0L+ "'", var9.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "Evaluate [id=0, user=null, service=null, note=100.0, comment=null]"+ "'", var13.equals("Evaluate [id=0, user=null, service=null, note=100.0, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var30.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var37.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var49.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var64.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var95);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var96);

  }

  public void test261() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test261");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var3 = var2.getState();
    java.lang.Long var4 = var2.getId();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var2);
    var5.setComplement("");
    br.com.addvisor.model.State var8 = new br.com.addvisor.model.State();
    boolean var10 = var8.equals((java.lang.Object)(byte)100);
    var8.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var13 = new br.com.addvisor.model.State();
    int var14 = var8.compareTo(var13);
    java.lang.String var15 = var13.getName();
    var13.setId((java.lang.Long)10L);
    var13.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var20 = new br.com.addvisor.model.Country();
    java.lang.Integer var21 = var20.getId();
    java.lang.String var22 = var20.getName();
    var20.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var25 = var20.getAcronym();
    var20.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var13.setCountry(var20);
    boolean var29 = var5.equals((java.lang.Object)var20);
    java.lang.String var30 = var20.toString();
    java.lang.String var31 = var20.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var25.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]"+ "'", var30.equals("Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);

  }

  public void test262() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test262");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.getPrice("User [id=0, name=hi!, email=, password=aff97160474a056e838c1f721af01edf, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test263() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test263");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setComment("");
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    var4.setNames(var7);
    java.util.List var9 = var4.getNumbers();
    br.com.addvisor.model.Agenda var10 = new br.com.addvisor.model.Agenda();
    java.util.List var11 = var10.getNames();
    java.util.List var12 = var10.getNumbers();
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    var10.setNames(var15);
    br.com.addvisor.model.Agenda var17 = new br.com.addvisor.model.Agenda();
    java.util.List var18 = var17.getNames();
    java.util.List var19 = var17.getNumbers();
    br.com.addvisor.model.Agenda var20 = new br.com.addvisor.model.Agenda();
    java.util.List var21 = var20.getNames();
    java.util.List var22 = var20.getNumbers();
    var17.setNames(var22);
    var10.setNames(var22);
    var4.setNumbers(var22);
    java.util.List var26 = var4.getNumbers();
    java.util.List var27 = var4.getNames();
    boolean var28 = var0.equals((java.lang.Object)var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "Evaluate [id=null, user=null, service=null, note=null, comment=]"+ "'", var3.equals("Evaluate [id=null, user=null, service=null, note=null, comment=]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);

  }

  public void test264() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test264");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var3 = var2.getId();
    var2.setId((java.lang.Long)(-1L));
    var2.setPhone("null\nnull\nnull");
    java.lang.String var8 = var2.getEmail();
    var2.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var2.setName("");
    br.com.addvisor.model.City var13 = var2.getCity();
    br.com.addvisor.model.Service var14 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User();
    boolean var17 = var15.equals((java.lang.Object)(-1L));
    java.lang.String var18 = var15.toString();
    java.lang.String var19 = var15.getPassword();
    var14.setUser(var15);
    br.com.addvisor.model.Address var21 = var14.getAddress();
    java.lang.String var22 = var14.getTags();
    br.com.addvisor.model.Agenda var23 = new br.com.addvisor.model.Agenda();
    java.util.List var24 = var23.getNames();
    java.util.List var25 = var23.getNumbers();
    var14.setPhones(var25);
    java.lang.Float var27 = var14.getMedia();
    br.com.addvisor.model.User var28 = new br.com.addvisor.model.User();
    boolean var30 = var28.equals((java.lang.Object)(-1L));
    java.lang.String var31 = var28.toString();
    br.com.addvisor.model.Evaluate var32 = new br.com.addvisor.model.Evaluate();
    var32.setId((java.lang.Long)10L);
    var32.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var37 = var32.getUser();
    boolean var38 = var28.equals((java.lang.Object)var32);
    java.lang.String var39 = var32.getComment();
    var32.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var42 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var43 = new br.com.addvisor.model.State();
    var43.setId((java.lang.Long)1L);
    var43.setName("null\nnull\nnull");
    var43.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var50 = var43.getUf();
    boolean var51 = var42.equals((java.lang.Object)var43);
    var32.setUser(var42);
    br.com.addvisor.model.User var53 = var32.getUser();
    var53.setPhone("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    var14.setUser(var53);
    var14.setId((java.lang.Long)1L);
    br.com.addvisor.model.Evaluate var61 = new br.com.addvisor.model.Evaluate(var2, var14, (java.lang.Float)(-1.0f), "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var18.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var31.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);

  }

  public void test265() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test265");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.State var2 = new br.com.addvisor.model.State();
    boolean var4 = var2.equals((java.lang.Object)(byte)100);
    var2.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    int var8 = var2.compareTo(var7);
    boolean var9 = var0.equals((java.lang.Object)var7);
    var7.setName("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var7.setId((java.lang.Long)0L);
    var7.setName("User [id=null, name=null, email=null, password=null, phone=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);

  }

  public void test266() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test266");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    br.com.addvisor.model.City var3 = var0.getCity();
    var0.setId((java.lang.Long)1L);
    java.lang.String var6 = var0.getLocation();
    java.lang.String var7 = var0.getLocation();
    var0.setComplement("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test267() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test267");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.City var17 = new br.com.addvisor.model.City();
    var17.setName("hi!");
    var17.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address();
    java.lang.String var23 = var22.getComplement();
    java.lang.String var24 = var22.toString();
    boolean var25 = var17.equals((java.lang.Object)var24);
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    var17.setState(var26);
    br.com.addvisor.model.State var35 = var17.getState();
    var17.setName("null - null\nnull\nnull");
    boolean var38 = var0.equals((java.lang.Object)var17);
    java.lang.String var39 = var17.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null\nnull\nnull"+ "'", var24.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null - null\nnull\nnull"+ "'", var39.equals("null - null\nnull\nnull"));

  }

  public void test268() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test268");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    var0.setComment("Country [id=null, name=null, acronym=null]");
    var0.setId((java.lang.Long)100L);
    var0.setComment("Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]");
    br.com.addvisor.model.User var23 = var0.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test269() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test269");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getPassword();
    java.lang.String var7 = var0.getName();
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var8.setUser(var9);
    br.com.addvisor.model.Address var15 = var8.getAddress();
    java.lang.String var16 = var8.getName();
    br.com.addvisor.model.Address var17 = var8.getAddress();
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User();
    boolean var20 = var18.equals((java.lang.Object)(-1L));
    java.lang.String var21 = var18.toString();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate();
    var22.setId((java.lang.Long)10L);
    var22.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var27 = var22.getUser();
    boolean var28 = var18.equals((java.lang.Object)var22);
    java.lang.String var29 = var18.getPassword();
    var18.setId((java.lang.Long)(-1L));
    java.lang.String var32 = var18.getPhone();
    var8.setUser(var18);
    br.com.addvisor.model.Evaluate var36 = new br.com.addvisor.model.Evaluate(var0, var8, (java.lang.Float)10.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    br.com.addvisor.model.Service var37 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var38 = new br.com.addvisor.model.User();
    boolean var40 = var38.equals((java.lang.Object)(-1L));
    java.lang.String var41 = var38.toString();
    java.lang.String var42 = var38.getPassword();
    var37.setUser(var38);
    br.com.addvisor.model.Address var44 = var37.getAddress();
    java.lang.String var45 = var37.getName();
    br.com.addvisor.model.Address var46 = var37.getAddress();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    boolean var49 = var47.equals((java.lang.Object)(-1L));
    java.lang.String var50 = var47.toString();
    br.com.addvisor.model.Evaluate var51 = new br.com.addvisor.model.Evaluate();
    var51.setId((java.lang.Long)10L);
    var51.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var56 = var51.getUser();
    boolean var57 = var47.equals((java.lang.Object)var51);
    java.lang.String var58 = var47.getPassword();
    var47.setId((java.lang.Long)(-1L));
    java.lang.String var61 = var47.getPhone();
    var37.setUser(var47);
    br.com.addvisor.model.User var63 = new br.com.addvisor.model.User();
    boolean var65 = var63.equals((java.lang.Object)(-1L));
    java.lang.String var66 = var63.getDDD();
    boolean var68 = var63.equals((java.lang.Object)(short)100);
    boolean var69 = var47.equals((java.lang.Object)(short)100);
    var36.setUser(var47);
    br.com.addvisor.model.Service var71 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var72 = new br.com.addvisor.model.User();
    boolean var74 = var72.equals((java.lang.Object)(-1L));
    java.lang.String var75 = var72.toString();
    java.lang.String var76 = var72.getPassword();
    var71.setUser(var72);
    br.com.addvisor.model.Address var78 = var71.getAddress();
    java.lang.String var79 = var71.getTags();
    java.lang.String var80 = var71.getDescription();
    var71.setMedia((java.lang.Float)1.0f);
    br.com.addvisor.model.Address var83 = var71.getAddress();
    var36.setService(var71);
    br.com.addvisor.model.City var87 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var88 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var87);
    java.lang.String var89 = var88.getComplement();
    var71.setAddress(var88);
    var71.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var21.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var41.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var75 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var75.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var89 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var89.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));

  }

  public void test270() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test270");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    java.lang.String var17 = var7.getName();
    java.util.List var18 = var7.getPhones();
    java.lang.String var19 = var7.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test271() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test271");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    br.com.addvisor.model.Country var10 = var5.getCountry();
    br.com.addvisor.model.Country var11 = var5.getCountry();
    java.lang.String var12 = var5.getName();
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    java.lang.Integer var14 = var13.getId();
    java.lang.String var15 = var13.getName();
    java.lang.String var16 = var13.getName();
    var13.setId((java.lang.Integer)100);
    java.lang.String var19 = var13.getName();
    var13.setAcronym("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var13.setId((java.lang.Integer)(-19));
    var5.setCountry(var13);
    var13.setAcronym("User [id=0, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var27 = var13.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test272() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test272");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    var7.setId((java.lang.Long)1L);
    br.com.addvisor.model.Agenda var19 = new br.com.addvisor.model.Agenda();
    java.util.List var20 = var19.getNames();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    var19.setNames(var22);
    java.util.List var24 = var19.getNumbers();
    br.com.addvisor.model.Agenda var25 = new br.com.addvisor.model.Agenda();
    java.util.List var26 = var25.getNames();
    java.util.List var27 = var25.getNumbers();
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    java.util.List var30 = var28.getNumbers();
    var25.setNames(var30);
    br.com.addvisor.model.Agenda var32 = new br.com.addvisor.model.Agenda();
    java.util.List var33 = var32.getNames();
    java.util.List var34 = var32.getNumbers();
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.List var36 = var35.getNames();
    java.util.List var37 = var35.getNumbers();
    var32.setNames(var37);
    var25.setNames(var37);
    var19.setNumbers(var37);
    var19.addContact("", "");
    br.com.addvisor.model.Agenda var44 = new br.com.addvisor.model.Agenda();
    java.util.List var45 = var44.getNames();
    br.com.addvisor.model.Agenda var46 = new br.com.addvisor.model.Agenda();
    java.util.List var47 = var46.getNames();
    var44.setNames(var47);
    java.util.List var49 = var44.getNumbers();
    var19.setNames(var49);
    var7.setPhones(var49);
    java.lang.String var52 = var7.getName();
    java.lang.String var53 = var7.getName();
    java.lang.String var54 = var7.getDescription();
    var7.setName("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null] - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);

  }

  public void test273() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test273");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    var0.setId((java.lang.Long)1L);
    java.lang.Long var11 = var0.getId();
    java.lang.String var12 = var0.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + 1L+ "'", var11.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test274() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test274");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getName();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    boolean var8 = var4.equals((java.lang.Object)100.0d);
    var4.setId((java.lang.Long)100L);
    boolean var11 = var0.equals((java.lang.Object)var4);
    java.lang.String var12 = var4.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test275() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test275");


    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var4.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var9 = new br.com.addvisor.model.Address();
    java.lang.String var10 = var9.getComplement();
    java.lang.String var11 = var9.toString();
    boolean var12 = var4.equals((java.lang.Object)var11);
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var4);
    br.com.addvisor.model.City var16 = new br.com.addvisor.model.City();
    var16.setName("hi!");
    var16.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.getComplement();
    java.lang.String var23 = var21.toString();
    boolean var24 = var16.equals((java.lang.Object)var23);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    boolean var34 = var25.equals((java.lang.Object)var26);
    var16.setState(var26);
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var16);
    int var37 = var4.compareTo(var16);
    java.lang.Long var38 = var16.getId();
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    var42.setId((java.lang.Long)1L);
    var42.setName("null\nnull\nnull");
    var42.setUf("Country [id=null, name=null, acronym=null]");
    var42.setName("null - null");
    boolean var51 = var41.equals((java.lang.Object)var42);
    var16.setState(var42);
    br.com.addvisor.model.Country var53 = var42.getCountry();
    var42.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nnull\nnull"+ "'", var23.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);

  }

  public void test276() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test276");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var0.setPhones(var11);
    br.com.addvisor.model.enums.ServiceCat var13 = var0.getCategory();
    br.com.addvisor.model.enums.ServiceCat var14 = var0.getCategory();
    java.lang.String var15 = var0.getTags();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test277() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test277");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    var2.setNames(var5);
    java.util.List var7 = var2.getNumbers();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    var2.setNumbers(var20);
    var2.addContact("", "");
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    var2.setNames(var32);
    boolean var34 = var0.equals((java.lang.Object)var2);
    var0.setAcronym("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var37 = var0.getAcronym();
    java.lang.Integer var38 = var0.getId();
    java.lang.Integer var39 = var0.getId();
    java.lang.String var40 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var37.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);

  }

  public void test278() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test278");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "User [id=1, name=null, email=null, password=6a526e9ea8abcc547d30e98aac13c6cc, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]");
    java.lang.String var3 = var2.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test279() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test279");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    var2.setNames(var5);
    java.util.List var7 = var2.getNumbers();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    var2.setNumbers(var20);
    var2.addContact("", "");
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    var2.setNames(var32);
    boolean var34 = var0.equals((java.lang.Object)var2);
    var0.setName("null\nnull\nnull");
    var0.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.Integer var39 = var0.getId();
    var0.setId((java.lang.Integer)25);
    java.lang.String var42 = var0.getAcronym();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);

  }

  public void test280() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test280");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    java.util.List var8 = var6.getNumbers();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var6.setNames(var11);
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    java.util.List var18 = var16.getNumbers();
    var13.setNames(var18);
    var6.setNames(var18);
    var0.setNumbers(var18);
    java.util.List var22 = var0.getNumbers();
    br.com.addvisor.model.Agenda var23 = new br.com.addvisor.model.Agenda();
    java.util.List var24 = var23.getNames();
    java.util.List var25 = var23.getNumbers();
    br.com.addvisor.model.Agenda var26 = new br.com.addvisor.model.Agenda();
    java.util.List var27 = var26.getNames();
    java.util.List var28 = var26.getNumbers();
    var23.setNames(var28);
    var23.addContact("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var23.addContact("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", " - ");
    br.com.addvisor.model.Agenda var36 = new br.com.addvisor.model.Agenda();
    java.util.List var37 = var36.getNames();
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    var36.setNames(var39);
    java.util.List var41 = var36.getNumbers();
    br.com.addvisor.model.Agenda var42 = new br.com.addvisor.model.Agenda();
    java.util.List var43 = var42.getNames();
    java.util.List var44 = var42.getNumbers();
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    java.util.List var47 = var45.getNumbers();
    var42.setNames(var47);
    br.com.addvisor.model.Agenda var49 = new br.com.addvisor.model.Agenda();
    java.util.List var50 = var49.getNames();
    java.util.List var51 = var49.getNumbers();
    br.com.addvisor.model.Agenda var52 = new br.com.addvisor.model.Agenda();
    java.util.List var53 = var52.getNames();
    java.util.List var54 = var52.getNumbers();
    var49.setNames(var54);
    var42.setNames(var54);
    var36.setNumbers(var54);
    java.util.Map var58 = var36.getContacts();
    var23.setContacts(var58);
    var0.setContacts(var58);
    java.util.List var61 = var0.getNames();
    var0.addContact("7250c560acbd5b52abb473bb886fa1ff", "User [id=null, name=null, email=null, password=bab90b8667e900a415ffe18829d9e6f9, phone=, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);

  }

  public void test281() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test281");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.Integer var2 = var0.getId();
    java.lang.String var3 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var3.equals("Country [id=null, name=null, acronym=null]"));

  }

  public void test282() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test282");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    var0.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var11 = var0.getName();
    java.lang.String var12 = var0.getTags();
    var0.setName("User [id=0, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var11.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test283() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test283");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.toString();
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var4.setCity(var6);
    var6.setId((java.lang.Long)10L);
    java.lang.String var12 = var6.getName();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]", " - ", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]", var6);
    var13.setEmail(" - ");
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.toString();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    java.util.List var23 = var21.getNumbers();
    var18.setNames(var23);
    java.util.List var25 = var18.getNames();
    boolean var26 = var13.equals((java.lang.Object)var18);
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    br.com.addvisor.model.Agenda var33 = new br.com.addvisor.model.Agenda();
    java.util.List var34 = var33.getNames();
    var33.addContact("User [id=null, name=null, email=null, password=428e147830819130e93707f1ce3a3cdb, phone=null, city=null]", "null - null\nnull\nnull");
    java.util.List var38 = var33.getNames();
    var27.setNumbers(var38);
    var18.setNumbers(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null\nnull\nnull"+ "'", var5.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"+ "'", var16.equals("User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"+ "'", var17.equals("User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);

  }

  public void test284() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test284");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.String var1 = var0.getAcronym();
    java.lang.String var2 = var0.getName();
    var0.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var0.setId((java.lang.Integer)(-6));
    var0.setId((java.lang.Integer)1);
    var0.setId((java.lang.Integer)(-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test285() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test285");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getDDD();
    var0.setEmail("null - null\nnull\nnull");
    br.com.addvisor.model.City var16 = new br.com.addvisor.model.City();
    var16.setName("hi!");
    var16.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.getComplement();
    java.lang.String var23 = var21.toString();
    boolean var24 = var16.equals((java.lang.Object)var23);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    boolean var34 = var25.equals((java.lang.Object)var26);
    var16.setState(var26);
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var16);
    var36.setLocation("null\nnull\nnull");
    br.com.addvisor.model.Service var39 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    boolean var42 = var40.equals((java.lang.Object)(-1L));
    java.lang.String var43 = var40.toString();
    java.lang.String var44 = var40.getPassword();
    var39.setUser(var40);
    br.com.addvisor.model.Address var46 = var39.getAddress();
    java.lang.String var47 = var39.getName();
    br.com.addvisor.model.City var48 = new br.com.addvisor.model.City();
    var48.setName("hi!");
    var48.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var53 = new br.com.addvisor.model.Address();
    java.lang.String var54 = var53.getComplement();
    java.lang.String var55 = var53.toString();
    boolean var56 = var48.equals((java.lang.Object)var55);
    br.com.addvisor.model.State var57 = new br.com.addvisor.model.State();
    var57.setId((java.lang.Long)1L);
    var57.setName("null\nnull\nnull");
    var57.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var64 = var57.getUf();
    var48.setState(var57);
    boolean var66 = var39.equals((java.lang.Object)var48);
    var36.setCity(var48);
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var48);
    br.com.addvisor.model.Address var69 = new br.com.addvisor.model.Address("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]", var48);
    var0.setCity(var48);
    var48.setName("Evaluate [id=100, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    java.lang.String var73 = var48.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nnull\nnull"+ "'", var23.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var43.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "null\nnull\nnull"+ "'", var55.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "Evaluate [id=100, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]"+ "'", var73.equals("Evaluate [id=100, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]"));

  }

  public void test286() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test286");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getPassword();
    java.lang.String var8 = var0.getEmail();
    java.lang.String var9 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=100, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=100, name=null, email=null, password=null, phone=null, city=null]"));

  }

  public void test287() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test287");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    java.lang.String var19 = var8.getName();
    br.com.addvisor.model.User var20 = new br.com.addvisor.model.User();
    boolean var22 = var20.equals((java.lang.Object)(-1L));
    java.lang.String var23 = var20.toString();
    var20.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var26 = var8.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var27 = var8.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var23.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test288() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test288");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    var0.setUser(var11);
    var0.setComment("Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    java.lang.Float var18 = var0.getNote();
    var0.setNote((java.lang.Float)100.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test289() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test289");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=null]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    java.lang.String var3 = var2.toString();
    var2.setName("User [id=null, name=null, email=null, password=null, phone=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=4238a597ad0f3ff8363f52f6e8c3507, phone=Evaluate [id=0, user=null, service=null, note=null, comment=null], city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=4238a597ad0f3ff8363f52f6e8c3507, phone=Evaluate [id=0, user=null, service=null, note=null, comment=null], city=null]"));

  }

  public void test290() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test290");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address();
    java.lang.String var23 = var22.getComplement();
    java.lang.String var24 = var22.toString();
    var22.setId((java.lang.Long)1L);
    java.lang.Long var27 = var22.getId();
    java.lang.String var28 = var22.getLocation();
    var0.setAddress(var22);
    java.lang.String var30 = var0.getName();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    br.com.addvisor.model.Agenda var33 = new br.com.addvisor.model.Agenda();
    java.util.List var34 = var33.getNames();
    var31.setNames(var34);
    java.util.List var36 = var31.getNumbers();
    br.com.addvisor.model.Agenda var37 = new br.com.addvisor.model.Agenda();
    java.util.List var38 = var37.getNames();
    java.util.List var39 = var37.getNumbers();
    br.com.addvisor.model.Agenda var40 = new br.com.addvisor.model.Agenda();
    java.util.List var41 = var40.getNames();
    java.util.List var42 = var40.getNumbers();
    var37.setNames(var42);
    br.com.addvisor.model.Agenda var44 = new br.com.addvisor.model.Agenda();
    java.util.List var45 = var44.getNames();
    java.util.List var46 = var44.getNumbers();
    br.com.addvisor.model.Agenda var47 = new br.com.addvisor.model.Agenda();
    java.util.List var48 = var47.getNames();
    java.util.List var49 = var47.getNumbers();
    var44.setNames(var49);
    var37.setNames(var49);
    var31.setNumbers(var49);
    var31.addContact("", "");
    br.com.addvisor.model.Agenda var56 = new br.com.addvisor.model.Agenda();
    java.util.List var57 = var56.getNames();
    br.com.addvisor.model.Agenda var58 = new br.com.addvisor.model.Agenda();
    java.util.List var59 = var58.getNames();
    var56.setNames(var59);
    java.util.List var61 = var56.getNumbers();
    var31.setNames(var61);
    br.com.addvisor.model.Agenda var63 = new br.com.addvisor.model.Agenda();
    java.util.List var64 = var63.getNames();
    br.com.addvisor.model.Agenda var65 = new br.com.addvisor.model.Agenda();
    java.util.List var66 = var65.getNames();
    var63.setNames(var66);
    var31.setNames(var66);
    java.util.Map var69 = var31.getContacts();
    java.util.List var70 = var31.getNumbers();
    var0.setPhones(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null\nnull\nnull"+ "'", var24.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);

  }

  public void test291() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test291");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var12 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    boolean var15 = var13.equals((java.lang.Object)(-1L));
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.getPassword();
    var12.setUser(var13);
    br.com.addvisor.model.Address var19 = var12.getAddress();
    java.lang.String var20 = var12.getName();
    var12.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var23 = var12.getName();
    br.com.addvisor.model.Evaluate var26 = new br.com.addvisor.model.Evaluate(var0, var12, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var12.setDescription("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Evaluate var29 = new br.com.addvisor.model.Evaluate();
    var29.setId((java.lang.Long)10L);
    var29.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var34 = var29.getService();
    br.com.addvisor.model.User var37 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var38 = var37.getId();
    var37.setId((java.lang.Long)(-1L));
    var37.setPhone("null\nnull\nnull");
    java.lang.String var43 = var37.getEmail();
    var37.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var29.setUser(var37);
    var37.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    br.com.addvisor.model.Agenda var49 = new br.com.addvisor.model.Agenda();
    java.util.List var50 = var49.getNames();
    boolean var51 = var37.equals((java.lang.Object)var50);
    var12.setPhones(var50);
    java.util.List var53 = var12.getPhones();
    java.lang.String var54 = var12.getDescription();
    var12.setDescription("Evaluate [id=1, user=User [id=null, name=null, email=null, password=4733c1e4c93840f406b626b1699a3659, phone=null\nnull\nnull, city=null], service=Service [id=null, name=null, description=null, tags=null, media=1.0, address=null, category=null, phones=null], note=100.0, comment=hi!]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var16.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"+ "'", var54.equals("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"));

  }

  public void test292() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test292");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    java.lang.String var19 = var8.getName();
    br.com.addvisor.model.State var20 = var8.getState();
    var8.setName("Se");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test293() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test293");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    var0.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var11 = var0.getName();
    br.com.addvisor.model.User var12 = var0.getUser();
    var12.setEmail("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var11.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test294() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test294");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var1 = var0.getState();
    br.com.addvisor.model.State var2 = var0.getState();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test295() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test295");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    var0.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.getComplement();
    java.lang.String var7 = var5.toString();
    boolean var8 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var10 = new br.com.addvisor.model.State();
    var10.setId((java.lang.Long)1L);
    var10.setName("null\nnull\nnull");
    var10.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var17 = var10.getUf();
    boolean var18 = var9.equals((java.lang.Object)var10);
    var0.setState(var10);
    br.com.addvisor.model.Evaluate var20 = new br.com.addvisor.model.Evaluate();
    var20.setId((java.lang.Long)10L);
    var20.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var25 = var20.getUser();
    boolean var26 = var0.equals((java.lang.Object)var20);
    br.com.addvisor.model.State var27 = new br.com.addvisor.model.State();
    boolean var29 = var27.equals((java.lang.Object)(byte)100);
    var27.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var32 = new br.com.addvisor.model.State();
    int var33 = var27.compareTo(var32);
    java.lang.String var34 = var32.getName();
    var0.setState(var32);
    br.com.addvisor.model.State var36 = new br.com.addvisor.model.State();
    boolean var38 = var36.equals((java.lang.Object)(byte)100);
    var36.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var41 = new br.com.addvisor.model.State();
    int var42 = var36.compareTo(var41);
    var41.setName("");
    br.com.addvisor.model.Country var45 = new br.com.addvisor.model.Country();
    java.lang.Integer var46 = var45.getId();
    var41.setCountry(var45);
    java.lang.String var48 = var45.getName();
    var32.setCountry(var45);
    java.lang.String var50 = var45.getAcronym();
    java.lang.String var51 = var45.getAcronym();
    var45.setId((java.lang.Integer)0);
    var45.setAcronym("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);

  }

  public void test296() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test296");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.Service var6 = var0.getService();
    var0.setId((java.lang.Long)0L);
    java.lang.String var9 = var0.getComment();
    br.com.addvisor.model.User var10 = var0.getUser();
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    java.lang.String var26 = var18.getDescription();
    boolean var27 = var11.equals((java.lang.Object)var18);
    br.com.addvisor.model.Evaluate var28 = new br.com.addvisor.model.Evaluate();
    var28.setId((java.lang.Long)10L);
    var28.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var33 = var28.getUser();
    java.lang.Long var34 = var28.getId();
    br.com.addvisor.model.Service var35 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var36 = new br.com.addvisor.model.User();
    boolean var38 = var36.equals((java.lang.Object)(-1L));
    java.lang.String var39 = var36.toString();
    java.lang.String var40 = var36.getPassword();
    var35.setUser(var36);
    br.com.addvisor.model.Address var42 = var35.getAddress();
    java.lang.String var43 = var35.getDescription();
    var28.setService(var35);
    boolean var45 = var18.equals((java.lang.Object)var35);
    br.com.addvisor.model.User var46 = new br.com.addvisor.model.User();
    boolean var48 = var46.equals((java.lang.Object)(-1L));
    java.lang.String var49 = var46.toString();
    java.lang.String var50 = var46.getPassword();
    java.lang.String var51 = var46.getName();
    boolean var52 = var18.equals((java.lang.Object)var46);
    br.com.addvisor.model.Address var53 = var18.getAddress();
    br.com.addvisor.model.Service var54 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var55 = new br.com.addvisor.model.User();
    boolean var57 = var55.equals((java.lang.Object)(-1L));
    java.lang.String var58 = var55.toString();
    java.lang.String var59 = var55.getPassword();
    var54.setUser(var55);
    java.lang.String var61 = var54.getTags();
    br.com.addvisor.model.Agenda var62 = new br.com.addvisor.model.Agenda();
    java.util.List var63 = var62.getNames();
    var54.setPhones(var63);
    var18.setPhones(var63);
    var0.setService(var18);
    java.util.List var67 = var18.getPhones();
    java.lang.String var68 = var18.getTags();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + 0L+ "'", var34.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var39.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var49.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);

  }

  public void test297() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test297");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Evaluate var8 = new br.com.addvisor.model.Evaluate();
    var8.setId((java.lang.Long)10L);
    var8.setId((java.lang.Long)0L);
    var8.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    br.com.addvisor.model.Agenda var17 = new br.com.addvisor.model.Agenda();
    java.util.List var18 = var17.getNames();
    var15.setNames(var18);
    java.util.List var20 = var15.getNumbers();
    boolean var21 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    var22.setNames(var25);
    java.util.List var27 = var22.getNumbers();
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    java.util.List var30 = var28.getNumbers();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    java.util.List var33 = var31.getNumbers();
    var28.setNames(var33);
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.List var36 = var35.getNames();
    java.util.List var37 = var35.getNumbers();
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    var35.setNames(var40);
    var28.setNames(var40);
    var22.setNumbers(var40);
    var22.addContact("", "");
    br.com.addvisor.model.Agenda var47 = new br.com.addvisor.model.Agenda();
    java.util.List var48 = var47.getNames();
    br.com.addvisor.model.Agenda var49 = new br.com.addvisor.model.Agenda();
    java.util.List var50 = var49.getNames();
    var47.setNames(var50);
    java.util.List var52 = var47.getNumbers();
    var22.setNames(var52);
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    br.com.addvisor.model.Agenda var56 = new br.com.addvisor.model.Agenda();
    java.util.List var57 = var56.getNames();
    var54.setNames(var57);
    var22.setNames(var57);
    var15.setNumbers(var57);
    br.com.addvisor.model.Agenda var61 = new br.com.addvisor.model.Agenda();
    java.util.List var62 = var61.getNames();
    br.com.addvisor.model.Agenda var63 = new br.com.addvisor.model.Agenda();
    java.util.List var64 = var63.getNames();
    var61.setNames(var64);
    java.util.List var66 = var61.getNumbers();
    br.com.addvisor.model.Agenda var67 = new br.com.addvisor.model.Agenda();
    java.util.List var68 = var67.getNames();
    java.util.List var69 = var67.getNumbers();
    br.com.addvisor.model.Agenda var70 = new br.com.addvisor.model.Agenda();
    java.util.List var71 = var70.getNames();
    java.util.List var72 = var70.getNumbers();
    var67.setNames(var72);
    br.com.addvisor.model.Agenda var74 = new br.com.addvisor.model.Agenda();
    java.util.List var75 = var74.getNames();
    java.util.List var76 = var74.getNumbers();
    br.com.addvisor.model.Agenda var77 = new br.com.addvisor.model.Agenda();
    java.util.List var78 = var77.getNames();
    java.util.List var79 = var77.getNumbers();
    var74.setNames(var79);
    var67.setNames(var79);
    var61.setNumbers(var79);
    var15.setNames(var79);
    java.util.List var84 = var15.getNumbers();
    var0.setPhones(var84);
    br.com.addvisor.model.City var88 = new br.com.addvisor.model.City();
    var88.setName("hi!");
    java.lang.String var91 = var88.getName();
    br.com.addvisor.model.Address var92 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "", var88);
    br.com.addvisor.model.City var93 = var92.getCity();
    var0.setAddress(var92);
    var92.setComplement("User [id=null, name=null, email=null, password=300fac9da4ec249ae6eb64ef8825ae47, phone=null - null - null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var91 + "' != '" + "hi!"+ "'", var91.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);

  }

  public void test298() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test298");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var0.setPhones(var11);
    java.lang.Float var13 = var0.getMedia();
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    boolean var16 = var14.equals((java.lang.Object)(-1L));
    java.lang.String var17 = var14.toString();
    br.com.addvisor.model.Evaluate var18 = new br.com.addvisor.model.Evaluate();
    var18.setId((java.lang.Long)10L);
    var18.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var23 = var18.getUser();
    boolean var24 = var14.equals((java.lang.Object)var18);
    java.lang.String var25 = var18.getComment();
    var18.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var28 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var29 = new br.com.addvisor.model.State();
    var29.setId((java.lang.Long)1L);
    var29.setName("null\nnull\nnull");
    var29.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var36 = var29.getUf();
    boolean var37 = var28.equals((java.lang.Object)var29);
    var18.setUser(var28);
    br.com.addvisor.model.User var39 = var18.getUser();
    var39.setPhone("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    var0.setUser(var39);
    var0.setId((java.lang.Long)1L);
    var0.setName("User [id=0, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var17.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);

  }

  public void test299() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test299");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var1.setName("");
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    br.com.addvisor.model.Country var15 = var12.getCountry();
    int var16 = var1.compareTo(var12);
    var12.setId((java.lang.Long)10L);
    java.lang.String var19 = var12.getUf();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test300() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test300");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    br.com.addvisor.model.City var5 = var0.getCity();
    var0.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    java.lang.String var8 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test301() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test301");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.valueOf("User [id=null, name=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, email=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], password=767ca4906ff527b215592f830290ac13, phone=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], city=null\nnull\nnull]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test302() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test302");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    var0.addContact("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test303() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test303");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    java.lang.String var11 = var6.getPhone();
    var0.setUser(var6);
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    java.lang.String var14 = var13.toString();
    var13.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var17 = var13.getAddress();
    var13.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var20 = var13.getName();
    br.com.addvisor.model.Evaluate var23 = new br.com.addvisor.model.Evaluate(var6, var13, (java.lang.Float)1.0f, "");
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var25 = new br.com.addvisor.model.State();
    boolean var27 = var25.equals((java.lang.Object)(byte)100);
    var25.setUf("null\nnull\nnull");
    boolean var30 = var24.equals((java.lang.Object)var25);
    br.com.addvisor.model.Service var31 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User();
    boolean var34 = var32.equals((java.lang.Object)(-1L));
    java.lang.String var35 = var32.toString();
    java.lang.String var36 = var32.getPassword();
    var31.setUser(var32);
    br.com.addvisor.model.Address var38 = var31.getAddress();
    java.lang.String var39 = var31.getDescription();
    boolean var40 = var24.equals((java.lang.Object)var31);
    br.com.addvisor.model.Evaluate var41 = new br.com.addvisor.model.Evaluate();
    var41.setId((java.lang.Long)10L);
    var41.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var46 = var41.getUser();
    java.lang.Long var47 = var41.getId();
    br.com.addvisor.model.Service var48 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var49 = new br.com.addvisor.model.User();
    boolean var51 = var49.equals((java.lang.Object)(-1L));
    java.lang.String var52 = var49.toString();
    java.lang.String var53 = var49.getPassword();
    var48.setUser(var49);
    br.com.addvisor.model.Address var55 = var48.getAddress();
    java.lang.String var56 = var48.getDescription();
    var41.setService(var48);
    boolean var58 = var31.equals((java.lang.Object)var48);
    br.com.addvisor.model.User var59 = new br.com.addvisor.model.User();
    boolean var61 = var59.equals((java.lang.Object)(-1L));
    java.lang.String var62 = var59.getDDD();
    var59.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var65 = var48.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var68 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    var48.setUser(var68);
    java.lang.String var70 = var48.getName();
    boolean var71 = var13.equals((java.lang.Object)var48);
    java.lang.String var72 = var48.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var14.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var35.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + 0L+ "'", var47.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var52.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var72.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test304() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test304");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    var0.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getName();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    boolean var9 = var7.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.State var10 = new br.com.addvisor.model.State();
    boolean var12 = var10.equals((java.lang.Object)(byte)100);
    var10.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    int var16 = var10.compareTo(var15);
    java.lang.String var17 = var15.getName();
    var15.setId((java.lang.Long)10L);
    java.lang.Long var20 = var15.getId();
    int var21 = var7.compareTo(var15);
    boolean var22 = var0.equals((java.lang.Object)var7);
    java.lang.String var23 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + 10L+ "'", var20.equals(10L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Country [id=null, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]]"+ "'", var23.equals("Country [id=null, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]]"));

  }

  public void test305() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test305");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.String var6 = var0.getComment();
    java.lang.String var7 = var0.getComment();
    br.com.addvisor.model.Evaluate var8 = new br.com.addvisor.model.Evaluate();
    var8.setId((java.lang.Long)10L);
    var8.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var13 = var8.getUser();
    var8.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    java.lang.String var17 = var16.getName();
    var8.setService(var16);
    var0.setService(var16);
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User("", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var22.setPhone("null - null");
    var22.setEmail("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.Long var27 = var22.getId();
    var16.setUser(var22);
    br.com.addvisor.model.enums.ServiceCat var29 = var16.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

  public void test306() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test306");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    java.util.List var7 = var0.getNames();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    java.util.Map var23 = var8.getContacts();
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.Map var25 = var24.getContacts();
    var8.setContacts(var25);
    java.util.Map var27 = var8.getContacts();
    br.com.addvisor.model.Country var28 = new br.com.addvisor.model.Country();
    java.lang.Integer var29 = var28.getId();
    br.com.addvisor.model.Agenda var30 = new br.com.addvisor.model.Agenda();
    java.util.List var31 = var30.getNames();
    br.com.addvisor.model.Agenda var32 = new br.com.addvisor.model.Agenda();
    java.util.List var33 = var32.getNames();
    var30.setNames(var33);
    java.util.List var35 = var30.getNumbers();
    br.com.addvisor.model.Agenda var36 = new br.com.addvisor.model.Agenda();
    java.util.List var37 = var36.getNames();
    java.util.List var38 = var36.getNumbers();
    br.com.addvisor.model.Agenda var39 = new br.com.addvisor.model.Agenda();
    java.util.List var40 = var39.getNames();
    java.util.List var41 = var39.getNumbers();
    var36.setNames(var41);
    br.com.addvisor.model.Agenda var43 = new br.com.addvisor.model.Agenda();
    java.util.List var44 = var43.getNames();
    java.util.List var45 = var43.getNumbers();
    br.com.addvisor.model.Agenda var46 = new br.com.addvisor.model.Agenda();
    java.util.List var47 = var46.getNames();
    java.util.List var48 = var46.getNumbers();
    var43.setNames(var48);
    var36.setNames(var48);
    var30.setNumbers(var48);
    var30.addContact("", "");
    br.com.addvisor.model.Agenda var55 = new br.com.addvisor.model.Agenda();
    java.util.List var56 = var55.getNames();
    br.com.addvisor.model.Agenda var57 = new br.com.addvisor.model.Agenda();
    java.util.List var58 = var57.getNames();
    var55.setNames(var58);
    java.util.List var60 = var55.getNumbers();
    var30.setNames(var60);
    boolean var62 = var28.equals((java.lang.Object)var30);
    br.com.addvisor.model.Agenda var63 = new br.com.addvisor.model.Agenda();
    java.util.List var64 = var63.getNames();
    br.com.addvisor.model.Agenda var65 = new br.com.addvisor.model.Agenda();
    java.util.List var66 = var65.getNames();
    var63.setNames(var66);
    java.util.List var68 = var63.getNumbers();
    br.com.addvisor.model.Agenda var69 = new br.com.addvisor.model.Agenda();
    java.util.List var70 = var69.getNames();
    java.util.List var71 = var69.getNumbers();
    br.com.addvisor.model.Agenda var72 = new br.com.addvisor.model.Agenda();
    java.util.List var73 = var72.getNames();
    java.util.List var74 = var72.getNumbers();
    var69.setNames(var74);
    br.com.addvisor.model.Agenda var76 = new br.com.addvisor.model.Agenda();
    java.util.List var77 = var76.getNames();
    java.util.List var78 = var76.getNumbers();
    br.com.addvisor.model.Agenda var79 = new br.com.addvisor.model.Agenda();
    java.util.List var80 = var79.getNames();
    java.util.List var81 = var79.getNumbers();
    var76.setNames(var81);
    var69.setNames(var81);
    var63.setNumbers(var81);
    var30.setNumbers(var81);
    var30.addContact("Country [id=null, name=null, acronym=null]", "null - null");
    java.util.Map var89 = var30.getContacts();
    var8.setContacts(var89);
    var0.setContacts(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);

  }

  public void test307() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test307");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    boolean var19 = var17.equals((java.lang.Object)(byte)100);
    var17.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var22 = new br.com.addvisor.model.State();
    int var23 = var17.compareTo(var22);
    br.com.addvisor.model.Country var24 = var22.getCountry();
    boolean var25 = var16.equals((java.lang.Object)var22);
    var16.setId((java.lang.Long)10L);
    br.com.addvisor.model.Evaluate var28 = new br.com.addvisor.model.Evaluate();
    var28.setId((java.lang.Long)10L);
    var28.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var33 = var28.getUser();
    java.lang.String var34 = var28.getComment();
    boolean var35 = var16.equals((java.lang.Object)var28);
    java.lang.String var36 = var16.getLocation();
    br.com.addvisor.model.City var39 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var40 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var39);
    java.lang.String var41 = var40.getComplement();
    br.com.addvisor.model.City var42 = new br.com.addvisor.model.City();
    var42.setName("hi!");
    var42.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address();
    java.lang.String var48 = var47.getComplement();
    java.lang.String var49 = var47.toString();
    boolean var50 = var42.equals((java.lang.Object)var49);
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var52 = new br.com.addvisor.model.State();
    var52.setId((java.lang.Long)1L);
    var52.setName("null\nnull\nnull");
    var52.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var59 = var52.getUf();
    boolean var60 = var51.equals((java.lang.Object)var52);
    var42.setState(var52);
    br.com.addvisor.model.Evaluate var62 = new br.com.addvisor.model.Evaluate();
    var62.setId((java.lang.Long)10L);
    var62.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var67 = var62.getUser();
    boolean var68 = var42.equals((java.lang.Object)var62);
    br.com.addvisor.model.Address var69 = new br.com.addvisor.model.Address();
    java.lang.String var70 = var69.getComplement();
    java.lang.String var71 = var69.toString();
    java.lang.String var72 = var69.getComplement();
    br.com.addvisor.model.City var77 = new br.com.addvisor.model.City();
    var77.setName("hi!");
    var77.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var82 = new br.com.addvisor.model.Address();
    java.lang.String var83 = var82.getComplement();
    java.lang.String var84 = var82.toString();
    boolean var85 = var77.equals((java.lang.Object)var84);
    br.com.addvisor.model.User var86 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var77);
    var69.setCity(var77);
    java.lang.Long var88 = var69.getId();
    br.com.addvisor.model.City var89 = var69.getCity();
    int var90 = var42.compareTo(var89);
    var40.setCity(var89);
    java.lang.String var92 = var40.getComplement();
    java.lang.String var93 = var40.getLocation();
    br.com.addvisor.model.City var94 = var40.getCity();
    var16.setCity(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "hi!"+ "'", var36.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var41.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "null\nnull\nnull"+ "'", var49.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "null\nnull\nnull"+ "'", var71.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var84 + "' != '" + "null\nnull\nnull"+ "'", var84.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var92.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var93 + "' != '" + "null\nnull\nnull"+ "'", var93.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);

  }

  public void test308() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test308");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getDDD();
    var0.setEmail("null - null\nnull\nnull");
    br.com.addvisor.model.City var16 = new br.com.addvisor.model.City();
    var16.setName("hi!");
    var16.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.getComplement();
    java.lang.String var23 = var21.toString();
    boolean var24 = var16.equals((java.lang.Object)var23);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    boolean var34 = var25.equals((java.lang.Object)var26);
    var16.setState(var26);
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var16);
    var36.setLocation("null\nnull\nnull");
    br.com.addvisor.model.Service var39 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    boolean var42 = var40.equals((java.lang.Object)(-1L));
    java.lang.String var43 = var40.toString();
    java.lang.String var44 = var40.getPassword();
    var39.setUser(var40);
    br.com.addvisor.model.Address var46 = var39.getAddress();
    java.lang.String var47 = var39.getName();
    br.com.addvisor.model.City var48 = new br.com.addvisor.model.City();
    var48.setName("hi!");
    var48.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var53 = new br.com.addvisor.model.Address();
    java.lang.String var54 = var53.getComplement();
    java.lang.String var55 = var53.toString();
    boolean var56 = var48.equals((java.lang.Object)var55);
    br.com.addvisor.model.State var57 = new br.com.addvisor.model.State();
    var57.setId((java.lang.Long)1L);
    var57.setName("null\nnull\nnull");
    var57.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var64 = var57.getUf();
    var48.setState(var57);
    boolean var66 = var39.equals((java.lang.Object)var48);
    var36.setCity(var48);
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var48);
    br.com.addvisor.model.Address var69 = new br.com.addvisor.model.Address("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]", var48);
    var0.setCity(var48);
    var48.setName("Evaluate [id=100, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    br.com.addvisor.model.City var75 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var76 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var75);
    br.com.addvisor.model.State var77 = new br.com.addvisor.model.State();
    boolean var79 = var77.equals((java.lang.Object)(byte)100);
    var77.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var82 = new br.com.addvisor.model.State();
    int var83 = var77.compareTo(var82);
    var82.setName("");
    var75.setState(var82);
    var82.setId((java.lang.Long)100L);
    var82.setUf("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var82.setUf("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    var82.setName("hi!");
    var48.setState(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nnull\nnull"+ "'", var23.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var43.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "null\nnull\nnull"+ "'", var55.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 0);

  }

  public void test309() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test309");


    br.com.addvisor.model.City var12 = new br.com.addvisor.model.City();
    var12.setName("hi!");
    var12.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    java.lang.String var18 = var17.getComplement();
    java.lang.String var19 = var17.toString();
    boolean var20 = var12.equals((java.lang.Object)var19);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var12);
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var12);
    var12.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var12);
    br.com.addvisor.model.Address var26 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var12);
    var12.setId((java.lang.Long)0L);
    java.lang.Long var29 = var12.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + 0L+ "'", var29.equals(0L));

  }

  public void test310() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test310");


    br.com.addvisor.model.Evaluate var2 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    boolean var5 = var3.equals((java.lang.Object)(byte)100);
    var3.setUf("null\nnull\nnull");
    boolean var8 = var2.equals((java.lang.Object)var3);
    br.com.addvisor.model.Service var9 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    var9.setUser(var10);
    br.com.addvisor.model.Address var16 = var9.getAddress();
    var2.setService(var9);
    br.com.addvisor.model.enums.ServiceCat var18 = var9.getCategory();
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    var19.setId((java.lang.Long)0L);
    var9.setAddress(var19);
    java.lang.String var23 = var19.getLocation();
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.toString();
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    var26.setName("hi!");
    var24.setCity(var26);
    var26.setId((java.lang.Long)10L);
    java.lang.String var32 = var26.getName();
    var19.setCity(var26);
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull", var26);
    java.lang.String var35 = var34.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "null\nnull\nnull"+ "'", var25.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "hi!"+ "'", var32.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]"+ "'", var35.equals("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]"));

  }

  public void test311() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test311");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.String var6 = var0.getComment();
    boolean var8 = var0.equals((java.lang.Object)(-1L));
    br.com.addvisor.model.Service var9 = var0.getService();
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    java.lang.String var17 = var10.getTags();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    var10.setPhones(var19);
    var0.setService(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test312() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test312");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    var5.setUser(var6);
    br.com.addvisor.model.Address var12 = var5.getAddress();
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    br.com.addvisor.model.City var16 = var13.getCity();
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    var17.setId((java.lang.Long)1L);
    var17.setName("null\nnull\nnull");
    var17.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getUf();
    boolean var25 = var13.equals((java.lang.Object)var17);
    var5.setAddress(var13);
    br.com.addvisor.model.User var27 = var5.getUser();
    var27.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var0.setUser(var27);
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    java.lang.String var36 = var31.getPassword();
    var31.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    boolean var42 = var40.equals((java.lang.Object)(byte)100);
    var40.setUf("null\nnull\nnull");
    boolean var45 = var39.equals((java.lang.Object)var40);
    br.com.addvisor.model.Service var46 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    boolean var49 = var47.equals((java.lang.Object)(-1L));
    java.lang.String var50 = var47.toString();
    java.lang.String var51 = var47.getPassword();
    var46.setUser(var47);
    br.com.addvisor.model.Address var53 = var46.getAddress();
    java.lang.String var54 = var46.getDescription();
    boolean var55 = var39.equals((java.lang.Object)var46);
    br.com.addvisor.model.Evaluate var56 = new br.com.addvisor.model.Evaluate();
    var56.setId((java.lang.Long)10L);
    var56.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var61 = var56.getUser();
    java.lang.Long var62 = var56.getId();
    br.com.addvisor.model.Service var63 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var64 = new br.com.addvisor.model.User();
    boolean var66 = var64.equals((java.lang.Object)(-1L));
    java.lang.String var67 = var64.toString();
    java.lang.String var68 = var64.getPassword();
    var63.setUser(var64);
    br.com.addvisor.model.Address var70 = var63.getAddress();
    java.lang.String var71 = var63.getDescription();
    var56.setService(var63);
    boolean var73 = var46.equals((java.lang.Object)var63);
    br.com.addvisor.model.User var74 = new br.com.addvisor.model.User();
    boolean var76 = var74.equals((java.lang.Object)(-1L));
    java.lang.String var77 = var74.toString();
    java.lang.String var78 = var74.getPassword();
    java.lang.String var79 = var74.getName();
    boolean var80 = var46.equals((java.lang.Object)var74);
    java.lang.Float var81 = var46.getMedia();
    br.com.addvisor.model.Evaluate var84 = new br.com.addvisor.model.Evaluate(var31, var46, (java.lang.Float)0.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setService(var46);
    br.com.addvisor.model.State var86 = new br.com.addvisor.model.State();
    var86.setId((java.lang.Long)1L);
    var86.setName("null\nnull\nnull");
    boolean var91 = var46.equals((java.lang.Object)var86);
    var46.setMedia((java.lang.Float)100.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + 0L+ "'", var62.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var67.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var77.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test313() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test313");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)0L);
    var0.setEmail("User [id=null, name=null, email=null, password=428e147830819130e93707f1ce3a3cdb, phone=null, city=null]");
    java.lang.String var16 = var0.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test314() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test314");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var7 = new br.com.addvisor.model.Agenda();
    java.util.List var8 = var7.getNames();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    var7.setNames(var10);
    java.util.List var12 = var7.getNumbers();
    boolean var13 = var0.equals((java.lang.Object)var7);
    java.lang.String var14 = var0.toString();
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User();
    boolean var17 = var15.equals((java.lang.Object)(-1L));
    java.lang.String var18 = var15.toString();
    br.com.addvisor.model.Evaluate var19 = new br.com.addvisor.model.Evaluate();
    var19.setId((java.lang.Long)10L);
    var19.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var24 = var19.getUser();
    boolean var25 = var15.equals((java.lang.Object)var19);
    java.lang.String var26 = var19.getComment();
    var19.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var30 = new br.com.addvisor.model.State();
    var30.setId((java.lang.Long)1L);
    var30.setName("null\nnull\nnull");
    var30.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var37 = var30.getUf();
    boolean var38 = var29.equals((java.lang.Object)var30);
    var19.setUser(var29);
    br.com.addvisor.model.User var40 = var19.getUser();
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.toString();
    java.lang.String var45 = var41.getPassword();
    java.lang.String var46 = var41.getPhone();
    br.com.addvisor.model.City var47 = var41.getCity();
    br.com.addvisor.model.City var48 = var41.getCity();
    var19.setUser(var41);
    var0.setUser(var41);
    java.lang.String var51 = var0.getComment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var14.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var18.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var44.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var51.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));

  }

  public void test315() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test315");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    java.lang.String var33 = var18.getName();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var35 = new br.com.addvisor.model.State();
    var35.setId((java.lang.Long)1L);
    var35.setName("null\nnull\nnull");
    var35.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var42 = var35.getUf();
    boolean var43 = var34.equals((java.lang.Object)var35);
    var34.setId((java.lang.Long)0L);
    var34.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var48 = var18.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.User var49 = var18.getUser();
    br.com.addvisor.model.Address var50 = var18.getAddress();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);

  }

  public void test316() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test316");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.User var22 = var0.getUser();
    var0.setName("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null] - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test317() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test317");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getName();
    var0.setService(var7);
    br.com.addvisor.model.Service var17 = new br.com.addvisor.model.Service();
    java.lang.String var18 = var17.toString();
    var17.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var0.setService(var17);
    java.lang.String var22 = var0.getComment();
    br.com.addvisor.model.Service var23 = var0.getService();
    var0.setNote((java.lang.Float)(-1.0f));
    var0.setComment("");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var18.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test318() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test318");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    java.lang.String var7 = var0.getTags();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    var0.setPhones(var9);
    java.lang.String var11 = var0.getName();
    var0.setId((java.lang.Long)(-1L));
    var0.setTags("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    var0.setTags("User [id=null, name=null, email=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull, password=null, phone=null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test319() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test319");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    java.lang.String var7 = var1.getPassword();
    var1.setEmail("Evaluate [id=1, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=null, note=-1.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test320() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test320");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    java.util.List var8 = var6.getNumbers();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var6.setNames(var11);
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    java.util.List var18 = var16.getNumbers();
    var13.setNames(var18);
    var6.setNames(var18);
    var0.setNumbers(var18);
    var0.addContact("7250c560acbd5b52abb473bb886fa1ff", "Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    java.util.Map var25 = var0.getContacts();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);

  }

  public void test321() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test321");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    var24.setName("");
    var24.setId((java.lang.Long)100L);
    java.lang.String var39 = var24.toString();
    java.lang.String var40 = var24.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var39.equals("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);

  }

  public void test322() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test322");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    boolean var10 = var2.equals((java.lang.Object)var9);
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var11.equals((java.lang.Object)var12);
    var2.setState(var12);
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var2);
    var22.setLocation("null\nnull\nnull");
    var22.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);

  }

  public void test323() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test323");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getName();
    var0.setService(var7);
    var7.setDescription("");
    java.lang.String var19 = var7.getName();
    java.lang.Float var20 = var7.getMedia();
    br.com.addvisor.model.User var21 = var7.getUser();
    java.lang.String var22 = var21.getDDD();
    var21.setEmail("Country [id=10, name=null, acronym=null]");
    java.lang.String var25 = var21.getPhone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test324() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test324");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    boolean var19 = var17.equals((java.lang.Object)(byte)100);
    var17.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var22 = new br.com.addvisor.model.State();
    int var23 = var17.compareTo(var22);
    br.com.addvisor.model.Country var24 = var22.getCountry();
    boolean var25 = var16.equals((java.lang.Object)var22);
    java.lang.String var26 = var22.getUf();
    br.com.addvisor.model.Country var27 = new br.com.addvisor.model.Country();
    java.lang.Integer var28 = var27.getId();
    java.lang.String var29 = var27.getName();
    java.lang.String var30 = var27.getName();
    var27.setId((java.lang.Integer)100);
    var27.setName("Country [id=null, name=null, acronym=null]");
    java.lang.String var35 = var27.toString();
    var22.setCountry(var27);
    java.lang.String var37 = var22.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]"+ "'", var35.equals("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "null - null"+ "'", var37.equals("null - null"));

  }

  public void test325() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test325");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    var40.setId((java.lang.Long)1L);
    java.lang.Float var43 = var40.getNote();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + 100.0f+ "'", var43.equals(100.0f));

  }

  public void test326() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test326");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.State var3 = var2.getState();
    java.lang.Long var4 = var2.getId();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null", var2);
    var5.setComplement("");
    var5.setId((java.lang.Long)1L);
    java.lang.String var10 = var5.toString();
    java.lang.String var11 = var5.toString();
    java.lang.Long var12 = var5.getId();
    var5.setComplement("null - User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull"+ "'", var10.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull"+ "'", var11.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + 1L+ "'", var12.equals(1L));

  }

  public void test327() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test327");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("null\nnull\nnull");
    br.com.addvisor.model.City var9 = new br.com.addvisor.model.City();
    var9.setName("hi!");
    var9.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var14 = new br.com.addvisor.model.Address();
    java.lang.String var15 = var14.getComplement();
    java.lang.String var16 = var14.toString();
    boolean var17 = var9.equals((java.lang.Object)var16);
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var9);
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var9);
    java.lang.Long var20 = var9.getId();
    int var21 = var0.compareTo(var9);
    br.com.addvisor.model.State var22 = var9.getState();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test328() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test328");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.getDDD();
    var41.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address();
    java.lang.String var48 = var47.toString();
    br.com.addvisor.model.City var49 = new br.com.addvisor.model.City();
    var49.setName("hi!");
    var49.setName("null\nnull\nnull");
    var47.setCity(var49);
    var41.setCity(var49);
    var40.setUser(var41);
    var40.setComment("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var59 = var40.getService();
    var40.setNote((java.lang.Float)100.0f);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);

  }

  public void test329() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test329");


    br.com.addvisor.model.City var14 = new br.com.addvisor.model.City();
    var14.setName("hi!");
    var14.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.getComplement();
    java.lang.String var21 = var19.toString();
    boolean var22 = var14.equals((java.lang.Object)var21);
    br.com.addvisor.model.User var23 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var14);
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var14);
    var14.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var14);
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var14);
    var14.setId((java.lang.Long)0L);
    br.com.addvisor.model.Evaluate var31 = new br.com.addvisor.model.Evaluate();
    var31.setId((java.lang.Long)10L);
    var31.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var36 = var31.getService();
    br.com.addvisor.model.User var39 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var40 = var39.getId();
    var39.setId((java.lang.Long)(-1L));
    var39.setPhone("null\nnull\nnull");
    java.lang.String var45 = var39.getEmail();
    var39.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var31.setUser(var39);
    br.com.addvisor.model.Address var49 = new br.com.addvisor.model.Address();
    java.lang.String var50 = var49.toString();
    br.com.addvisor.model.City var51 = new br.com.addvisor.model.City();
    var51.setName("hi!");
    var51.setName("null\nnull\nnull");
    var49.setCity(var51);
    java.lang.String var57 = var51.getName();
    br.com.addvisor.model.State var58 = var51.getState();
    var39.setCity(var51);
    int var60 = var14.compareTo(var51);
    br.com.addvisor.model.Address var61 = new br.com.addvisor.model.Address("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=null, name=null, email=null, password=null, phone=null, city=null]", var51);
    java.lang.Long var62 = var61.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "null\nnull\nnull"+ "'", var50.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "null\nnull\nnull"+ "'", var57.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);

  }

  public void test330() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test330");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var44 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    var24.setUser(var44);
    java.lang.String var46 = var44.getName();
    java.lang.String var47 = var44.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);

  }

  public void test331() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test331");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    var2.setNames(var5);
    java.util.List var7 = var2.getNumbers();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    var2.setNumbers(var20);
    var2.addContact("", "");
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    var2.setNames(var32);
    boolean var34 = var0.equals((java.lang.Object)var2);
    var0.setName("null\nnull\nnull");
    var0.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    var39.setId((java.lang.Long)10L);
    var39.setId((java.lang.Long)0L);
    var39.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var46 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    boolean var49 = var47.equals((java.lang.Object)(-1L));
    java.lang.String var50 = var47.toString();
    java.lang.String var51 = var47.getPassword();
    var46.setUser(var47);
    br.com.addvisor.model.Address var53 = var46.getAddress();
    java.lang.String var54 = var46.getName();
    var39.setService(var46);
    br.com.addvisor.model.Service var56 = new br.com.addvisor.model.Service();
    java.lang.String var57 = var56.toString();
    var56.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var39.setService(var56);
    java.lang.String var61 = var39.getComment();
    boolean var62 = var0.equals((java.lang.Object)var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var57.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var61.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);

  }

  public void test332() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test332");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    var3.setName("null\nnull\nnull");
    var3.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var10 = var3.getUf();
    java.lang.String var11 = var3.getName();
    br.com.addvisor.model.Country var12 = new br.com.addvisor.model.Country();
    java.lang.String var13 = var12.getAcronym();
    boolean var14 = var3.equals((java.lang.Object)var12);
    var0.setCountry(var12);
    var0.setUf("\nnull\nhi!");
    var0.setUf("Evaluate [id=100, user=User [id=null, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);

  }

  public void test333() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test333");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test334() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test334");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    var18.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    var39.setId((java.lang.Long)10L);
    var39.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var44 = var39.getUser();
    boolean var45 = var35.equals((java.lang.Object)var39);
    java.lang.String var46 = var35.getPassword();
    var35.setId((java.lang.Long)0L);
    var35.setName("null\nnull\nnull");
    var18.setUser(var35);
    var35.setPhone("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    java.lang.String var54 = var35.getPassword();
    java.lang.String var55 = var35.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "null\nnull\nnull"+ "'", var55.equals("null\nnull\nnull"));

  }

  public void test335() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test335");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var8 = var0.getCategory();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    var9.setNames(var12);
    java.util.List var14 = var9.getNumbers();
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    java.util.List var24 = var22.getNumbers();
    br.com.addvisor.model.Agenda var25 = new br.com.addvisor.model.Agenda();
    java.util.List var26 = var25.getNames();
    java.util.List var27 = var25.getNumbers();
    var22.setNames(var27);
    var15.setNames(var27);
    var9.setNumbers(var27);
    var0.setPhones(var27);
    var0.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var0.setName("Country [id=100, name=null, acronym=hi!]");
    java.lang.Float var36 = var0.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);

  }

  public void test336() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test336");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    br.com.addvisor.model.User var11 = var4.getUser();
    br.com.addvisor.model.User var12 = new br.com.addvisor.model.User();
    boolean var14 = var12.equals((java.lang.Object)(-1L));
    java.lang.String var15 = var12.toString();
    br.com.addvisor.model.Evaluate var16 = new br.com.addvisor.model.Evaluate();
    var16.setId((java.lang.Long)10L);
    var16.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var21 = var16.getUser();
    boolean var22 = var12.equals((java.lang.Object)var16);
    java.lang.String var23 = var12.getPassword();
    var12.setId((java.lang.Long)0L);
    java.lang.Long var26 = var12.getId();
    var4.setUser(var12);
    java.lang.Long var28 = var12.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var15.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + 0L+ "'", var26.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + 0L+ "'", var28.equals(0L));

  }

  public void test337() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test337");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    var14.setCountry(var21);
    int var23 = var0.compareTo(var14);
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    boolean var30 = var28.equals((java.lang.Object)(byte)100);
    var28.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    int var34 = var28.compareTo(var33);
    var33.setName("");
    var26.setState(var33);
    var33.setName("null\nnull\nnull");
    int var40 = var14.compareTo(var33);
    java.lang.String var41 = var33.getUf();
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    boolean var44 = var42.equals((java.lang.Object)(byte)100);
    var42.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var47 = new br.com.addvisor.model.State();
    int var48 = var42.compareTo(var47);
    java.lang.String var49 = var47.getName();
    var47.setId((java.lang.Long)10L);
    int var52 = var33.compareTo(var47);
    br.com.addvisor.model.Country var53 = var33.getCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);

  }

  public void test338() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test338");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.getComplement();
    java.lang.String var6 = var4.toString();
    java.lang.String var7 = var4.getComplement();
    br.com.addvisor.model.City var12 = new br.com.addvisor.model.City();
    var12.setName("hi!");
    var12.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    java.lang.String var18 = var17.getComplement();
    java.lang.String var19 = var17.toString();
    boolean var20 = var12.equals((java.lang.Object)var19);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var12);
    var4.setCity(var12);
    java.lang.Long var23 = var4.getId();
    br.com.addvisor.model.City var24 = var4.getCity();
    br.com.addvisor.model.State var25 = var24.getState();
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User("User [id=null, name=null, email=null, password=null, phone=null, city=null]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var24);
    br.com.addvisor.model.User var27 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    boolean var36 = var27.equals((java.lang.Object)var28);
    java.lang.String var37 = var28.getUf();
    var24.setState(var28);
    var28.setName("null\nnull\nnull\n\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null\nnull\nnull"+ "'", var6.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test339() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test339");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    var3.setName("null\nnull\nnull");
    var3.setUf("Country [id=null, name=null, acronym=null]");
    var3.setName("null - null");
    boolean var12 = var2.equals((java.lang.Object)var3);
    java.lang.String var13 = var3.getName();
    br.com.addvisor.model.Country var14 = var3.getCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null - null"+ "'", var13.equals("null - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test340() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test340");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getName();
    var0.setPassword("null - null\nnull\nnull");
    var0.setPassword("User [id=null, name=null, email=null, password=null, phone=null, city=User [id=null, name=null, email=null, password=null, phone=null, city=null] - null]");
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    var11.setId((java.lang.Long)1L);
    var11.setName("null\nnull\nnull");
    var11.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var18 = var11.getUf();
    boolean var19 = var10.equals((java.lang.Object)var11);
    br.com.addvisor.model.Service var20 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getPassword();
    var20.setUser(var21);
    br.com.addvisor.model.Address var27 = var20.getAddress();
    java.lang.String var28 = var20.getName();
    br.com.addvisor.model.City var29 = new br.com.addvisor.model.City();
    var29.setName("hi!");
    var29.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    java.lang.String var35 = var34.getComplement();
    java.lang.String var36 = var34.toString();
    boolean var37 = var29.equals((java.lang.Object)var36);
    br.com.addvisor.model.State var38 = new br.com.addvisor.model.State();
    var38.setId((java.lang.Long)1L);
    var38.setName("null\nnull\nnull");
    var38.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var45 = var38.getUf();
    var29.setState(var38);
    boolean var47 = var20.equals((java.lang.Object)var29);
    br.com.addvisor.model.Evaluate var50 = new br.com.addvisor.model.Evaluate(var10, var20, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    boolean var53 = var51.equals((java.lang.Object)(-1L));
    java.lang.String var54 = var51.getDDD();
    var51.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var57 = new br.com.addvisor.model.Address();
    java.lang.String var58 = var57.toString();
    br.com.addvisor.model.City var59 = new br.com.addvisor.model.City();
    var59.setName("hi!");
    var59.setName("null\nnull\nnull");
    var57.setCity(var59);
    var51.setCity(var59);
    var50.setUser(var51);
    var50.setComment("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var69 = var50.getService();
    br.com.addvisor.model.Evaluate var72 = new br.com.addvisor.model.Evaluate(var0, var69, (java.lang.Float)(-1.0f), "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]\nUser [id=null, name=null, email=null, password=null, phone=null, city=null]\nnull\nnull\nnull");
    java.lang.String var73 = var69.getTags();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null\nnull\nnull"+ "'", var36.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "null\nnull\nnull"+ "'", var58.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);

  }

  public void test341() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test341");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Service var17 = var0.getService();
    var0.setId((java.lang.Long)100L);
    var0.setComment("User [id=0, name=hi!, email=, password=aff97160474a056e838c1f721af01edf, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]");
    br.com.addvisor.model.Service var22 = var0.getService();
    br.com.addvisor.model.Service var23 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var24 = new br.com.addvisor.model.User();
    boolean var26 = var24.equals((java.lang.Object)(-1L));
    java.lang.String var27 = var24.toString();
    java.lang.String var28 = var24.getPassword();
    var23.setUser(var24);
    br.com.addvisor.model.Address var30 = var23.getAddress();
    java.lang.String var31 = var23.getTags();
    br.com.addvisor.model.Agenda var32 = new br.com.addvisor.model.Agenda();
    java.util.List var33 = var32.getNames();
    java.util.List var34 = var32.getNumbers();
    var23.setPhones(var34);
    java.lang.String var36 = var23.toString();
    java.lang.String var37 = var23.getDescription();
    var23.setTags("User [id=null, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=null, phone=null, city=null]");
    var0.setService(var23);
    java.lang.Long var41 = var23.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var27.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"+ "'", var36.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);

  }

  public void test342() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test342");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    br.com.addvisor.model.City var31 = new br.com.addvisor.model.City();
    var31.setName("hi!");
    var31.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address();
    java.lang.String var37 = var36.getComplement();
    java.lang.String var38 = var36.toString();
    boolean var39 = var31.equals((java.lang.Object)var38);
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var41 = new br.com.addvisor.model.State();
    var41.setId((java.lang.Long)1L);
    var41.setName("null\nnull\nnull");
    var41.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var48 = var41.getUf();
    boolean var49 = var40.equals((java.lang.Object)var41);
    var31.setState(var41);
    br.com.addvisor.model.Address var51 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var31);
    var51.setLocation("null\nnull\nnull");
    br.com.addvisor.model.Service var54 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var55 = new br.com.addvisor.model.User();
    boolean var57 = var55.equals((java.lang.Object)(-1L));
    java.lang.String var58 = var55.toString();
    java.lang.String var59 = var55.getPassword();
    var54.setUser(var55);
    br.com.addvisor.model.Address var61 = var54.getAddress();
    java.lang.String var62 = var54.getName();
    br.com.addvisor.model.City var63 = new br.com.addvisor.model.City();
    var63.setName("hi!");
    var63.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address();
    java.lang.String var69 = var68.getComplement();
    java.lang.String var70 = var68.toString();
    boolean var71 = var63.equals((java.lang.Object)var70);
    br.com.addvisor.model.State var72 = new br.com.addvisor.model.State();
    var72.setId((java.lang.Long)1L);
    var72.setName("null\nnull\nnull");
    var72.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var79 = var72.getUf();
    var63.setState(var72);
    boolean var81 = var54.equals((java.lang.Object)var63);
    var51.setCity(var63);
    var16.setAddress(var51);
    br.com.addvisor.model.enums.ServiceCat var84 = var16.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "null\nnull\nnull"+ "'", var38.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "null\nnull\nnull"+ "'", var70.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);

  }

  public void test343() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test343");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.Integer var3 = var0.getId();
    br.com.addvisor.model.Service var4 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var5 = new br.com.addvisor.model.User();
    boolean var7 = var5.equals((java.lang.Object)(-1L));
    java.lang.String var8 = var5.toString();
    java.lang.String var9 = var5.getPassword();
    var4.setUser(var5);
    br.com.addvisor.model.Address var11 = var4.getAddress();
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getComplement();
    java.lang.String var14 = var12.toString();
    br.com.addvisor.model.City var15 = var12.getCity();
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    var16.setId((java.lang.Long)1L);
    var16.setName("null\nnull\nnull");
    var16.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var23 = var16.getUf();
    boolean var24 = var12.equals((java.lang.Object)var16);
    var4.setAddress(var12);
    var4.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var28 = var4.getDescription();
    java.lang.String var29 = var4.toString();
    br.com.addvisor.model.enums.ServiceCat var30 = var4.getCategory();
    java.util.List var31 = var4.getPhones();
    var4.setMedia((java.lang.Float)1.0f);
    java.lang.Long var34 = var4.getId();
    boolean var35 = var0.equals((java.lang.Object)var4);
    var0.setAcronym("null\nService [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var29.equals("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);

  }

  public void test344() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test344");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    var0.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var24 = var0.getDescription();
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var27 = var0.getUser();
    br.com.addvisor.model.Evaluate var28 = new br.com.addvisor.model.Evaluate();
    var28.setId((java.lang.Long)10L);
    var28.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var33 = var28.getService();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    boolean var36 = var34.equals((java.lang.Object)(-1L));
    java.lang.String var37 = var34.toString();
    java.lang.String var38 = var34.getPassword();
    java.lang.String var39 = var34.getPhone();
    var28.setUser(var34);
    br.com.addvisor.model.Service var41 = new br.com.addvisor.model.Service();
    java.lang.String var42 = var41.toString();
    var41.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var45 = var41.getAddress();
    var41.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var48 = var41.getName();
    br.com.addvisor.model.Evaluate var51 = new br.com.addvisor.model.Evaluate(var34, var41, (java.lang.Float)1.0f, "");
    var51.setNote((java.lang.Float)100.0f);
    boolean var54 = var0.equals((java.lang.Object)var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var42.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);

  }

  public void test345() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test345");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    boolean var10 = var2.equals((java.lang.Object)var9);
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", var2);
    br.com.addvisor.model.City var12 = var11.getCity();
    java.lang.String var13 = var11.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]\nCountry [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]\nnull\nnull\nnull"+ "'", var13.equals("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]\nCountry [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]\nnull\nnull\nnull"));

  }

  public void test346() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test346");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    var0.setName("null - null - null");
    java.lang.String var7 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null - null - null"+ "'", var7.equals("null - null - null"));

  }

  public void test347() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test347");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    var0.addContact("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.util.List var6 = var0.getNumbers();
    java.util.Map var7 = var0.getContacts();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test348() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test348");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    var18.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    var39.setId((java.lang.Long)10L);
    var39.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var44 = var39.getUser();
    boolean var45 = var35.equals((java.lang.Object)var39);
    java.lang.String var46 = var35.getPassword();
    var35.setId((java.lang.Long)0L);
    var35.setName("null\nnull\nnull");
    var18.setUser(var35);
    var35.setPhone("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    br.com.addvisor.model.Evaluate var54 = new br.com.addvisor.model.Evaluate();
    var54.setId((java.lang.Long)10L);
    var54.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var59 = var54.getService();
    br.com.addvisor.model.User var62 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var63 = var62.getId();
    var62.setId((java.lang.Long)(-1L));
    var62.setPhone("null\nnull\nnull");
    java.lang.String var68 = var62.getEmail();
    var62.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var54.setUser(var62);
    var62.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    br.com.addvisor.model.City var74 = var62.getCity();
    br.com.addvisor.model.Evaluate var75 = new br.com.addvisor.model.Evaluate();
    var75.setId((java.lang.Long)10L);
    var75.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var80 = var75.getUser();
    var75.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var75.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var85 = new br.com.addvisor.model.Service();
    java.lang.String var86 = var85.toString();
    var85.setMedia((java.lang.Float)10.0f);
    var75.setService(var85);
    boolean var90 = var62.equals((java.lang.Object)var85);
    br.com.addvisor.model.Evaluate var93 = new br.com.addvisor.model.Evaluate(var35, var85, (java.lang.Float)1.0f, "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    var85.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var86.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var90 == false);

  }

  public void test349() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test349");


    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.Service var5 = var4.getService();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var9 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var8);
    br.com.addvisor.model.State var10 = new br.com.addvisor.model.State();
    boolean var12 = var10.equals((java.lang.Object)(byte)100);
    var10.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    int var16 = var10.compareTo(var15);
    var15.setName("");
    var8.setState(var15);
    var15.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var22 = new br.com.addvisor.model.State();
    boolean var24 = var22.equals((java.lang.Object)(byte)100);
    var22.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var27 = new br.com.addvisor.model.State();
    int var28 = var22.compareTo(var27);
    var27.setName("");
    int var31 = var15.compareTo(var27);
    boolean var32 = var4.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "");
    var4.setUser(var35);
    var35.setName("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var39 = new br.com.addvisor.model.Address();
    java.lang.String var40 = var39.toString();
    br.com.addvisor.model.City var41 = new br.com.addvisor.model.City();
    var41.setName("hi!");
    var39.setCity(var41);
    var41.setId((java.lang.Long)10L);
    br.com.addvisor.model.City var47 = new br.com.addvisor.model.City();
    var47.setName("hi!");
    var47.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var52 = new br.com.addvisor.model.Address();
    java.lang.String var53 = var52.getComplement();
    java.lang.String var54 = var52.toString();
    boolean var55 = var47.equals((java.lang.Object)var54);
    br.com.addvisor.model.State var56 = new br.com.addvisor.model.State();
    var56.setId((java.lang.Long)1L);
    var56.setName("null\nnull\nnull");
    var56.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var63 = var56.getUf();
    var47.setState(var56);
    boolean var65 = var41.equals((java.lang.Object)var47);
    var35.setCity(var47);
    br.com.addvisor.model.Address var67 = new br.com.addvisor.model.Address();
    java.lang.String var68 = var67.getComplement();
    java.lang.String var69 = var67.toString();
    br.com.addvisor.model.City var70 = var67.getCity();
    br.com.addvisor.model.State var71 = new br.com.addvisor.model.State();
    var71.setId((java.lang.Long)1L);
    var71.setName("null\nnull\nnull");
    var71.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var78 = var71.getUf();
    boolean var79 = var67.equals((java.lang.Object)var71);
    java.lang.Long var80 = var71.getId();
    boolean var82 = var71.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var71.setId((java.lang.Long)10L);
    var47.setState(var71);
    br.com.addvisor.model.State var86 = var47.getState();
    br.com.addvisor.model.User var87 = new br.com.addvisor.model.User("User [id=null, name=null, email=null, password=31da43824047429f3b1fa47f621f02f4, phone=null, city=null]", "null\nnull\nnull\nnull\nnull", "null - null - Country [id=null, name=null, acronym=null]", "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null", var47);
    java.lang.String var88 = var47.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "null\nnull\nnull"+ "'", var40.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "null\nnull\nnull"+ "'", var54.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "null\nnull\nnull"+ "'", var69.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + 1L+ "'", var80.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "null\nnull\nnull"+ "'", var88.equals("null\nnull\nnull"));

  }

  public void test350() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test350");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=[]]", "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var3 = var2.getPassword();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "fdd804c9208bcd9f693e9799e75fc403"+ "'", var3.equals("fdd804c9208bcd9f693e9799e75fc403"));

  }

  public void test351() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test351");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    var0.setId((java.lang.Long)1L);
    java.lang.Long var11 = var0.getId();
    var0.setDescription("null - null\nnull\nnull");
    java.lang.String var14 = var0.getName();
    var0.setMedia((java.lang.Float)1.0f);
    java.lang.String var17 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + 1L+ "'", var11.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);

  }

  public void test352() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test352");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var0.toString();
    boolean var10 = var0.equals((java.lang.Object)true);
    java.lang.Float var11 = var0.getNote();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var8.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test353() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test353");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    boolean var10 = var2.equals((java.lang.Object)var9);
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", var2);
    java.lang.String var12 = var11.getLocation();
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.toString();
    br.com.addvisor.model.City var15 = new br.com.addvisor.model.City();
    var15.setName("hi!");
    var13.setCity(var15);
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    int var22 = var15.compareTo(var19);
    br.com.addvisor.model.City var37 = new br.com.addvisor.model.City();
    var37.setName("hi!");
    var37.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var42 = new br.com.addvisor.model.Address();
    java.lang.String var43 = var42.getComplement();
    java.lang.String var44 = var42.toString();
    boolean var45 = var37.equals((java.lang.Object)var44);
    br.com.addvisor.model.User var46 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var37);
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var37);
    var37.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var50 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var37);
    br.com.addvisor.model.Address var51 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var37);
    var37.setId((java.lang.Long)0L);
    br.com.addvisor.model.Evaluate var54 = new br.com.addvisor.model.Evaluate();
    var54.setId((java.lang.Long)10L);
    var54.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var59 = var54.getService();
    br.com.addvisor.model.User var62 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var63 = var62.getId();
    var62.setId((java.lang.Long)(-1L));
    var62.setPhone("null\nnull\nnull");
    java.lang.String var68 = var62.getEmail();
    var62.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var54.setUser(var62);
    br.com.addvisor.model.Address var72 = new br.com.addvisor.model.Address();
    java.lang.String var73 = var72.toString();
    br.com.addvisor.model.City var74 = new br.com.addvisor.model.City();
    var74.setName("hi!");
    var74.setName("null\nnull\nnull");
    var72.setCity(var74);
    java.lang.String var80 = var74.getName();
    br.com.addvisor.model.State var81 = var74.getState();
    var62.setCity(var74);
    int var83 = var37.compareTo(var74);
    br.com.addvisor.model.Address var84 = new br.com.addvisor.model.Address("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=null, name=null, email=null, password=null, phone=null, city=null]", var74);
    int var85 = var19.compareTo(var74);
    var11.setCity(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]"+ "'", var12.equals("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null\nnull\nnull"+ "'", var44.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var73 + "' != '" + "null\nnull\nnull"+ "'", var73.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "null\nnull\nnull"+ "'", var80.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == (-6));

  }

  public void test354() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test354");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.valueOf("Country [id=100, name=null, acronym=hi!]\nEvaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]\nnull\nnull\nnull");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test355() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test355");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)(-1L));
    java.lang.String var14 = var0.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test356() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test356");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("null\nhi!\nnull\nnull\nnull - null");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test357() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test357");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.City var50 = var0.getCity();
    var0.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.City var53 = var0.getCity();
    java.lang.String var54 = var0.getName();
    br.com.addvisor.model.Country var55 = new br.com.addvisor.model.Country();
    java.lang.Integer var56 = var55.getId();
    java.lang.String var57 = var55.getName();
    boolean var58 = var0.equals((java.lang.Object)var55);
    java.lang.String var59 = var55.getAcronym();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var54.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);

  }

  public void test358() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test358");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    var16.setDescription("Evaluate [id=null, user=null, service=null, note=null, comment=null]");
    java.util.List var32 = var16.getPhones();
    var16.setDescription("Service [id=null, name=null, description=null, tags=null, media=100.0, address=null, category=null, phones=null]");
    java.lang.String var35 = var16.getTags();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);

  }

  public void test359() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test359");


    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var4.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var9 = new br.com.addvisor.model.Address();
    java.lang.String var10 = var9.getComplement();
    java.lang.String var11 = var9.toString();
    boolean var12 = var4.equals((java.lang.Object)var11);
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", var4);
    br.com.addvisor.model.Address var18 = new br.com.addvisor.model.Address();
    java.lang.String var19 = var18.getComplement();
    java.lang.String var20 = var18.toString();
    java.lang.String var21 = var18.getComplement();
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    var26.setName("hi!");
    var26.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var31 = new br.com.addvisor.model.Address();
    java.lang.String var32 = var31.getComplement();
    java.lang.String var33 = var31.toString();
    boolean var34 = var26.equals((java.lang.Object)var33);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var26);
    var18.setCity(var26);
    var18.setComplement("hi!");
    br.com.addvisor.model.City var39 = var18.getCity();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User("null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Evaluate [id=0, user=null, service=null, note=null, comment=null]]", "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Evaluate [id=null, user=null, service=null, note=null, comment=]", var39);
    boolean var41 = var4.equals((java.lang.Object)var39);
    br.com.addvisor.model.Address var42 = new br.com.addvisor.model.Address("User [id=null, name=null, email=null, password=75ede0e9e4c762359b0d3d78967635e0, phone=null - null\nnull\nnull, city=null]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var39);
    var39.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null\nnull\nnull"+ "'", var20.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null\nnull\nnull"+ "'", var33.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == true);

  }

  public void test360() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test360");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.String var29 = var16.toString();
    br.com.addvisor.model.Service var30 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    var30.setUser(var31);
    br.com.addvisor.model.Address var37 = var30.getAddress();
    java.lang.String var38 = var30.getName();
    br.com.addvisor.model.Address var39 = var30.getAddress();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    boolean var42 = var40.equals((java.lang.Object)(-1L));
    java.lang.String var43 = var40.toString();
    br.com.addvisor.model.Evaluate var44 = new br.com.addvisor.model.Evaluate();
    var44.setId((java.lang.Long)10L);
    var44.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var49 = var44.getUser();
    boolean var50 = var40.equals((java.lang.Object)var44);
    java.lang.String var51 = var40.getPassword();
    var40.setId((java.lang.Long)(-1L));
    java.lang.String var54 = var40.getPhone();
    var30.setUser(var40);
    java.lang.String var56 = var40.getDDD();
    var16.setUser(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var29.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var43.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);

  }

  public void test361() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test361");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    java.lang.Long var3 = var0.getId();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    java.lang.Integer var14 = var13.getId();
    var9.setCountry(var13);
    br.com.addvisor.model.Country var16 = new br.com.addvisor.model.Country();
    java.lang.Integer var17 = var16.getId();
    java.lang.String var18 = var16.getName();
    var9.setCountry(var16);
    int var20 = var0.compareTo(var9);
    var9.setUf("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    var9.setName("Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]");
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.City var30 = new br.com.addvisor.model.City();
    var30.setName("hi!");
    var30.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address();
    java.lang.String var36 = var35.getComplement();
    java.lang.String var37 = var35.toString();
    boolean var38 = var30.equals((java.lang.Object)var37);
    br.com.addvisor.model.State var39 = new br.com.addvisor.model.State();
    var39.setId((java.lang.Long)1L);
    var39.setName("null\nnull\nnull");
    var39.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var46 = var39.getUf();
    var30.setState(var39);
    br.com.addvisor.model.State var48 = var30.getState();
    java.lang.String var49 = var48.getName();
    java.lang.String var50 = var48.getName();
    var25.setState(var48);
    br.com.addvisor.model.Country var52 = var48.getCountry();
    int var53 = var9.compareTo(var48);
    br.com.addvisor.model.Country var54 = new br.com.addvisor.model.Country();
    java.lang.Integer var55 = var54.getId();
    java.lang.String var56 = var54.getName();
    java.lang.String var57 = var54.getName();
    var54.setId((java.lang.Integer)100);
    var54.setAcronym("hi!");
    java.lang.String var62 = var54.toString();
    java.lang.String var63 = var54.toString();
    var9.setCountry(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "null\nnull\nnull"+ "'", var37.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var49.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "Country [id=100, name=null, acronym=hi!]"+ "'", var62.equals("Country [id=100, name=null, acronym=hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "Country [id=100, name=null, acronym=hi!]"+ "'", var63.equals("Country [id=100, name=null, acronym=hi!]"));

  }

  public void test362() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test362");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    int var6 = var0.compareTo(var3);
    br.com.addvisor.model.Address var7 = new br.com.addvisor.model.Address();
    java.lang.String var8 = var7.getComplement();
    java.lang.String var9 = var7.toString();
    br.com.addvisor.model.City var10 = var7.getCity();
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    var11.setId((java.lang.Long)1L);
    var11.setName("null\nnull\nnull");
    var11.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var18 = var11.getUf();
    boolean var19 = var7.equals((java.lang.Object)var11);
    java.lang.String var20 = var11.getName();
    int var21 = var3.compareTo(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull"+ "'", var9.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0);

  }

  public void test363() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test363");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getName();
    var0.setId((java.lang.Integer)100);
    java.lang.String var6 = var0.getName();
    var0.setAcronym("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var0.setAcronym("21c96d96756cfeed7f71110d9cb1788b");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test364() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test364");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    java.lang.String var39 = var35.getPassword();
    java.lang.String var40 = var35.getName();
    boolean var41 = var7.equals((java.lang.Object)var35);
    java.lang.String var42 = var35.toString();
    br.com.addvisor.model.City var43 = new br.com.addvisor.model.City();
    var43.setName("hi!");
    var43.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var48 = new br.com.addvisor.model.Address();
    java.lang.String var49 = var48.getComplement();
    java.lang.String var50 = var48.toString();
    boolean var51 = var43.equals((java.lang.Object)var50);
    br.com.addvisor.model.State var52 = new br.com.addvisor.model.State();
    var52.setId((java.lang.Long)1L);
    var52.setName("null\nnull\nnull");
    var52.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var59 = var52.getUf();
    var43.setState(var52);
    var35.setCity(var43);
    br.com.addvisor.model.State var62 = var43.getState();
    br.com.addvisor.model.State var63 = new br.com.addvisor.model.State();
    var63.setId((java.lang.Long)1L);
    var63.setName("null\nnull\nnull");
    var63.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var70 = var63.getUf();
    java.lang.String var71 = var63.getName();
    br.com.addvisor.model.Country var72 = new br.com.addvisor.model.Country();
    java.lang.String var73 = var72.getAcronym();
    boolean var74 = var63.equals((java.lang.Object)var72);
    java.lang.String var75 = var72.getAcronym();
    var72.setAcronym("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var72.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var62.setCountry(var72);
    var72.setId((java.lang.Integer)(-19));
    java.lang.String var83 = var72.getAcronym();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var42.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "null\nnull\nnull"+ "'", var50.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var71.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var83 + "' != '" + "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"+ "'", var83.equals("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"));

  }

  public void test365() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test365");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Country var10 = var1.getCountry();
    var1.setUf("Us");
    br.com.addvisor.model.Evaluate var13 = new br.com.addvisor.model.Evaluate();
    var13.setId((java.lang.Long)10L);
    var13.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var18 = var13.getUser();
    java.lang.Long var19 = var13.getId();
    br.com.addvisor.model.Service var20 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getPassword();
    var20.setUser(var21);
    br.com.addvisor.model.Address var27 = var20.getAddress();
    java.lang.String var28 = var20.getDescription();
    var13.setService(var20);
    br.com.addvisor.model.Service var30 = var13.getService();
    var13.setId((java.lang.Long)100L);
    var13.setComment("User [id=0, name=hi!, email=, password=aff97160474a056e838c1f721af01edf, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]");
    br.com.addvisor.model.Service var35 = var13.getService();
    br.com.addvisor.model.Service var36 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var37 = new br.com.addvisor.model.User();
    boolean var39 = var37.equals((java.lang.Object)(-1L));
    java.lang.String var40 = var37.toString();
    java.lang.String var41 = var37.getPassword();
    var36.setUser(var37);
    br.com.addvisor.model.Address var43 = var36.getAddress();
    java.lang.String var44 = var36.getTags();
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    java.util.List var47 = var45.getNumbers();
    var36.setPhones(var47);
    java.lang.String var49 = var36.toString();
    java.lang.String var50 = var36.getDescription();
    var36.setTags("User [id=null, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=null, phone=null, city=null]");
    var13.setService(var36);
    boolean var54 = var1.equals((java.lang.Object)var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + 0L+ "'", var19.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var40.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var49 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"+ "'", var49.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);

  }

  public void test366() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test366");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("null - null", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    var2.setPhone("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Service var5 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    var5.setUser(var6);
    br.com.addvisor.model.Address var12 = var5.getAddress();
    java.util.List var13 = var5.getPhones();
    br.com.addvisor.model.Agenda var14 = new br.com.addvisor.model.Agenda();
    java.util.List var15 = var14.getNames();
    java.util.List var16 = var14.getNumbers();
    br.com.addvisor.model.Agenda var17 = new br.com.addvisor.model.Agenda();
    java.util.List var18 = var17.getNames();
    java.util.List var19 = var17.getNumbers();
    var14.setNames(var19);
    var5.setPhones(var19);
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    var23.setId((java.lang.Long)1L);
    var23.setName("null\nnull\nnull");
    var23.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var30 = var23.getUf();
    boolean var31 = var22.equals((java.lang.Object)var23);
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    boolean var35 = var33.equals((java.lang.Object)(-1L));
    java.lang.String var36 = var33.toString();
    java.lang.String var37 = var33.getPassword();
    var32.setUser(var33);
    br.com.addvisor.model.Address var39 = var32.getAddress();
    java.lang.String var40 = var32.getName();
    br.com.addvisor.model.City var41 = new br.com.addvisor.model.City();
    var41.setName("hi!");
    var41.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var46 = new br.com.addvisor.model.Address();
    java.lang.String var47 = var46.getComplement();
    java.lang.String var48 = var46.toString();
    boolean var49 = var41.equals((java.lang.Object)var48);
    br.com.addvisor.model.State var50 = new br.com.addvisor.model.State();
    var50.setId((java.lang.Long)1L);
    var50.setName("null\nnull\nnull");
    var50.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var57 = var50.getUf();
    var41.setState(var50);
    boolean var59 = var32.equals((java.lang.Object)var41);
    br.com.addvisor.model.Evaluate var62 = new br.com.addvisor.model.Evaluate(var22, var32, (java.lang.Float)100.0f, "");
    java.lang.String var63 = var22.getEmail();
    var22.setEmail("null - null\nnull\nnull");
    java.lang.String var66 = var22.getDDD();
    var5.setUser(var22);
    br.com.addvisor.model.Evaluate var70 = new br.com.addvisor.model.Evaluate(var2, var5, (java.lang.Float)1.0f, "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);

  }

  public void test367() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test367");


    br.com.addvisor.model.Address var2 = new br.com.addvisor.model.Address();
    java.lang.String var3 = var2.toString();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var2.setCity(var4);
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    var17.setId((java.lang.Long)1L);
    var17.setName("null\nnull\nnull");
    var17.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getUf();
    var8.setState(var17);
    int var26 = var4.compareTo(var8);
    java.lang.String var27 = var8.toString();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address("Evaluate [id=null, user=null, service=null, note=null, comment=]", "Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]", var8);
    java.lang.String var29 = var8.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null\nnull\nnull"+ "'", var3.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null\nnull\nnull"+ "'", var29.equals("null\nnull\nnull"));

  }

  public void test368() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test368");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.Country var3 = var0.getCountry();
    var0.setId((java.lang.Long)1L);
    var0.setName("Service [id=null, name=null, description=null, tags=null, media=10.0, address=null, category=null, phones=null]");
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var8.setUser(var9);
    br.com.addvisor.model.Address var15 = var8.getAddress();
    java.lang.String var16 = var8.getName();
    br.com.addvisor.model.Address var17 = var8.getAddress();
    boolean var18 = var0.equals((java.lang.Object)var8);
    java.lang.String var19 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=10.0, address=null, category=null, phones=null]"+ "'", var19.equals("Service [id=null, name=null, description=null, tags=null, media=10.0, address=null, category=null, phones=null]"));

  }

  public void test369() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test369");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    var0.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var6 = new br.com.addvisor.model.Address();
    java.lang.String var7 = var6.toString();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    var6.setCity(var8);
    var0.setCity(var8);
    var0.setPassword("hi!");
    var0.setPassword(" - null");
    var0.setEmail("Evaluate [id=0, user=null, service=null, note=null, comment=null]\n\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));

  }

  public void test370() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test370");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    java.lang.String var33 = var18.getName();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var35 = new br.com.addvisor.model.State();
    var35.setId((java.lang.Long)1L);
    var35.setName("null\nnull\nnull");
    var35.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var42 = var35.getUf();
    boolean var43 = var34.equals((java.lang.Object)var35);
    var34.setId((java.lang.Long)0L);
    var34.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var48 = var18.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.User var49 = var18.getUser();
    java.lang.String var50 = var18.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);

  }

  public void test371() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test371");


    br.com.addvisor.model.City var10 = new br.com.addvisor.model.City();
    var10.setName("hi!");
    var10.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    java.lang.String var16 = var15.getComplement();
    java.lang.String var17 = var15.toString();
    boolean var18 = var10.equals((java.lang.Object)var17);
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var10);
    br.com.addvisor.model.Address var20 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var10);
    java.lang.Long var21 = var10.getId();
    br.com.addvisor.model.User var22 = new br.com.addvisor.model.User("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull", "Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var10);
    java.lang.String var23 = var22.toString();
    br.com.addvisor.model.City var24 = var22.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "null\nnull\nnull"+ "'", var17.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "User [id=null, name=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, email=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], password=767ca4906ff527b215592f830290ac13, phone=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], city=null\nnull\nnull]"+ "'", var23.equals("User [id=null, name=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, email=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], password=767ca4906ff527b215592f830290ac13, phone=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], city=null\nnull\nnull]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);

  }

  public void test372() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test372");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    br.com.addvisor.model.City var3 = var0.getCity();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    var4.setId((java.lang.Long)1L);
    var4.setName("null\nnull\nnull");
    var4.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var11 = var4.getUf();
    boolean var12 = var0.equals((java.lang.Object)var4);
    java.lang.String var13 = var0.getLocation();
    java.lang.String var14 = var0.getLocation();
    var0.setId((java.lang.Long)100L);
    var0.setComplement(" -");
    java.lang.String var19 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\n -\nnull"+ "'", var19.equals("null\n -\nnull"));

  }

  public void test373() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test373");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.getDDD();
    var41.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address();
    java.lang.String var48 = var47.toString();
    br.com.addvisor.model.City var49 = new br.com.addvisor.model.City();
    var49.setName("hi!");
    var49.setName("null\nnull\nnull");
    var47.setCity(var49);
    var41.setCity(var49);
    var40.setUser(var41);
    var40.setComment("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var59 = var40.getService();
    var40.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);

  }

  public void test374() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test374");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.Service var1 = var0.getService();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var4);
    br.com.addvisor.model.State var6 = new br.com.addvisor.model.State();
    boolean var8 = var6.equals((java.lang.Object)(byte)100);
    var6.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    int var12 = var6.compareTo(var11);
    var11.setName("");
    var4.setState(var11);
    var11.setId((java.lang.Long)100L);
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    int var24 = var18.compareTo(var23);
    var23.setName("");
    int var27 = var11.compareTo(var23);
    boolean var28 = var0.equals((java.lang.Object)var11);
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "");
    var0.setUser(var31);
    java.lang.String var33 = var0.toString();
    var0.setNote((java.lang.Float)(-1.0f));
    var0.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "Evaluate [id=null, user=User [id=null, name=null, email=null, password=d41d8cd98f00b204e9800998ecf8427e, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null], service=null, note=null, comment=null]"+ "'", var33.equals("Evaluate [id=null, user=User [id=null, name=null, email=null, password=d41d8cd98f00b204e9800998ecf8427e, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null], service=null, note=null, comment=null]"));

  }

  public void test375() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test375");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.Address var9 = var0.getAddress();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    br.com.addvisor.model.Evaluate var14 = new br.com.addvisor.model.Evaluate();
    var14.setId((java.lang.Long)10L);
    var14.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var19 = var14.getUser();
    boolean var20 = var10.equals((java.lang.Object)var14);
    java.lang.String var21 = var10.getPassword();
    var10.setId((java.lang.Long)(-1L));
    java.lang.String var24 = var10.getPhone();
    var0.setUser(var10);
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.getDDD();
    boolean var31 = var26.equals((java.lang.Object)(short)100);
    boolean var32 = var10.equals((java.lang.Object)(short)100);
    var10.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var35 = var10.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var35.equals("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test376() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test376");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.getCategory("Service [id=1, name=null, description=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test377() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test377");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=null]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    var2.setEmail("Country [id=10, name=null, acronym=null]");
    br.com.addvisor.model.City var5 = var2.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test378() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test378");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    var0.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var24 = var0.getDescription();
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var27 = var0.getDescription();
    br.com.addvisor.model.User var28 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var29 = new br.com.addvisor.model.State();
    var29.setId((java.lang.Long)1L);
    var29.setName("null\nnull\nnull");
    var29.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var36 = var29.getUf();
    boolean var37 = var28.equals((java.lang.Object)var29);
    var28.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var40 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.toString();
    java.lang.String var45 = var41.getPassword();
    var40.setUser(var41);
    br.com.addvisor.model.Address var47 = var40.getAddress();
    java.lang.String var48 = var40.getName();
    var40.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var51 = var40.getName();
    br.com.addvisor.model.Evaluate var54 = new br.com.addvisor.model.Evaluate(var28, var40, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var55 = var28.getPhone();
    var0.setUser(var28);
    var0.setTags("Se");
    br.com.addvisor.model.enums.ServiceCat var59 = var0.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var44.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var51.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);

  }

  public void test379() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test379");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    var24.setMedia((java.lang.Float)1.0f);
    java.lang.String var37 = var24.getTags();
    java.lang.String var38 = var24.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);

  }

  public void test380() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test380");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    java.lang.String var7 = var0.getTags();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    var0.setPhones(var9);
    var0.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.Country var13 = new br.com.addvisor.model.Country();
    java.lang.Integer var14 = var13.getId();
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    br.com.addvisor.model.Agenda var17 = new br.com.addvisor.model.Agenda();
    java.util.List var18 = var17.getNames();
    var15.setNames(var18);
    java.util.List var20 = var15.getNumbers();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    java.util.List var23 = var21.getNumbers();
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    java.util.List var26 = var24.getNumbers();
    var21.setNames(var26);
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    java.util.List var30 = var28.getNumbers();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    java.util.List var33 = var31.getNumbers();
    var28.setNames(var33);
    var21.setNames(var33);
    var15.setNumbers(var33);
    var15.addContact("", "");
    br.com.addvisor.model.Agenda var40 = new br.com.addvisor.model.Agenda();
    java.util.List var41 = var40.getNames();
    br.com.addvisor.model.Agenda var42 = new br.com.addvisor.model.Agenda();
    java.util.List var43 = var42.getNames();
    var40.setNames(var43);
    java.util.List var45 = var40.getNumbers();
    var15.setNames(var45);
    boolean var47 = var13.equals((java.lang.Object)var15);
    br.com.addvisor.model.Agenda var48 = new br.com.addvisor.model.Agenda();
    java.util.List var49 = var48.getNames();
    br.com.addvisor.model.Agenda var50 = new br.com.addvisor.model.Agenda();
    java.util.List var51 = var50.getNames();
    var48.setNames(var51);
    java.util.List var53 = var48.getNumbers();
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    java.util.List var56 = var54.getNumbers();
    br.com.addvisor.model.Agenda var57 = new br.com.addvisor.model.Agenda();
    java.util.List var58 = var57.getNames();
    java.util.List var59 = var57.getNumbers();
    var54.setNames(var59);
    br.com.addvisor.model.Agenda var61 = new br.com.addvisor.model.Agenda();
    java.util.List var62 = var61.getNames();
    java.util.List var63 = var61.getNumbers();
    br.com.addvisor.model.Agenda var64 = new br.com.addvisor.model.Agenda();
    java.util.List var65 = var64.getNames();
    java.util.List var66 = var64.getNumbers();
    var61.setNames(var66);
    var54.setNames(var66);
    var48.setNumbers(var66);
    var15.setNumbers(var66);
    var0.setPhones(var66);
    java.lang.String var72 = var0.getDescription();
    br.com.addvisor.model.Agenda var73 = new br.com.addvisor.model.Agenda();
    java.util.List var74 = var73.getNames();
    java.util.List var75 = var73.getNumbers();
    var73.addContact("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.util.List var79 = var73.getNumbers();
    var0.setPhones(var79);
    br.com.addvisor.model.User var81 = var0.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);

  }

  public void test381() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test381");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    java.lang.String var1 = var0.getName();
    br.com.addvisor.model.State var2 = new br.com.addvisor.model.State();
    var2.setId((java.lang.Long)1L);
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    var5.setId((java.lang.Long)1L);
    var5.setName("null\nnull\nnull");
    var5.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var12 = var5.getUf();
    java.lang.String var13 = var5.getName();
    br.com.addvisor.model.Country var14 = new br.com.addvisor.model.Country();
    java.lang.String var15 = var14.getAcronym();
    boolean var16 = var5.equals((java.lang.Object)var14);
    var2.setCountry(var14);
    var2.setUf("\nnull\nhi!");
    int var20 = var0.compareTo(var2);
    java.lang.Long var21 = var0.getId();
    java.lang.String var22 = var0.toString();
    java.lang.String var23 = var0.getUf();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "null - null"+ "'", var22.equals("null - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test382() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test382");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    var2.setState(var9);
    var9.setName("null\nnull\nnull");
    java.lang.Long var16 = var9.getId();
    java.lang.String var17 = var9.getUf();
    br.com.addvisor.model.Country var18 = var9.getCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test383() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test383");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address();
    java.lang.String var23 = var22.getComplement();
    java.lang.String var24 = var22.toString();
    var22.setId((java.lang.Long)1L);
    java.lang.Long var27 = var22.getId();
    java.lang.String var28 = var22.getLocation();
    var0.setAddress(var22);
    java.lang.String var30 = var22.getLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "null\nnull\nnull"+ "'", var24.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test384() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test384");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setUf("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    var3.setName("null\nnull\nnull");
    var3.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var10 = var3.getUf();
    java.lang.String var11 = var3.getName();
    br.com.addvisor.model.Country var12 = new br.com.addvisor.model.Country();
    java.lang.String var13 = var12.getAcronym();
    boolean var14 = var3.equals((java.lang.Object)var12);
    java.lang.String var15 = var12.getAcronym();
    var12.setAcronym("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var12.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var20 = var12.toString();
    var0.setCountry(var12);
    java.lang.Integer var22 = var12.getId();
    var12.setName("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]"+ "'", var20.equals("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test385() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test385");


    br.com.addvisor.model.Evaluate var2 = new br.com.addvisor.model.Evaluate();
    var2.setId((java.lang.Long)10L);
    var2.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var7 = var2.getService();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var11 = var10.getId();
    var10.setId((java.lang.Long)(-1L));
    var10.setPhone("null\nnull\nnull");
    java.lang.String var16 = var10.getEmail();
    var10.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var2.setUser(var10);
    br.com.addvisor.model.Address var20 = new br.com.addvisor.model.Address();
    java.lang.String var21 = var20.toString();
    br.com.addvisor.model.City var22 = new br.com.addvisor.model.City();
    var22.setName("hi!");
    var22.setName("null\nnull\nnull");
    var20.setCity(var22);
    java.lang.String var28 = var22.getName();
    br.com.addvisor.model.State var29 = var22.getState();
    var10.setCity(var22);
    br.com.addvisor.model.Address var31 = new br.com.addvisor.model.Address("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]", var22);
    br.com.addvisor.model.Address var32 = new br.com.addvisor.model.Address();
    java.lang.String var33 = var32.toString();
    br.com.addvisor.model.City var34 = new br.com.addvisor.model.City();
    var34.setName("hi!");
    var34.setName("null\nnull\nnull");
    var32.setCity(var34);
    java.lang.String var40 = var34.getName();
    br.com.addvisor.model.State var41 = var34.getState();
    int var42 = var22.compareTo(var34);
    java.lang.Long var43 = var22.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "null\nnull\nnull"+ "'", var28.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "null\nnull\nnull"+ "'", var33.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var40 + "' != '" + "null\nnull\nnull"+ "'", var40.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);

  }

  public void test386() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test386");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.Agenda var5 = new br.com.addvisor.model.Agenda();
    java.util.List var6 = var5.getNames();
    br.com.addvisor.model.Agenda var7 = new br.com.addvisor.model.Agenda();
    java.util.List var8 = var7.getNames();
    var5.setNames(var8);
    java.util.List var10 = var5.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    br.com.addvisor.model.Agenda var14 = new br.com.addvisor.model.Agenda();
    java.util.List var15 = var14.getNames();
    java.util.List var16 = var14.getNumbers();
    var11.setNames(var16);
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    java.util.List var23 = var21.getNumbers();
    var18.setNames(var23);
    var11.setNames(var23);
    var5.setNumbers(var23);
    var5.addContact("", "");
    br.com.addvisor.model.Agenda var30 = new br.com.addvisor.model.Agenda();
    java.util.List var31 = var30.getNames();
    br.com.addvisor.model.Agenda var32 = new br.com.addvisor.model.Agenda();
    java.util.List var33 = var32.getNames();
    var30.setNames(var33);
    java.util.List var35 = var30.getNumbers();
    var5.setNames(var35);
    boolean var37 = var0.equals((java.lang.Object)var5);
    var0.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=\nnull\nhi!, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);

  }

  public void test387() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test387");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.valueOf("Service [id=null, name=null, description=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], tags=null, media=1.0, address=null, category=null, phones=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test388() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test388");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.City var54 = new br.com.addvisor.model.City();
    var54.setName("hi!");
    var54.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var59 = new br.com.addvisor.model.Address();
    java.lang.String var60 = var59.getComplement();
    java.lang.String var61 = var59.toString();
    boolean var62 = var54.equals((java.lang.Object)var61);
    br.com.addvisor.model.User var63 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var54);
    br.com.addvisor.model.Address var64 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var54);
    var54.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var67 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var54);
    br.com.addvisor.model.Address var68 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var54);
    java.lang.String var69 = var68.getLocation();
    var24.setAddress(var68);
    br.com.addvisor.model.User var73 = new br.com.addvisor.model.User("", "Country [id=null, name=null, acronym=null]");
    var24.setUser(var73);
    var24.setName("Country [id=100, name=null, acronym=hi!]");
    br.com.addvisor.model.enums.ServiceCat var77 = var24.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "null\nnull\nnull"+ "'", var61.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var69 + "' != '" + "Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var69.equals("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);

  }

  public void test389() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test389");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.Integer var3 = var0.getId();
    var0.setName("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    java.lang.String var6 = var0.getAcronym();
    br.com.addvisor.model.Evaluate var7 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var8 = new br.com.addvisor.model.State();
    boolean var10 = var8.equals((java.lang.Object)(byte)100);
    var8.setUf("null\nnull\nnull");
    boolean var13 = var7.equals((java.lang.Object)var8);
    var7.setNote((java.lang.Float)10.0f);
    boolean var17 = var7.equals((java.lang.Object)"");
    var7.setComment("Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    boolean var20 = var0.equals((java.lang.Object)var7);
    var0.setId((java.lang.Integer)(-35));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);

  }

  public void test390() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test390");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    java.lang.Long var17 = var6.getId();
    java.lang.Long var18 = var6.getId();
    br.com.addvisor.model.State var19 = var6.getState();
    java.lang.String var20 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "null\nnull\nnull"+ "'", var20.equals("null\nnull\nnull"));

  }

  public void test391() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test391");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.toString();
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var4.setCity(var6);
    var6.setId((java.lang.Long)10L);
    java.lang.String var12 = var6.getName();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]", " - ", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]", var6);
    var13.setEmail(" - ");
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.toString();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    java.util.List var23 = var21.getNumbers();
    var18.setNames(var23);
    java.util.List var25 = var18.getNames();
    boolean var26 = var13.equals((java.lang.Object)var18);
    var18.addContact("Service [id=null, name=null\nnull\nnull - null, description=null, tags=null, media=100.0, address=null, category=null, phones=null]", "Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]\nUser [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull\nhi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null\nnull\nnull"+ "'", var5.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"+ "'", var16.equals("User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"+ "'", var17.equals("User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);

  }

  public void test392() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test392");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.valueOf("Service [id=1, name=null, description=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test393() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test393");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    var0.setId((java.lang.Long)1L);
    var0.setDescription("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var13 = var0.getDescription();
    var0.setTags("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.User var16 = var0.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var13.equals("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test394() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test394");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var3 = var0.getService();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var9 = var4.getService();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    java.lang.String var15 = var10.getPhone();
    var4.setUser(var10);
    br.com.addvisor.model.Service var17 = new br.com.addvisor.model.Service();
    java.lang.String var18 = var17.toString();
    var17.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var21 = var17.getAddress();
    var17.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getName();
    br.com.addvisor.model.Evaluate var27 = new br.com.addvisor.model.Evaluate(var10, var17, (java.lang.Float)1.0f, "");
    var0.setService(var17);
    java.lang.Float var29 = var17.getMedia();
    java.util.List var30 = var17.getPhones();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var18.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test395() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test395");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.Float var29 = var0.getNote();
    br.com.addvisor.model.Service var30 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    var30.setUser(var31);
    br.com.addvisor.model.Address var37 = var30.getAddress();
    var0.setService(var30);
    java.lang.String[] var39 = br.com.addvisor.model.enums.PriceCat.getValuesToString();
    boolean var40 = var30.equals((java.lang.Object)var39);
    java.lang.String var41 = var30.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);

  }

  public void test396() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test396");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.Country var9 = new br.com.addvisor.model.Country();
    java.lang.String var10 = var9.getAcronym();
    boolean var11 = var0.equals((java.lang.Object)var9);
    java.lang.String var12 = var9.getAcronym();
    java.lang.String var13 = var9.getAcronym();
    java.lang.String var14 = var9.getAcronym();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test397() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test397");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.toString();
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var4.setCity(var6);
    br.com.addvisor.model.City var10 = new br.com.addvisor.model.City();
    var10.setName("hi!");
    int var13 = var6.compareTo(var10);
    br.com.addvisor.model.City var14 = new br.com.addvisor.model.City();
    var14.setName("hi!");
    var14.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.getComplement();
    java.lang.String var21 = var19.toString();
    boolean var22 = var14.equals((java.lang.Object)var21);
    br.com.addvisor.model.User var23 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var24 = new br.com.addvisor.model.State();
    var24.setId((java.lang.Long)1L);
    var24.setName("null\nnull\nnull");
    var24.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var31 = var24.getUf();
    boolean var32 = var23.equals((java.lang.Object)var24);
    var14.setState(var24);
    var24.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var6.setState(var24);
    br.com.addvisor.model.User var37 = new br.com.addvisor.model.User("Country [id=100, name=null, acronym=hi!]", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull", "hi! - User [id=null, name=null, email=null, password=null, phone=null, city=null] - null", "Evaluate [id=1, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=null, note=-1.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var6);
    java.lang.String var38 = var6.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null\nnull\nnull"+ "'", var5.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "hi!"+ "'", var38.equals("hi!"));

  }

  public void test398() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test398");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    var16.setId((java.lang.Long)1L);
    java.lang.Long var27 = var16.getId();
    var0.setService(var16);
    java.lang.Float var29 = var0.getNote();
    br.com.addvisor.model.Service var30 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    var30.setUser(var31);
    br.com.addvisor.model.Address var37 = var30.getAddress();
    var0.setService(var30);
    br.com.addvisor.model.enums.ServiceCat var39 = var30.getCategory();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 1L+ "'", var27.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test399() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test399");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    var14.setCountry(var21);
    int var23 = var0.compareTo(var14);
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    boolean var30 = var28.equals((java.lang.Object)(byte)100);
    var28.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    int var34 = var28.compareTo(var33);
    var33.setName("");
    var26.setState(var33);
    var33.setName("null\nnull\nnull");
    int var40 = var14.compareTo(var33);
    java.lang.String var41 = var33.getUf();
    java.lang.Long var42 = var33.getId();
    java.lang.String var43 = var33.toString();
    java.lang.String var44 = var33.getUf();
    br.com.addvisor.model.City var45 = new br.com.addvisor.model.City();
    var45.setName("hi!");
    var45.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var50 = new br.com.addvisor.model.Address();
    java.lang.String var51 = var50.getComplement();
    java.lang.String var52 = var50.toString();
    boolean var53 = var45.equals((java.lang.Object)var52);
    br.com.addvisor.model.State var54 = new br.com.addvisor.model.State();
    var54.setId((java.lang.Long)1L);
    var54.setName("null\nnull\nnull");
    var54.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var61 = var54.getUf();
    var45.setState(var54);
    br.com.addvisor.model.State var63 = var45.getState();
    java.lang.String var64 = var63.getName();
    java.lang.String var65 = var63.getName();
    int var66 = var33.compareTo(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "null\nnull\nnull - null"+ "'", var43.equals("null\nnull\nnull - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "null\nnull\nnull"+ "'", var52.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var64.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var65.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == 0);

  }

  public void test400() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test400");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)(-1L));
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.City var20 = new br.com.addvisor.model.City();
    var20.setName("hi!");
    var20.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var25 = new br.com.addvisor.model.Address();
    java.lang.String var26 = var25.getComplement();
    java.lang.String var27 = var25.toString();
    boolean var28 = var20.equals((java.lang.Object)var27);
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var20);
    br.com.addvisor.model.City var32 = new br.com.addvisor.model.City();
    var32.setName("hi!");
    var32.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    boolean var40 = var32.equals((java.lang.Object)var39);
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var42 = new br.com.addvisor.model.State();
    var42.setId((java.lang.Long)1L);
    var42.setName("null\nnull\nnull");
    var42.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var49 = var42.getUf();
    boolean var50 = var41.equals((java.lang.Object)var42);
    var32.setState(var42);
    br.com.addvisor.model.Address var52 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var32);
    int var53 = var20.compareTo(var32);
    var0.setCity(var20);
    br.com.addvisor.model.State var55 = new br.com.addvisor.model.State();
    boolean var57 = var55.equals((java.lang.Object)(byte)100);
    var55.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var60 = new br.com.addvisor.model.State();
    int var61 = var55.compareTo(var60);
    java.lang.String var62 = var60.getName();
    var60.setId((java.lang.Long)10L);
    var60.setUf("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Country var67 = new br.com.addvisor.model.Country();
    java.lang.Integer var68 = var67.getId();
    java.lang.String var69 = var67.getName();
    var67.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var72 = var67.getAcronym();
    var67.setAcronym("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var60.setCountry(var67);
    boolean var76 = var0.equals((java.lang.Object)var67);
    java.lang.String var77 = var0.getPhone();
    var0.setId((java.lang.Long)0L);
    java.lang.String var80 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var72 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var72.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var80 + "' != '" + "User [id=0, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]"+ "'", var80.equals("User [id=0, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]"));

  }

  public void test401() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test401");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    java.lang.String var8 = var0.getName();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var0.compareTo(var9);
    var9.setName("Evaluate [id=0, user=null, service=null, note=100.0, comment=null]");
    br.com.addvisor.model.Country var13 = var9.getCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test402() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test402");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    var15.setId((java.lang.Long)1L);
    var15.setName("null\nnull\nnull");
    var15.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var22 = var15.getUf();
    var6.setState(var15);
    int var24 = var2.compareTo(var6);
    java.lang.Long var25 = var2.getId();
    br.com.addvisor.model.City var30 = new br.com.addvisor.model.City();
    var30.setName("hi!");
    var30.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var35 = new br.com.addvisor.model.Address();
    java.lang.String var36 = var35.getComplement();
    java.lang.String var37 = var35.toString();
    boolean var38 = var30.equals((java.lang.Object)var37);
    br.com.addvisor.model.City var41 = new br.com.addvisor.model.City();
    var41.setName("hi!");
    var41.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var46 = new br.com.addvisor.model.Address();
    java.lang.String var47 = var46.getComplement();
    java.lang.String var48 = var46.toString();
    boolean var49 = var41.equals((java.lang.Object)var48);
    br.com.addvisor.model.User var50 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var51 = new br.com.addvisor.model.State();
    var51.setId((java.lang.Long)1L);
    var51.setName("null\nnull\nnull");
    var51.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.getUf();
    boolean var59 = var50.equals((java.lang.Object)var51);
    var41.setState(var51);
    br.com.addvisor.model.Address var61 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var41);
    br.com.addvisor.model.City var62 = var61.getCity();
    java.lang.String var63 = var62.getName();
    br.com.addvisor.model.State var64 = var62.getState();
    var30.setState(var64);
    br.com.addvisor.model.User var66 = new br.com.addvisor.model.User("Country [id=null, name=null, acronym=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]]", "User [id=null, name=null, email=null, password=6f30ecc3178699bdb54df7daf6f7f49e, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]", "Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]", "User [id=null, name=null, email=null, password=null, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]", var30);
    int var67 = var2.compareTo(var30);
    java.lang.String var68 = var30.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "null\nnull\nnull"+ "'", var37.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var63 + "' != '" + "null\nnull\nnull"+ "'", var63.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "null\nnull\nnull"+ "'", var68.equals("null\nnull\nnull"));

  }

  public void test403() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test403");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    java.lang.String var3 = var0.getComplement();
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var8);
    var0.setCity(var8);
    var0.setComplement("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.City var21 = var0.getCity();
    br.com.addvisor.model.City var24 = new br.com.addvisor.model.City();
    var24.setName("hi!");
    var24.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var29 = new br.com.addvisor.model.Address();
    java.lang.String var30 = var29.getComplement();
    java.lang.String var31 = var29.toString();
    boolean var32 = var24.equals((java.lang.Object)var31);
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    boolean var42 = var33.equals((java.lang.Object)var34);
    var24.setState(var34);
    br.com.addvisor.model.Address var44 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var24);
    br.com.addvisor.model.City var45 = var44.getCity();
    java.lang.String var46 = var45.getName();
    boolean var47 = var0.equals((java.lang.Object)var46);
    br.com.addvisor.model.City var52 = new br.com.addvisor.model.City();
    var52.setName("hi!");
    var52.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var57 = new br.com.addvisor.model.Address();
    java.lang.String var58 = var57.getComplement();
    java.lang.String var59 = var57.toString();
    boolean var60 = var52.equals((java.lang.Object)var59);
    br.com.addvisor.model.User var61 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var52);
    var0.setCity(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null\nnull\nnull"+ "'", var31.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "null\nnull\nnull"+ "'", var46.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "null\nnull\nnull"+ "'", var59.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);

  }

  public void test404() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test404");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    java.lang.String var41 = var0.getName();
    var0.setPassword("User [id=100, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);

  }

  public void test405() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test405");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    boolean var23 = var17.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    var17.setService(var24);
    br.com.addvisor.model.enums.ServiceCat var33 = var24.getCategory();
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    var34.setId((java.lang.Long)0L);
    var24.setAddress(var34);
    var0.setService(var24);
    var0.setNote((java.lang.Float)0.0f);
    java.lang.String var41 = var0.toString();
    br.com.addvisor.model.Service var42 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var43 = new br.com.addvisor.model.User();
    boolean var45 = var43.equals((java.lang.Object)(-1L));
    java.lang.String var46 = var43.toString();
    java.lang.String var47 = var43.getPassword();
    var42.setUser(var43);
    br.com.addvisor.model.Address var49 = var42.getAddress();
    br.com.addvisor.model.Address var50 = new br.com.addvisor.model.Address();
    java.lang.String var51 = var50.getComplement();
    java.lang.String var52 = var50.toString();
    br.com.addvisor.model.City var53 = var50.getCity();
    br.com.addvisor.model.State var54 = new br.com.addvisor.model.State();
    var54.setId((java.lang.Long)1L);
    var54.setName("null\nnull\nnull");
    var54.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var61 = var54.getUf();
    boolean var62 = var50.equals((java.lang.Object)var54);
    var42.setAddress(var50);
    br.com.addvisor.model.User var64 = var42.getUser();
    var0.setService(var42);
    var0.setComment("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=Country [id=null, name=null, acronym=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]"+ "'", var41.equals("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var46.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "null\nnull\nnull"+ "'", var52.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);

  }

  public void test406() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test406");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    var2.setNames(var5);
    java.util.List var7 = var2.getNumbers();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    var2.setNumbers(var20);
    var2.addContact("", "");
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    var2.setNames(var32);
    boolean var34 = var0.equals((java.lang.Object)var2);
    var0.setName("null\nnull\nnull");
    var0.setAcronym("Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]]");
    java.lang.String var39 = var0.getName();
    var0.setAcronym("User [id=100, name=null, email=User [id=10, name=null, email=null, password=bab90b8667e900a415ffe18829d9e6f9, phone= - , city=null], password=469817e2fa792793ebc0bb601818134b, phone=null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));

  }

  public void test407() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test407");


    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var4.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var9 = new br.com.addvisor.model.Address();
    java.lang.String var10 = var9.getComplement();
    java.lang.String var11 = var9.toString();
    boolean var12 = var4.equals((java.lang.Object)var11);
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var4);
    br.com.addvisor.model.City var16 = new br.com.addvisor.model.City();
    var16.setName("hi!");
    var16.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var21 = new br.com.addvisor.model.Address();
    java.lang.String var22 = var21.getComplement();
    java.lang.String var23 = var21.toString();
    boolean var24 = var16.equals((java.lang.Object)var23);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    var26.setId((java.lang.Long)1L);
    var26.setName("null\nnull\nnull");
    var26.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var33 = var26.getUf();
    boolean var34 = var25.equals((java.lang.Object)var26);
    var16.setState(var26);
    br.com.addvisor.model.Address var36 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var16);
    int var37 = var4.compareTo(var16);
    java.lang.Long var38 = var16.getId();
    var16.setName("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.City var41 = new br.com.addvisor.model.City();
    var41.setName("null\nnull\nnull");
    int var44 = var16.compareTo(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "null\nnull\nnull"+ "'", var23.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-27));

  }

  public void test408() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test408");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Country var10 = var1.getCountry();
    java.lang.String var11 = var1.toString();
    var1.setName("User [id=null, name=null, email=null, password=6f30ecc3178699bdb54df7daf6f7f49e, phone=User [id=null, name=null, email=null, password=null, phone=null, city=null], city=null\nnull\nnull]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null"));

  }

  public void test409() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test409");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("", "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var3 = var2.getPhone();
    var2.setPhone("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));

  }

  public void test410() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test410");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    br.com.addvisor.model.Evaluate var1 = new br.com.addvisor.model.Evaluate();
    var1.setId((java.lang.Long)10L);
    var1.setId((java.lang.Long)0L);
    var1.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    br.com.addvisor.model.Agenda var10 = new br.com.addvisor.model.Agenda();
    java.util.List var11 = var10.getNames();
    var8.setNames(var11);
    java.util.List var13 = var8.getNumbers();
    boolean var14 = var1.equals((java.lang.Object)var8);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    br.com.addvisor.model.Agenda var17 = new br.com.addvisor.model.Agenda();
    java.util.List var18 = var17.getNames();
    var15.setNames(var18);
    java.util.List var20 = var15.getNumbers();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    java.util.List var23 = var21.getNumbers();
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    java.util.List var26 = var24.getNumbers();
    var21.setNames(var26);
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    java.util.List var30 = var28.getNumbers();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    java.util.List var33 = var31.getNumbers();
    var28.setNames(var33);
    var21.setNames(var33);
    var15.setNumbers(var33);
    var15.addContact("", "");
    br.com.addvisor.model.Agenda var40 = new br.com.addvisor.model.Agenda();
    java.util.List var41 = var40.getNames();
    br.com.addvisor.model.Agenda var42 = new br.com.addvisor.model.Agenda();
    java.util.List var43 = var42.getNames();
    var40.setNames(var43);
    java.util.List var45 = var40.getNumbers();
    var15.setNames(var45);
    br.com.addvisor.model.Agenda var47 = new br.com.addvisor.model.Agenda();
    java.util.List var48 = var47.getNames();
    br.com.addvisor.model.Agenda var49 = new br.com.addvisor.model.Agenda();
    java.util.List var50 = var49.getNames();
    var47.setNames(var50);
    var15.setNames(var50);
    var8.setNumbers(var50);
    var0.setNames(var50);
    java.util.Map var55 = var0.getContacts();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test411() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test411");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "");
    br.com.addvisor.model.Service var3 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    java.lang.String var7 = var4.toString();
    java.lang.String var8 = var4.getPassword();
    var3.setUser(var4);
    br.com.addvisor.model.Address var10 = var3.getAddress();
    br.com.addvisor.model.enums.ServiceCat var11 = var3.getCategory();
    br.com.addvisor.model.Agenda var12 = new br.com.addvisor.model.Agenda();
    java.util.List var13 = var12.getNames();
    br.com.addvisor.model.Agenda var14 = new br.com.addvisor.model.Agenda();
    java.util.List var15 = var14.getNames();
    var12.setNames(var15);
    java.util.List var17 = var12.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    br.com.addvisor.model.Agenda var21 = new br.com.addvisor.model.Agenda();
    java.util.List var22 = var21.getNames();
    java.util.List var23 = var21.getNumbers();
    var18.setNames(var23);
    br.com.addvisor.model.Agenda var25 = new br.com.addvisor.model.Agenda();
    java.util.List var26 = var25.getNames();
    java.util.List var27 = var25.getNumbers();
    br.com.addvisor.model.Agenda var28 = new br.com.addvisor.model.Agenda();
    java.util.List var29 = var28.getNames();
    java.util.List var30 = var28.getNumbers();
    var25.setNames(var30);
    var18.setNames(var30);
    var12.setNumbers(var30);
    var3.setPhones(var30);
    br.com.addvisor.model.Evaluate var37 = new br.com.addvisor.model.Evaluate(var2, var3, (java.lang.Float)10.0f, "User [id=null, name=null, email=null, password=75ede0e9e4c762359b0d3d78967635e0, phone=null - null\nnull\nnull, city=null]");
    java.lang.String var38 = var2.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);

  }

  public void test412() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test412");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    java.lang.Long var3 = var0.getId();
    var0.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test413() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test413");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    java.lang.String var3 = var2.getEmail();
    java.lang.String var4 = var2.getEmail();
    java.lang.String var5 = var2.getPassword();
    var2.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "6a526e9ea8abcc547d30e98aac13c6cc"+ "'", var5.equals("6a526e9ea8abcc547d30e98aac13c6cc"));

  }

  public void test414() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test414");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("null\nnull\nnull", "\nnull\nhi!");
    br.com.addvisor.model.Evaluate var3 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    boolean var9 = var3.equals((java.lang.Object)var4);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getDescription();
    boolean var19 = var3.equals((java.lang.Object)var10);
    br.com.addvisor.model.Evaluate var20 = new br.com.addvisor.model.Evaluate();
    var20.setId((java.lang.Long)10L);
    var20.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var25 = var20.getUser();
    java.lang.Long var26 = var20.getId();
    br.com.addvisor.model.Service var27 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var28 = new br.com.addvisor.model.User();
    boolean var30 = var28.equals((java.lang.Object)(-1L));
    java.lang.String var31 = var28.toString();
    java.lang.String var32 = var28.getPassword();
    var27.setUser(var28);
    br.com.addvisor.model.Address var34 = var27.getAddress();
    java.lang.String var35 = var27.getDescription();
    var20.setService(var27);
    boolean var37 = var10.equals((java.lang.Object)var27);
    var27.setMedia((java.lang.Float)1.0f);
    br.com.addvisor.model.Evaluate var42 = new br.com.addvisor.model.Evaluate(var2, var27, (java.lang.Float)100.0f, "hi!");
    var42.setId((java.lang.Long)1L);
    java.lang.Float var45 = var42.getNote();
    br.com.addvisor.model.Service var46 = var42.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + 0L+ "'", var26.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var31.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + 100.0f+ "'", var45.equals(100.0f));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test415() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test415");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Long var50 = var16.getId();
    var16.setId((java.lang.Long)10L);
    java.lang.Float var53 = var16.getMedia();
    java.lang.String var54 = var16.getTags();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);

  }

  public void test416() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test416");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Float var10 = var0.getNote();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    br.com.addvisor.model.Evaluate var15 = new br.com.addvisor.model.Evaluate();
    var15.setId((java.lang.Long)10L);
    var15.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var20 = var15.getUser();
    boolean var21 = var11.equals((java.lang.Object)var15);
    java.lang.String var22 = var11.getPassword();
    var0.setUser(var11);
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    var24.setId((java.lang.Long)10L);
    var24.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var29 = var24.getUser();
    java.lang.Long var30 = var24.getId();
    br.com.addvisor.model.Service var31 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User();
    boolean var34 = var32.equals((java.lang.Object)(-1L));
    java.lang.String var35 = var32.toString();
    java.lang.String var36 = var32.getPassword();
    var31.setUser(var32);
    br.com.addvisor.model.Address var38 = var31.getAddress();
    java.lang.String var39 = var31.getDescription();
    var24.setService(var31);
    var31.setId((java.lang.Long)1L);
    var0.setService(var31);
    java.lang.Long var44 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + 0L+ "'", var30.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var35.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + 0L+ "'", var44.equals(0L));

  }

  public void test417() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test417");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    br.com.addvisor.model.Address var8 = new br.com.addvisor.model.Address();
    java.lang.String var9 = var8.getComplement();
    java.lang.String var10 = var8.toString();
    br.com.addvisor.model.City var11 = var8.getCity();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    var12.setId((java.lang.Long)1L);
    var12.setName("null\nnull\nnull");
    var12.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var19 = var12.getUf();
    boolean var20 = var8.equals((java.lang.Object)var12);
    var0.setAddress(var8);
    var0.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var24 = var0.getDescription();
    java.lang.String var25 = var0.toString();
    br.com.addvisor.model.enums.ServiceCat var26 = var0.getCategory();
    br.com.addvisor.model.Address var27 = var0.getAddress();
    br.com.addvisor.model.enums.ServiceCat var28 = var0.getCategory();
    java.lang.Float var29 = var0.getMedia();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "null\nnull\nnull"+ "'", var10.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var25 + "' != '" + "Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var25.equals("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

  public void test418() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test418");


    br.com.addvisor.model.City var12 = new br.com.addvisor.model.City();
    var12.setName("hi!");
    var12.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    java.lang.String var18 = var17.getComplement();
    java.lang.String var19 = var17.toString();
    boolean var20 = var12.equals((java.lang.Object)var19);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var12);
    br.com.addvisor.model.Address var22 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var12);
    var12.setId((java.lang.Long)100L);
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]", "hi!", var12);
    br.com.addvisor.model.Address var26 = new br.com.addvisor.model.Address("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", var12);
    var12.setId((java.lang.Long)0L);
    br.com.addvisor.model.Evaluate var29 = new br.com.addvisor.model.Evaluate();
    var29.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var32 = var29.getService();
    br.com.addvisor.model.Service var33 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    boolean var36 = var34.equals((java.lang.Object)(-1L));
    java.lang.String var37 = var34.toString();
    java.lang.String var38 = var34.getPassword();
    var33.setUser(var34);
    br.com.addvisor.model.Address var40 = var33.getAddress();
    br.com.addvisor.model.Address var41 = new br.com.addvisor.model.Address();
    java.lang.String var42 = var41.getComplement();
    java.lang.String var43 = var41.toString();
    br.com.addvisor.model.City var44 = var41.getCity();
    br.com.addvisor.model.State var45 = new br.com.addvisor.model.State();
    var45.setId((java.lang.Long)1L);
    var45.setName("null\nnull\nnull");
    var45.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var52 = var45.getUf();
    boolean var53 = var41.equals((java.lang.Object)var45);
    var33.setAddress(var41);
    br.com.addvisor.model.User var55 = new br.com.addvisor.model.User();
    boolean var57 = var55.equals((java.lang.Object)(-1L));
    java.lang.String var58 = var55.toString();
    var55.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var33.setUser(var55);
    var29.setUser(var55);
    boolean var63 = var12.equals((java.lang.Object)var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "null\nnull\nnull"+ "'", var43.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);

  }

  public void test419() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test419");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Long var50 = var16.getId();
    br.com.addvisor.model.User var51 = new br.com.addvisor.model.User();
    boolean var53 = var51.equals((java.lang.Object)(-1L));
    boolean var55 = var51.equals((java.lang.Object)100.0d);
    var51.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var58 = var51.toString();
    var16.setUser(var51);
    br.com.addvisor.model.Service var60 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var61 = new br.com.addvisor.model.User();
    boolean var63 = var61.equals((java.lang.Object)(-1L));
    java.lang.String var64 = var61.toString();
    java.lang.String var65 = var61.getPassword();
    var60.setUser(var61);
    br.com.addvisor.model.Address var67 = var60.getAddress();
    br.com.addvisor.model.Evaluate var70 = new br.com.addvisor.model.Evaluate(var51, var60, (java.lang.Float)1.0f, "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    br.com.addvisor.model.Agenda var71 = new br.com.addvisor.model.Agenda();
    br.com.addvisor.model.Service var72 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var73 = new br.com.addvisor.model.User();
    boolean var75 = var73.equals((java.lang.Object)(-1L));
    java.lang.String var76 = var73.toString();
    java.lang.String var77 = var73.getPassword();
    var72.setUser(var73);
    br.com.addvisor.model.Address var79 = var72.getAddress();
    java.lang.String var80 = var72.getTags();
    br.com.addvisor.model.Agenda var81 = new br.com.addvisor.model.Agenda();
    java.util.List var82 = var81.getNames();
    java.util.List var83 = var81.getNumbers();
    var72.setPhones(var83);
    var71.setNames(var83);
    boolean var86 = var60.equals((java.lang.Object)var83);
    java.lang.String var87 = var60.getTags();
    java.lang.String var88 = var60.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var58 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var58.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var64 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var64.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var76 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var76.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var88);

  }

  public void test420() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test420");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    java.lang.String var4 = var0.getDDD();
    br.com.addvisor.model.Service var5 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    var5.setUser(var6);
    br.com.addvisor.model.Address var12 = var5.getAddress();
    java.lang.String var13 = var5.getName();
    br.com.addvisor.model.City var14 = new br.com.addvisor.model.City();
    var14.setName("hi!");
    var14.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var19 = new br.com.addvisor.model.Address();
    java.lang.String var20 = var19.getComplement();
    java.lang.String var21 = var19.toString();
    boolean var22 = var14.equals((java.lang.Object)var21);
    br.com.addvisor.model.State var23 = new br.com.addvisor.model.State();
    var23.setId((java.lang.Long)1L);
    var23.setName("null\nnull\nnull");
    var23.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var30 = var23.getUf();
    var14.setState(var23);
    boolean var32 = var5.equals((java.lang.Object)var14);
    br.com.addvisor.model.Service var33 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var34 = new br.com.addvisor.model.User();
    boolean var36 = var34.equals((java.lang.Object)(-1L));
    java.lang.String var37 = var34.toString();
    java.lang.String var38 = var34.getPassword();
    var33.setUser(var34);
    br.com.addvisor.model.Address var40 = var33.getAddress();
    java.lang.String var41 = var33.getName();
    java.lang.String var42 = var33.getDescription();
    br.com.addvisor.model.Address var43 = new br.com.addvisor.model.Address();
    java.lang.String var44 = var43.toString();
    br.com.addvisor.model.City var45 = new br.com.addvisor.model.City();
    var45.setName("hi!");
    var43.setCity(var45);
    var43.setLocation("");
    java.lang.String var51 = var43.getLocation();
    var33.setAddress(var43);
    boolean var53 = var14.equals((java.lang.Object)var43);
    var0.setCity(var14);
    br.com.addvisor.model.Service var55 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var56 = new br.com.addvisor.model.User();
    boolean var58 = var56.equals((java.lang.Object)(-1L));
    java.lang.String var59 = var56.toString();
    java.lang.String var60 = var56.getPassword();
    var55.setUser(var56);
    br.com.addvisor.model.Address var62 = var55.getAddress();
    br.com.addvisor.model.Address var63 = new br.com.addvisor.model.Address();
    java.lang.String var64 = var63.getComplement();
    java.lang.String var65 = var63.toString();
    br.com.addvisor.model.City var66 = var63.getCity();
    br.com.addvisor.model.State var67 = new br.com.addvisor.model.State();
    var67.setId((java.lang.Long)1L);
    var67.setName("null\nnull\nnull");
    var67.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var74 = var67.getUf();
    boolean var75 = var63.equals((java.lang.Object)var67);
    var55.setAddress(var63);
    var55.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    br.com.addvisor.model.Evaluate var81 = new br.com.addvisor.model.Evaluate(var0, var55, (java.lang.Float)100.0f, "Evaluate [id=0, user=null, service=null, note=null, comment=null]\n\nnull");
    java.lang.String var82 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var37.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null\nnull\nnull"+ "'", var44.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + ""+ "'", var51.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var59 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var59.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "null\nnull\nnull"+ "'", var65.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]"+ "'", var82.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null\nnull\nnull]"));

  }

  public void test421() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test421");


    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    boolean var7 = var5.equals((java.lang.Object)(byte)100);
    var5.setUf("null\nnull\nnull");
    boolean var10 = var4.equals((java.lang.Object)var5);
    br.com.addvisor.model.Service var11 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var12 = new br.com.addvisor.model.User();
    boolean var14 = var12.equals((java.lang.Object)(-1L));
    java.lang.String var15 = var12.toString();
    java.lang.String var16 = var12.getPassword();
    var11.setUser(var12);
    br.com.addvisor.model.Address var18 = var11.getAddress();
    java.lang.String var19 = var11.getDescription();
    boolean var20 = var4.equals((java.lang.Object)var11);
    br.com.addvisor.model.Evaluate var21 = new br.com.addvisor.model.Evaluate();
    var21.setId((java.lang.Long)10L);
    var21.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var26 = var21.getUser();
    java.lang.Long var27 = var21.getId();
    br.com.addvisor.model.Service var28 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User();
    boolean var31 = var29.equals((java.lang.Object)(-1L));
    java.lang.String var32 = var29.toString();
    java.lang.String var33 = var29.getPassword();
    var28.setUser(var29);
    br.com.addvisor.model.Address var35 = var28.getAddress();
    java.lang.String var36 = var28.getDescription();
    var21.setService(var28);
    boolean var38 = var11.equals((java.lang.Object)var28);
    br.com.addvisor.model.User var39 = new br.com.addvisor.model.User();
    boolean var41 = var39.equals((java.lang.Object)(-1L));
    java.lang.String var42 = var39.toString();
    java.lang.String var43 = var39.getPassword();
    java.lang.String var44 = var39.getName();
    boolean var45 = var11.equals((java.lang.Object)var39);
    java.lang.String var46 = var39.toString();
    br.com.addvisor.model.City var47 = new br.com.addvisor.model.City();
    var47.setName("hi!");
    var47.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var52 = new br.com.addvisor.model.Address();
    java.lang.String var53 = var52.getComplement();
    java.lang.String var54 = var52.toString();
    boolean var55 = var47.equals((java.lang.Object)var54);
    br.com.addvisor.model.State var56 = new br.com.addvisor.model.State();
    var56.setId((java.lang.Long)1L);
    var56.setName("null\nnull\nnull");
    var56.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var63 = var56.getUf();
    var47.setState(var56);
    var39.setCity(var47);
    br.com.addvisor.model.State var66 = var47.getState();
    br.com.addvisor.model.User var67 = new br.com.addvisor.model.User("Country [id=null, name=User [id=null, name=null, email=null, password=null, phone=null, city=null], acronym=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]", "null - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "null - null\nnull\nnull", var47);
    java.lang.String var68 = var47.toString();
    java.lang.Long var69 = var47.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var15.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + 0L+ "'", var27.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var32.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var42.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var46.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "null\nnull\nnull"+ "'", var54.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var68 + "' != '" + "null\nnull\nnull"+ "'", var68.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);

  }

  public void test422() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test422");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.Integer var3 = var0.getId();
    var0.setName("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    var0.setId((java.lang.Integer)10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test423() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test423");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var4.getComment();
    var4.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    var15.setId((java.lang.Long)1L);
    var15.setName("null\nnull\nnull");
    var15.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var22 = var15.getUf();
    boolean var23 = var14.equals((java.lang.Object)var15);
    var4.setUser(var14);
    br.com.addvisor.model.User var25 = var4.getUser();
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.toString();
    java.lang.String var30 = var26.getPassword();
    java.lang.String var31 = var26.getPhone();
    br.com.addvisor.model.City var32 = var26.getCity();
    br.com.addvisor.model.City var33 = var26.getCity();
    var4.setUser(var26);
    br.com.addvisor.model.Service var35 = var4.getService();
    br.com.addvisor.model.User var36 = var4.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var29.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test424() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test424");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.getComplement();
    java.lang.String var2 = var0.toString();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.toString();
    br.com.addvisor.model.City var7 = new br.com.addvisor.model.City();
    var7.setName("hi!");
    var5.setCity(var7);
    var0.setCity(var7);
    java.lang.String var12 = var0.getLocation();
    br.com.addvisor.model.Evaluate var13 = new br.com.addvisor.model.Evaluate();
    var13.setId((java.lang.Long)10L);
    var13.setId((java.lang.Long)0L);
    java.lang.Float var18 = var13.getNote();
    br.com.addvisor.model.Service var19 = new br.com.addvisor.model.Service();
    java.lang.String var20 = var19.toString();
    var13.setService(var19);
    var13.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var25 = new br.com.addvisor.model.State();
    boolean var27 = var25.equals((java.lang.Object)(byte)100);
    var25.setUf("null\nnull\nnull");
    boolean var30 = var24.equals((java.lang.Object)var25);
    br.com.addvisor.model.Service var31 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User();
    boolean var34 = var32.equals((java.lang.Object)(-1L));
    java.lang.String var35 = var32.toString();
    java.lang.String var36 = var32.getPassword();
    var31.setUser(var32);
    br.com.addvisor.model.Address var38 = var31.getAddress();
    var24.setService(var31);
    br.com.addvisor.model.enums.ServiceCat var40 = var31.getCategory();
    br.com.addvisor.model.Address var41 = new br.com.addvisor.model.Address();
    var41.setId((java.lang.Long)0L);
    var31.setAddress(var41);
    boolean var45 = var13.equals((java.lang.Object)var31);
    java.lang.String var46 = var31.getName();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var48 = new br.com.addvisor.model.State();
    var48.setId((java.lang.Long)1L);
    var48.setName("null\nnull\nnull");
    var48.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var55 = var48.getUf();
    boolean var56 = var47.equals((java.lang.Object)var48);
    var47.setId((java.lang.Long)0L);
    var47.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var61 = var31.equals((java.lang.Object)"Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.User var62 = var31.getUser();
    boolean var63 = var0.equals((java.lang.Object)var62);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.State var66 = new br.com.addvisor.model.State();
    boolean var68 = var66.equals((java.lang.Object)(byte)100);
    java.lang.Long var69 = var66.getId();
    br.com.addvisor.model.State var70 = new br.com.addvisor.model.State();
    boolean var72 = var70.equals((java.lang.Object)(byte)100);
    var70.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var75 = new br.com.addvisor.model.State();
    int var76 = var70.compareTo(var75);
    var75.setName("");
    br.com.addvisor.model.Country var79 = new br.com.addvisor.model.Country();
    java.lang.Integer var80 = var79.getId();
    var75.setCountry(var79);
    br.com.addvisor.model.Country var82 = new br.com.addvisor.model.Country();
    java.lang.Integer var83 = var82.getId();
    java.lang.String var84 = var82.getName();
    var75.setCountry(var82);
    int var86 = var66.compareTo(var75);
    java.lang.String var87 = var75.getUf();
    boolean var88 = var0.equals((java.lang.Object)var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "null\nnull\nnull"+ "'", var2.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "null\nnull\nnull"+ "'", var6.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var20.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var35.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var86 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == false);

  }

  public void test425() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test425");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    java.lang.String var9 = var0.getDescription();
    var0.setMedia((java.lang.Float)1.0f);
    java.util.List var12 = var0.getPhones();
    var0.setDescription("User [id=null, name=Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], email=null, password=d41d8cd98f00b204e9800998ecf8427e, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test426() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test426");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var12 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User();
    boolean var15 = var13.equals((java.lang.Object)(-1L));
    java.lang.String var16 = var13.toString();
    java.lang.String var17 = var13.getPassword();
    var12.setUser(var13);
    br.com.addvisor.model.Address var19 = var12.getAddress();
    java.lang.String var20 = var12.getName();
    var12.setName("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var23 = var12.getName();
    br.com.addvisor.model.Evaluate var26 = new br.com.addvisor.model.Evaluate(var0, var12, (java.lang.Float)(-1.0f), "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var12.setDescription("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Evaluate var29 = new br.com.addvisor.model.Evaluate();
    var29.setId((java.lang.Long)10L);
    var29.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var34 = var29.getService();
    br.com.addvisor.model.User var37 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var38 = var37.getId();
    var37.setId((java.lang.Long)(-1L));
    var37.setPhone("null\nnull\nnull");
    java.lang.String var43 = var37.getEmail();
    var37.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var29.setUser(var37);
    var37.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    br.com.addvisor.model.Agenda var49 = new br.com.addvisor.model.Agenda();
    java.util.List var50 = var49.getNames();
    boolean var51 = var37.equals((java.lang.Object)var50);
    var12.setPhones(var50);
    java.util.List var53 = var12.getPhones();
    java.lang.String var54 = var12.getDescription();
    java.util.List var55 = var12.getPhones();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var16.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var23.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var54 + "' != '" + "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"+ "'", var54.equals("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test427() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test427");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    java.lang.String var5 = var0.getName();
    br.com.addvisor.model.Country var6 = var0.getCountry();
    var0.setName(" - null");
    java.lang.String var9 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + " - null"+ "'", var9.equals(" - null"));

  }

  public void test428() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test428");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    br.com.addvisor.model.Country var10 = var5.getCountry();
    java.lang.String var11 = var5.toString();
    br.com.addvisor.model.Evaluate var12 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var13 = new br.com.addvisor.model.State();
    boolean var15 = var13.equals((java.lang.Object)(byte)100);
    var13.setUf("null\nnull\nnull");
    boolean var18 = var12.equals((java.lang.Object)var13);
    br.com.addvisor.model.Service var19 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var20 = new br.com.addvisor.model.User();
    boolean var22 = var20.equals((java.lang.Object)(-1L));
    java.lang.String var23 = var20.toString();
    java.lang.String var24 = var20.getPassword();
    var19.setUser(var20);
    br.com.addvisor.model.Address var26 = var19.getAddress();
    java.lang.String var27 = var19.getDescription();
    boolean var28 = var12.equals((java.lang.Object)var19);
    br.com.addvisor.model.City var29 = new br.com.addvisor.model.City();
    var29.setName("hi!");
    var29.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    java.lang.String var35 = var34.getComplement();
    java.lang.String var36 = var34.toString();
    boolean var37 = var29.equals((java.lang.Object)var36);
    br.com.addvisor.model.State var38 = new br.com.addvisor.model.State();
    var38.setId((java.lang.Long)1L);
    var38.setName("null\nnull\nnull");
    var38.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var45 = var38.getUf();
    var29.setState(var38);
    br.com.addvisor.model.State var47 = var29.getState();
    var29.setName("null - null\nnull\nnull");
    boolean var50 = var12.equals((java.lang.Object)var29);
    br.com.addvisor.model.State var51 = new br.com.addvisor.model.State();
    boolean var53 = var51.equals((java.lang.Object)(byte)100);
    var51.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var56 = new br.com.addvisor.model.State();
    int var57 = var51.compareTo(var56);
    var56.setName("");
    var29.setState(var56);
    int var61 = var5.compareTo(var56);
    var56.setUf("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    var56.setName("\nnull\nhi!");
    java.lang.String var66 = var56.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null - null"+ "'", var11.equals("null - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var23.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null\nnull\nnull"+ "'", var36.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var66 + "' != '" + "\nnull\nhi! - Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"+ "'", var66.equals("\nnull\nhi! - Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]"));

  }

  public void test429() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test429");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    java.lang.String var11 = var6.getPhone();
    var0.setUser(var6);
    br.com.addvisor.model.Service var13 = new br.com.addvisor.model.Service();
    java.lang.String var14 = var13.toString();
    var13.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var17 = var13.getAddress();
    var13.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var20 = var13.getName();
    br.com.addvisor.model.Evaluate var23 = new br.com.addvisor.model.Evaluate(var6, var13, (java.lang.Float)1.0f, "");
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var25 = new br.com.addvisor.model.State();
    boolean var27 = var25.equals((java.lang.Object)(byte)100);
    var25.setUf("null\nnull\nnull");
    boolean var30 = var24.equals((java.lang.Object)var25);
    br.com.addvisor.model.Service var31 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var32 = new br.com.addvisor.model.User();
    boolean var34 = var32.equals((java.lang.Object)(-1L));
    java.lang.String var35 = var32.toString();
    java.lang.String var36 = var32.getPassword();
    var31.setUser(var32);
    br.com.addvisor.model.Address var38 = var31.getAddress();
    java.lang.String var39 = var31.getDescription();
    boolean var40 = var24.equals((java.lang.Object)var31);
    br.com.addvisor.model.Evaluate var41 = new br.com.addvisor.model.Evaluate();
    var41.setId((java.lang.Long)10L);
    var41.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var46 = var41.getUser();
    java.lang.Long var47 = var41.getId();
    br.com.addvisor.model.Service var48 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var49 = new br.com.addvisor.model.User();
    boolean var51 = var49.equals((java.lang.Object)(-1L));
    java.lang.String var52 = var49.toString();
    java.lang.String var53 = var49.getPassword();
    var48.setUser(var49);
    br.com.addvisor.model.Address var55 = var48.getAddress();
    java.lang.String var56 = var48.getDescription();
    var41.setService(var48);
    boolean var58 = var31.equals((java.lang.Object)var48);
    br.com.addvisor.model.User var59 = new br.com.addvisor.model.User();
    boolean var61 = var59.equals((java.lang.Object)(-1L));
    java.lang.String var62 = var59.getDDD();
    var59.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var65 = var48.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.User var68 = new br.com.addvisor.model.User("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", "Country [id=null, name=null, acronym=null]");
    var48.setUser(var68);
    java.lang.String var70 = var48.getName();
    boolean var71 = var13.equals((java.lang.Object)var48);
    br.com.addvisor.model.City var74 = new br.com.addvisor.model.City();
    var74.setName("hi!");
    java.lang.String var77 = var74.getName();
    br.com.addvisor.model.Address var78 = new br.com.addvisor.model.Address("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]", "", var74);
    var78.setLocation("Country [id=null, name=null, acronym=null]");
    var48.setAddress(var78);
    var78.setId((java.lang.Long)10L);
    var78.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var14.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var35.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + 0L+ "'", var47.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var52.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "hi!"+ "'", var77.equals("hi!"));

  }

  public void test430() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test430");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getName();
    java.lang.String var5 = var0.getEmail();
    var0.setId((java.lang.Long)1L);
    var0.setName("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null] - Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test431() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test431");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    java.lang.Float var7 = var0.getNote();
    var0.setComment("Country [id=null, name=null, acronym=null]");
    java.lang.Float var10 = var0.getNote();
    java.lang.String var11 = var0.toString();
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User("null - null", "hi!");
    var0.setUser(var14);
    br.com.addvisor.model.Service var16 = var0.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]"+ "'", var11.equals("Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test432() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test432");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    br.com.addvisor.model.Agenda var4 = new br.com.addvisor.model.Agenda();
    java.util.List var5 = var4.getNames();
    var2.setNames(var5);
    java.util.List var7 = var2.getNumbers();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    java.util.List var10 = var8.getNumbers();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    java.util.List var13 = var11.getNumbers();
    var8.setNames(var13);
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    br.com.addvisor.model.Agenda var18 = new br.com.addvisor.model.Agenda();
    java.util.List var19 = var18.getNames();
    java.util.List var20 = var18.getNumbers();
    var15.setNames(var20);
    var8.setNames(var20);
    var2.setNumbers(var20);
    var2.addContact("", "");
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    var27.setNames(var30);
    java.util.List var32 = var27.getNumbers();
    var2.setNames(var32);
    boolean var34 = var0.equals((java.lang.Object)var2);
    var0.setName("null\nnull\nnull");
    var0.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    java.lang.String var39 = var0.getAcronym();
    var0.setName("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test433() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test433");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    java.lang.String var9 = var6.toString();
    var6.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var9.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));

  }

  public void test434() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test434");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var3 = var0.getService();
    br.com.addvisor.model.Service var4 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var5 = new br.com.addvisor.model.User();
    boolean var7 = var5.equals((java.lang.Object)(-1L));
    java.lang.String var8 = var5.toString();
    java.lang.String var9 = var5.getPassword();
    var4.setUser(var5);
    br.com.addvisor.model.Address var11 = var4.getAddress();
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getComplement();
    java.lang.String var14 = var12.toString();
    br.com.addvisor.model.City var15 = var12.getCity();
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    var16.setId((java.lang.Long)1L);
    var16.setName("null\nnull\nnull");
    var16.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var23 = var16.getUf();
    boolean var24 = var12.equals((java.lang.Object)var16);
    var4.setAddress(var12);
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.toString();
    var26.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var4.setUser(var26);
    var0.setUser(var26);
    br.com.addvisor.model.User var34 = var0.getUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var29.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test435() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test435");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    var17.setId((java.lang.Long)10L);
    var17.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var22 = var17.getUser();
    java.lang.Long var23 = var17.getId();
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getDescription();
    var17.setService(var24);
    boolean var34 = var7.equals((java.lang.Object)var24);
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.getDDD();
    var35.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var41 = var24.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var24.setTags("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + 0L+ "'", var23.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var41 == false);

  }

  public void test436() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test436");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setComment("");
    var0.setNote((java.lang.Float)100.0f);
    var0.setId((java.lang.Long)(-1L));

  }

  public void test437() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test437");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.PriceCat var1 = br.com.addvisor.model.enums.PriceCat.valueOf("Service [id=null, name=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], description=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], tags=null, media=null, address=null, category=null, phones=[]]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test438() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test438");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setPassword("\nnull\nhi!");
    var0.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=User [id=null, name=null, email=null, password=null, phone=null, city=null] - null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);

  }

  public void test439() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test439");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    java.util.List var8 = var6.getNumbers();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var6.setNames(var11);
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    java.util.List var18 = var16.getNumbers();
    var13.setNames(var18);
    var6.setNames(var18);
    var0.setNumbers(var18);
    java.util.List var22 = var0.getNumbers();
    var0.addContact("Evaluate [id=null, user=null, service=null, note=null, comment=]", "Evaluate [id=0, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]");
    br.com.addvisor.model.Agenda var26 = new br.com.addvisor.model.Agenda();
    java.util.List var27 = var26.getNames();
    java.util.List var28 = var26.getNumbers();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    java.util.List var31 = var29.getNumbers();
    var26.setNames(var31);
    java.util.List var33 = var26.getNames();
    var0.setNames(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);

  }

  public void test440() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test440");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getPassword();
    var0.setPassword("null - null");
    java.lang.String var10 = var0.getName();
    java.lang.Long var11 = var0.getId();
    var0.setPhone("hi! - User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + 100L+ "'", var11.equals(100L));

  }

  public void test441() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test441");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getPassword();
    var0.setPassword("null - null");
    java.lang.String var10 = var0.getName();
    br.com.addvisor.model.City var11 = var0.getCity();
    br.com.addvisor.model.City var12 = var0.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test442() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test442");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    java.lang.Float var6 = var0.getNote();
    var0.setNote((java.lang.Float)100.0f);
    java.lang.Long var9 = var0.getId();
    var0.setId((java.lang.Long)100L);
    var0.setNote((java.lang.Float)10.0f);
    var0.setNote((java.lang.Float)100.0f);
    var0.setId((java.lang.Long)10L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + 0L+ "'", var9.equals(0L));

  }

  public void test443() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test443");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    java.lang.String var7 = var5.getName();
    var5.setId((java.lang.Long)10L);
    br.com.addvisor.model.Country var10 = var5.getCountry();
    br.com.addvisor.model.Country var11 = var5.getCountry();
    var5.setUf("Country [id=10, name=null, acronym=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test444() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test444");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getName();
    java.lang.String var9 = var0.getDescription();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var11 = new br.com.addvisor.model.State();
    var11.setId((java.lang.Long)1L);
    var11.setName("null\nnull\nnull");
    var11.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var18 = var11.getUf();
    boolean var19 = var10.equals((java.lang.Object)var11);
    br.com.addvisor.model.Service var20 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getPassword();
    var20.setUser(var21);
    br.com.addvisor.model.Address var27 = var20.getAddress();
    java.lang.String var28 = var20.getName();
    br.com.addvisor.model.City var29 = new br.com.addvisor.model.City();
    var29.setName("hi!");
    var29.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    java.lang.String var35 = var34.getComplement();
    java.lang.String var36 = var34.toString();
    boolean var37 = var29.equals((java.lang.Object)var36);
    br.com.addvisor.model.State var38 = new br.com.addvisor.model.State();
    var38.setId((java.lang.Long)1L);
    var38.setName("null\nnull\nnull");
    var38.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var45 = var38.getUf();
    var29.setState(var38);
    boolean var47 = var20.equals((java.lang.Object)var29);
    br.com.addvisor.model.Evaluate var50 = new br.com.addvisor.model.Evaluate(var10, var20, (java.lang.Float)100.0f, "");
    var0.setUser(var10);
    br.com.addvisor.model.Evaluate var52 = new br.com.addvisor.model.Evaluate();
    var52.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var55 = var52.getService();
    br.com.addvisor.model.Evaluate var56 = new br.com.addvisor.model.Evaluate();
    var56.setId((java.lang.Long)10L);
    var56.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var61 = var56.getService();
    br.com.addvisor.model.User var62 = new br.com.addvisor.model.User();
    boolean var64 = var62.equals((java.lang.Object)(-1L));
    java.lang.String var65 = var62.toString();
    java.lang.String var66 = var62.getPassword();
    java.lang.String var67 = var62.getPhone();
    var56.setUser(var62);
    br.com.addvisor.model.Service var69 = new br.com.addvisor.model.Service();
    java.lang.String var70 = var69.toString();
    var69.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    br.com.addvisor.model.Address var73 = var69.getAddress();
    var69.setDescription("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var76 = var69.getName();
    br.com.addvisor.model.Evaluate var79 = new br.com.addvisor.model.Evaluate(var62, var69, (java.lang.Float)1.0f, "");
    var52.setService(var69);
    java.lang.Float var81 = var69.getMedia();
    br.com.addvisor.model.Evaluate var84 = new br.com.addvisor.model.Evaluate(var10, var69, (java.lang.Float)100.0f, "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var85 = var84.getComment();
    var84.setComment("\nnull\nhi!");
    java.lang.String var88 = var84.toString();
    var84.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "null\nnull\nnull"+ "'", var36.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var65.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var70 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var70.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var85 + "' != '" + "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"+ "'", var85.equals("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=User [id=null, name=null, email=null, password=null, phone=null, city=null], tags=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], media=null, address=null, category=null, phones=null], note=100.0, comment=\nnull\nhi!]"+ "'", var88.equals("Evaluate [id=null, user=User [id=null, name=null, email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=User [id=null, name=null, email=null, password=null, phone=null, city=null], tags=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null], media=null, address=null, category=null, phones=null], note=100.0, comment=\nnull\nhi!]"));

  }

  public void test445() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test445");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    var1.setId((java.lang.Long)1L);
    var1.setName("null\nnull\nnull");
    var1.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var8 = var1.getUf();
    boolean var9 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    var19.setName("hi!");
    var19.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var24 = new br.com.addvisor.model.Address();
    java.lang.String var25 = var24.getComplement();
    java.lang.String var26 = var24.toString();
    boolean var27 = var19.equals((java.lang.Object)var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    var28.setId((java.lang.Long)1L);
    var28.setName("null\nnull\nnull");
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var35 = var28.getUf();
    var19.setState(var28);
    boolean var37 = var10.equals((java.lang.Object)var19);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.getDDD();
    var41.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Address var47 = new br.com.addvisor.model.Address();
    java.lang.String var48 = var47.toString();
    br.com.addvisor.model.City var49 = new br.com.addvisor.model.City();
    var49.setName("hi!");
    var49.setName("null\nnull\nnull");
    var47.setCity(var49);
    var41.setCity(var49);
    var40.setUser(var41);
    var40.setComment("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Service var59 = var40.getService();
    java.lang.Float var60 = var59.getMedia();
    java.lang.Long var61 = var59.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var26 + "' != '" + "null\nnull\nnull"+ "'", var26.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "null\nnull\nnull"+ "'", var48.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);

  }

  public void test446() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test446");


    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var3 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var2);
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    var4.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    int var10 = var4.compareTo(var9);
    var9.setName("");
    var2.setState(var9);
    var9.setName("null\nnull\nnull");
    java.lang.Long var16 = var9.getId();
    java.lang.String var17 = var9.getUf();
    br.com.addvisor.model.Evaluate var18 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var19 = new br.com.addvisor.model.State();
    boolean var21 = var19.equals((java.lang.Object)(byte)100);
    var19.setUf("null\nnull\nnull");
    boolean var24 = var18.equals((java.lang.Object)var19);
    br.com.addvisor.model.Service var25 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.toString();
    java.lang.String var30 = var26.getPassword();
    var25.setUser(var26);
    br.com.addvisor.model.Address var32 = var25.getAddress();
    var18.setService(var25);
    br.com.addvisor.model.Service var34 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var35 = new br.com.addvisor.model.User();
    boolean var37 = var35.equals((java.lang.Object)(-1L));
    java.lang.String var38 = var35.toString();
    java.lang.String var39 = var35.getPassword();
    var34.setUser(var35);
    br.com.addvisor.model.Address var41 = var34.getAddress();
    java.lang.String var42 = var34.getName();
    var34.setId((java.lang.Long)1L);
    java.lang.Long var45 = var34.getId();
    var18.setService(var34);
    java.lang.Float var47 = var18.getNote();
    java.lang.String var48 = var18.toString();
    var18.setComment("User [id=null, name=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], email= - , password=bab90b8667e900a415ffe18829d9e6f9, phone=Country [id=null, name=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], acronym=User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]], city=hi!]");
    var18.setComment("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    boolean var53 = var9.equals((java.lang.Object)"Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var29.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var45 + "' != '" + 1L+ "'", var45.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var48 + "' != '" + "Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]"+ "'", var48.equals("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);

  }

  public void test447() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test447");


    br.com.addvisor.model.Address var2 = new br.com.addvisor.model.Address();
    java.lang.String var3 = var2.toString();
    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var2.setCity(var4);
    br.com.addvisor.model.City var8 = new br.com.addvisor.model.City();
    var8.setName("hi!");
    var8.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    boolean var16 = var8.equals((java.lang.Object)var15);
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    var17.setId((java.lang.Long)1L);
    var17.setName("null\nnull\nnull");
    var17.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getUf();
    var8.setState(var17);
    int var26 = var4.compareTo(var8);
    java.lang.String var27 = var8.toString();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address("Evaluate [id=null, user=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=1.0, comment=User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]]\nUser [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]\nnull\nnull\nhi!", "User [id=null, name=null, email=null, password=null, phone=null, city=User [id=null, name=null, email=null, password=null, phone=null, city=null] - null]", var8);
    var8.setId((java.lang.Long)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "null\nnull\nnull"+ "'", var3.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == (-6));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));

  }

  public void test448() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test448");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    var0.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test449() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test449");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    var14.setCountry(var21);
    int var23 = var0.compareTo(var14);
    br.com.addvisor.model.City var26 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var27 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var26);
    br.com.addvisor.model.State var28 = new br.com.addvisor.model.State();
    boolean var30 = var28.equals((java.lang.Object)(byte)100);
    var28.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var33 = new br.com.addvisor.model.State();
    int var34 = var28.compareTo(var33);
    var33.setName("");
    var26.setState(var33);
    var33.setName("null\nnull\nnull");
    int var40 = var14.compareTo(var33);
    br.com.addvisor.model.Agenda var41 = new br.com.addvisor.model.Agenda();
    java.util.List var42 = var41.getNames();
    java.util.List var43 = var41.getNumbers();
    br.com.addvisor.model.Agenda var44 = new br.com.addvisor.model.Agenda();
    java.util.List var45 = var44.getNames();
    java.util.List var46 = var44.getNumbers();
    var41.setNames(var46);
    var41.addContact("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var41.addContact("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]", " - ");
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    br.com.addvisor.model.Agenda var56 = new br.com.addvisor.model.Agenda();
    java.util.List var57 = var56.getNames();
    var54.setNames(var57);
    java.util.List var59 = var54.getNumbers();
    br.com.addvisor.model.Agenda var60 = new br.com.addvisor.model.Agenda();
    java.util.List var61 = var60.getNames();
    java.util.List var62 = var60.getNumbers();
    br.com.addvisor.model.Agenda var63 = new br.com.addvisor.model.Agenda();
    java.util.List var64 = var63.getNames();
    java.util.List var65 = var63.getNumbers();
    var60.setNames(var65);
    br.com.addvisor.model.Agenda var67 = new br.com.addvisor.model.Agenda();
    java.util.List var68 = var67.getNames();
    java.util.List var69 = var67.getNumbers();
    br.com.addvisor.model.Agenda var70 = new br.com.addvisor.model.Agenda();
    java.util.List var71 = var70.getNames();
    java.util.List var72 = var70.getNumbers();
    var67.setNames(var72);
    var60.setNames(var72);
    var54.setNumbers(var72);
    java.util.Map var76 = var54.getContacts();
    var41.setContacts(var76);
    boolean var78 = var33.equals((java.lang.Object)var76);
    var33.setUf(" - ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var78 == false);

  }

  public void test450() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test450");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    br.com.addvisor.model.Service var9 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var10 = new br.com.addvisor.model.User();
    boolean var12 = var10.equals((java.lang.Object)(-1L));
    java.lang.String var13 = var10.toString();
    java.lang.String var14 = var10.getPassword();
    var9.setUser(var10);
    br.com.addvisor.model.Address var16 = var9.getAddress();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    java.lang.String var18 = var17.getComplement();
    java.lang.String var19 = var17.toString();
    br.com.addvisor.model.City var20 = var17.getCity();
    br.com.addvisor.model.State var21 = new br.com.addvisor.model.State();
    var21.setId((java.lang.Long)1L);
    var21.setName("null\nnull\nnull");
    var21.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var28 = var21.getUf();
    boolean var29 = var17.equals((java.lang.Object)var21);
    var9.setAddress(var17);
    br.com.addvisor.model.User var31 = var9.getUser();
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.Agenda var33 = new br.com.addvisor.model.Agenda();
    java.util.List var34 = var33.getNames();
    java.util.List var35 = var33.getNumbers();
    br.com.addvisor.model.Agenda var36 = new br.com.addvisor.model.Agenda();
    java.util.List var37 = var36.getNames();
    java.util.List var38 = var36.getNumbers();
    var33.setNames(var38);
    var32.setPhones(var38);
    var9.setPhones(var38);
    boolean var42 = var0.equals((java.lang.Object)var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var13.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "null\nnull\nnull"+ "'", var19.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);

  }

  public void test451() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test451");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var4.getComment();
    var4.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    var15.setId((java.lang.Long)1L);
    var15.setName("null\nnull\nnull");
    var15.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var22 = var15.getUf();
    boolean var23 = var14.equals((java.lang.Object)var15);
    var4.setUser(var14);
    br.com.addvisor.model.Evaluate var25 = new br.com.addvisor.model.Evaluate();
    var25.setId((java.lang.Long)10L);
    var25.setId((java.lang.Long)0L);
    var25.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    boolean var35 = var33.equals((java.lang.Object)(-1L));
    java.lang.String var36 = var33.toString();
    java.lang.String var37 = var33.getPassword();
    var32.setUser(var33);
    br.com.addvisor.model.Address var39 = var32.getAddress();
    java.lang.String var40 = var32.getName();
    var25.setService(var32);
    br.com.addvisor.model.Service var42 = new br.com.addvisor.model.Service();
    java.lang.String var43 = var42.toString();
    var42.setTags("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    var25.setService(var42);
    java.lang.String var47 = var25.getComment();
    br.com.addvisor.model.Service var48 = var25.getService();
    boolean var49 = var4.equals((java.lang.Object)var48);
    java.lang.Float var50 = var48.getMedia();
    java.lang.Long var51 = var48.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var43.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var47 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var47.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);

  }

  public void test452() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test452");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    boolean var16 = var0.equals((java.lang.Object)var7);
    var0.setNote((java.lang.Float)0.0f);
    java.lang.String var19 = var0.getComment();
    var0.setComment("User [id=null, name=null, email=null, password=4238a597ad0f3ff8363f52f6e8c3507, phone=Evaluate [id=0, user=null, service=null, note=null, comment=null], city=null]");
    var0.setId((java.lang.Long)0L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test453() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test453");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    boolean var4 = var0.equals((java.lang.Object)100.0d);
    var0.setId((java.lang.Long)100L);
    java.lang.String var7 = var0.getPassword();
    java.lang.Long var8 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + 100L+ "'", var8.equals(100L));

  }

  public void test454() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test454");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    java.lang.String var11 = var0.toString();
    br.com.addvisor.model.Service var12 = var0.getService();
    br.com.addvisor.model.Evaluate var13 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    boolean var16 = var14.equals((java.lang.Object)(byte)100);
    var14.setUf("null\nnull\nnull");
    boolean var19 = var13.equals((java.lang.Object)var14);
    br.com.addvisor.model.Service var20 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getPassword();
    var20.setUser(var21);
    br.com.addvisor.model.Address var27 = var20.getAddress();
    java.lang.String var28 = var20.getDescription();
    boolean var29 = var13.equals((java.lang.Object)var20);
    br.com.addvisor.model.Evaluate var30 = new br.com.addvisor.model.Evaluate();
    var30.setId((java.lang.Long)10L);
    var30.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var35 = var30.getUser();
    java.lang.Long var36 = var30.getId();
    br.com.addvisor.model.Service var37 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var38 = new br.com.addvisor.model.User();
    boolean var40 = var38.equals((java.lang.Object)(-1L));
    java.lang.String var41 = var38.toString();
    java.lang.String var42 = var38.getPassword();
    var37.setUser(var38);
    br.com.addvisor.model.Address var44 = var37.getAddress();
    java.lang.String var45 = var37.getDescription();
    var30.setService(var37);
    boolean var47 = var20.equals((java.lang.Object)var37);
    br.com.addvisor.model.User var48 = new br.com.addvisor.model.User();
    boolean var50 = var48.equals((java.lang.Object)(-1L));
    java.lang.String var51 = var48.getDDD();
    var48.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var54 = var37.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    boolean var55 = var12.equals((java.lang.Object)"User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]"+ "'", var11.equals("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + 0L+ "'", var36.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var41.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);

  }

  public void test455() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test455");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    br.com.addvisor.model.State var2 = new br.com.addvisor.model.State();
    boolean var4 = var2.equals((java.lang.Object)(byte)100);
    var2.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    int var8 = var2.compareTo(var7);
    boolean var9 = var0.equals((java.lang.Object)var7);
    var0.setName("Service [id=100, name=, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getLocation();
    java.lang.String var14 = var12.getComplement();
    br.com.addvisor.model.Address var15 = new br.com.addvisor.model.Address();
    java.lang.String var16 = var15.toString();
    br.com.addvisor.model.City var17 = new br.com.addvisor.model.City();
    var17.setName("hi!");
    var17.setName("null\nnull\nnull");
    var15.setCity(var17);
    java.lang.Long var23 = var17.getId();
    var12.setCity(var17);
    boolean var25 = var0.equals((java.lang.Object)var17);
    br.com.addvisor.model.Address var26 = new br.com.addvisor.model.Address();
    java.lang.String var27 = var26.toString();
    br.com.addvisor.model.City var28 = new br.com.addvisor.model.City();
    var28.setName("hi!");
    var28.setName("null\nnull\nnull");
    var26.setCity(var28);
    java.lang.String var34 = var28.getName();
    var28.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    int var37 = var17.compareTo(var28);
    java.lang.Long var38 = var17.getId();
    java.lang.Long var39 = var17.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "null\nnull\nnull"+ "'", var34.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == 25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test456() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test456");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var2.setName("null\nnull\nnull");
    var0.setCity(var2);
    java.lang.String var8 = var0.getComplement();
    br.com.addvisor.model.Evaluate var9 = new br.com.addvisor.model.Evaluate();
    var9.setId((java.lang.Long)10L);
    var9.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var14 = var9.getUser();
    var9.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var9.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Float var19 = var9.getNote();
    br.com.addvisor.model.User var20 = new br.com.addvisor.model.User();
    boolean var22 = var20.equals((java.lang.Object)(-1L));
    java.lang.String var23 = var20.toString();
    br.com.addvisor.model.Evaluate var24 = new br.com.addvisor.model.Evaluate();
    var24.setId((java.lang.Long)10L);
    var24.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var29 = var24.getUser();
    boolean var30 = var20.equals((java.lang.Object)var24);
    java.lang.String var31 = var20.getPassword();
    var9.setUser(var20);
    br.com.addvisor.model.Evaluate var33 = new br.com.addvisor.model.Evaluate();
    var33.setId((java.lang.Long)10L);
    var33.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var38 = var33.getUser();
    java.lang.Long var39 = var33.getId();
    br.com.addvisor.model.Service var40 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.toString();
    java.lang.String var45 = var41.getPassword();
    var40.setUser(var41);
    br.com.addvisor.model.Address var47 = var40.getAddress();
    java.lang.String var48 = var40.getDescription();
    var33.setService(var40);
    var40.setId((java.lang.Long)1L);
    var9.setService(var40);
    java.lang.Long var53 = var40.getId();
    boolean var54 = var0.equals((java.lang.Object)var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var23.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + 0L+ "'", var39.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var44.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + 1L+ "'", var53.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);

  }

  public void test457() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test457");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.getDDD();
    var0.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setEmail("hi!");
    var0.setPassword("null - null - Country [id=null, name=null, acronym=null]");
    br.com.addvisor.model.Service var10 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    java.lang.String var15 = var11.getPassword();
    var10.setUser(var11);
    br.com.addvisor.model.Address var17 = var10.getAddress();
    java.lang.String var18 = var10.getName();
    java.lang.Long var19 = var10.getId();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate(var0, var10, (java.lang.Float)100.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Evaluate var23 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var24 = new br.com.addvisor.model.State();
    boolean var26 = var24.equals((java.lang.Object)(byte)100);
    var24.setUf("null\nnull\nnull");
    boolean var29 = var23.equals((java.lang.Object)var24);
    br.com.addvisor.model.Service var30 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    var30.setUser(var31);
    br.com.addvisor.model.Address var37 = var30.getAddress();
    java.lang.String var38 = var30.getDescription();
    boolean var39 = var23.equals((java.lang.Object)var30);
    br.com.addvisor.model.Evaluate var40 = new br.com.addvisor.model.Evaluate();
    var40.setId((java.lang.Long)10L);
    var40.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var45 = var40.getUser();
    java.lang.Long var46 = var40.getId();
    br.com.addvisor.model.Service var47 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var48 = new br.com.addvisor.model.User();
    boolean var50 = var48.equals((java.lang.Object)(-1L));
    java.lang.String var51 = var48.toString();
    java.lang.String var52 = var48.getPassword();
    var47.setUser(var48);
    br.com.addvisor.model.Address var54 = var47.getAddress();
    java.lang.String var55 = var47.getDescription();
    var40.setService(var47);
    boolean var57 = var30.equals((java.lang.Object)var47);
    var30.setTags("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var22.setService(var30);
    var22.setComment("Ev");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + 0L+ "'", var46.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var51 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var51.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == true);

  }

  public void test458() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test458");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]", "Country [id=100, name=null, acronym=hi!]");
    br.com.addvisor.model.City var3 = var2.getCity();
    var2.setEmail("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    var2.setName("User [id=null, name=null, email=null, password=300fac9da4ec249ae6eb64ef8825ae47, phone=null - null - null, city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test459() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test459");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getName();
    var0.setId((java.lang.Integer)100);
    var0.setName("Country [id=null, name=null, acronym=null]");
    java.lang.Integer var8 = var0.getId();
    var0.setAcronym("Country [id=null, name=null, acronym=null]");
    java.lang.String var11 = var0.toString();
    var0.setName("User [id=-1, name=Evaluate [id=0, user=null, service=null, note=null, comment=null]\n\nnull, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + 100+ "'", var8.equals(100));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=Country [id=null, name=null, acronym=null]]"+ "'", var11.equals("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=Country [id=null, name=null, acronym=null]]"));

  }

  public void test460() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test460");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=Evaluate [id=0, user=null, service=null, note=null, comment=null]]");
    br.com.addvisor.model.City var3 = var2.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test461() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test461");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    var0.setComment("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getName();
    var0.setService(var7);
    var7.setDescription("");
    br.com.addvisor.model.Evaluate var19 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.Country var20 = new br.com.addvisor.model.Country();
    java.lang.Integer var21 = var20.getId();
    java.lang.String var22 = var20.getName();
    java.lang.String var23 = var20.getName();
    var20.setId((java.lang.Integer)100);
    boolean var26 = var19.equals((java.lang.Object)var20);
    boolean var27 = var7.equals((java.lang.Object)var19);
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    java.lang.String var29 = var28.toString();
    br.com.addvisor.model.City var30 = new br.com.addvisor.model.City();
    var30.setName("hi!");
    var28.setCity(var30);
    var28.setComplement("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    java.lang.String var36 = var28.getComplement();
    var7.setAddress(var28);
    br.com.addvisor.model.Address var38 = var7.getAddress();
    java.lang.String var39 = var7.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "null\nnull\nnull"+ "'", var29.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + ""+ "'", var39.equals(""));

  }

  public void test462() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test462");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.Map var1 = var0.getContacts();
    java.util.Map var2 = var0.getContacts();
    var0.addContact("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]", "null\nnull\nnull - null");
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    br.com.addvisor.model.Agenda var8 = new br.com.addvisor.model.Agenda();
    java.util.List var9 = var8.getNames();
    var6.setNames(var9);
    java.util.List var11 = var6.getNumbers();
    br.com.addvisor.model.Agenda var12 = new br.com.addvisor.model.Agenda();
    java.util.List var13 = var12.getNames();
    java.util.List var14 = var12.getNumbers();
    br.com.addvisor.model.Agenda var15 = new br.com.addvisor.model.Agenda();
    java.util.List var16 = var15.getNames();
    java.util.List var17 = var15.getNumbers();
    var12.setNames(var17);
    br.com.addvisor.model.Agenda var19 = new br.com.addvisor.model.Agenda();
    java.util.List var20 = var19.getNames();
    java.util.List var21 = var19.getNumbers();
    br.com.addvisor.model.Agenda var22 = new br.com.addvisor.model.Agenda();
    java.util.List var23 = var22.getNames();
    java.util.List var24 = var22.getNumbers();
    var19.setNames(var24);
    var12.setNames(var24);
    var6.setNumbers(var24);
    java.util.List var28 = var6.getNumbers();
    java.util.List var29 = var6.getNames();
    java.util.List var30 = var6.getNumbers();
    var0.setNumbers(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);

  }

  public void test463() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test463");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getPhone();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    var7.setId((java.lang.Long)1L);
    var7.setName("null\nnull\nnull");
    var7.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var14 = var7.getUf();
    boolean var15 = var6.equals((java.lang.Object)var7);
    br.com.addvisor.model.Service var16 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var17 = new br.com.addvisor.model.User();
    boolean var19 = var17.equals((java.lang.Object)(-1L));
    java.lang.String var20 = var17.toString();
    java.lang.String var21 = var17.getPassword();
    var16.setUser(var17);
    br.com.addvisor.model.Address var23 = var16.getAddress();
    java.lang.String var24 = var16.getName();
    br.com.addvisor.model.City var25 = new br.com.addvisor.model.City();
    var25.setName("hi!");
    var25.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address();
    java.lang.String var31 = var30.getComplement();
    java.lang.String var32 = var30.toString();
    boolean var33 = var25.equals((java.lang.Object)var32);
    br.com.addvisor.model.State var34 = new br.com.addvisor.model.State();
    var34.setId((java.lang.Long)1L);
    var34.setName("null\nnull\nnull");
    var34.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var41 = var34.getUf();
    var25.setState(var34);
    boolean var43 = var16.equals((java.lang.Object)var25);
    br.com.addvisor.model.Evaluate var46 = new br.com.addvisor.model.Evaluate(var6, var16, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var49 = new br.com.addvisor.model.Evaluate(var0, var16, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var49.setComment("Service [id=null, name=null, description=null, tags=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], media=null, address=null\nnull\nnull, category=null, phones=null]");
    var49.setComment("Evaluate [id=100, user=User [id=null, name=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], email=null, password=null, phone=null, city=null], service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=0.0, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.Long var54 = var49.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var20.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "null\nnull\nnull"+ "'", var32.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);

  }

  public void test464() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test464");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    br.com.addvisor.model.Agenda var2 = new br.com.addvisor.model.Agenda();
    java.util.List var3 = var2.getNames();
    var0.setNames(var3);
    java.util.List var5 = var0.getNumbers();
    br.com.addvisor.model.Agenda var6 = new br.com.addvisor.model.Agenda();
    java.util.List var7 = var6.getNames();
    java.util.List var8 = var6.getNumbers();
    br.com.addvisor.model.Agenda var9 = new br.com.addvisor.model.Agenda();
    java.util.List var10 = var9.getNames();
    java.util.List var11 = var9.getNumbers();
    var6.setNames(var11);
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    java.util.List var15 = var13.getNumbers();
    br.com.addvisor.model.Agenda var16 = new br.com.addvisor.model.Agenda();
    java.util.List var17 = var16.getNames();
    java.util.List var18 = var16.getNumbers();
    var13.setNames(var18);
    var6.setNames(var18);
    var0.setNumbers(var18);
    java.util.List var22 = var0.getNumbers();
    java.util.List var23 = var0.getNames();
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    java.util.List var26 = var24.getNumbers();
    br.com.addvisor.model.Country var27 = new br.com.addvisor.model.Country();
    java.lang.Integer var28 = var27.getId();
    br.com.addvisor.model.Agenda var29 = new br.com.addvisor.model.Agenda();
    java.util.List var30 = var29.getNames();
    br.com.addvisor.model.Agenda var31 = new br.com.addvisor.model.Agenda();
    java.util.List var32 = var31.getNames();
    var29.setNames(var32);
    java.util.List var34 = var29.getNumbers();
    br.com.addvisor.model.Agenda var35 = new br.com.addvisor.model.Agenda();
    java.util.List var36 = var35.getNames();
    java.util.List var37 = var35.getNumbers();
    br.com.addvisor.model.Agenda var38 = new br.com.addvisor.model.Agenda();
    java.util.List var39 = var38.getNames();
    java.util.List var40 = var38.getNumbers();
    var35.setNames(var40);
    br.com.addvisor.model.Agenda var42 = new br.com.addvisor.model.Agenda();
    java.util.List var43 = var42.getNames();
    java.util.List var44 = var42.getNumbers();
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    java.util.List var47 = var45.getNumbers();
    var42.setNames(var47);
    var35.setNames(var47);
    var29.setNumbers(var47);
    var29.addContact("", "");
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    br.com.addvisor.model.Agenda var56 = new br.com.addvisor.model.Agenda();
    java.util.List var57 = var56.getNames();
    var54.setNames(var57);
    java.util.List var59 = var54.getNumbers();
    var29.setNames(var59);
    boolean var61 = var27.equals((java.lang.Object)var29);
    br.com.addvisor.model.Agenda var62 = new br.com.addvisor.model.Agenda();
    java.util.List var63 = var62.getNames();
    br.com.addvisor.model.Agenda var64 = new br.com.addvisor.model.Agenda();
    java.util.List var65 = var64.getNames();
    var62.setNames(var65);
    java.util.List var67 = var62.getNumbers();
    br.com.addvisor.model.Agenda var68 = new br.com.addvisor.model.Agenda();
    java.util.List var69 = var68.getNames();
    java.util.List var70 = var68.getNumbers();
    br.com.addvisor.model.Agenda var71 = new br.com.addvisor.model.Agenda();
    java.util.List var72 = var71.getNames();
    java.util.List var73 = var71.getNumbers();
    var68.setNames(var73);
    br.com.addvisor.model.Agenda var75 = new br.com.addvisor.model.Agenda();
    java.util.List var76 = var75.getNames();
    java.util.List var77 = var75.getNumbers();
    br.com.addvisor.model.Agenda var78 = new br.com.addvisor.model.Agenda();
    java.util.List var79 = var78.getNames();
    java.util.List var80 = var78.getNumbers();
    var75.setNames(var80);
    var68.setNames(var80);
    var62.setNumbers(var80);
    var29.setNumbers(var80);
    var24.setNumbers(var80);
    var0.setNumbers(var80);
    java.util.Map var87 = var0.getContacts();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);

  }

  public void test465() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test465");


    br.com.addvisor.model.Address var4 = new br.com.addvisor.model.Address();
    java.lang.String var5 = var4.toString();
    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var4.setCity(var6);
    br.com.addvisor.model.City var10 = new br.com.addvisor.model.City();
    var10.setName("hi!");
    int var13 = var6.compareTo(var10);
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User("User [id=null, name=Evaluate [id=100, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], email=null, password=d41d8cd98f00b204e9800998ecf8427e, phone=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null], city=null]", "User [id=null, name=null, email=null, password=4238a597ad0f3ff8363f52f6e8c3507, phone=Evaluate [id=0, user=null, service=null, note=null, comment=null], city=null]", "Evaluate [id=1, user=User [id=null, name=null, email=null, password=4733c1e4c93840f406b626b1699a3659, phone=null\nnull\nnull, city=null], service=Service [id=null, name=null, description=null, tags=null, media=1.0, address=null, category=null, phones=null], note=100.0, comment=hi!]", "User [id=100, name=null, email=null, password=null, phone=null, city=null]", var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "null\nnull\nnull"+ "'", var5.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0);

  }

  public void test466() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test466");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    java.lang.String var15 = var7.getDescription();
    var0.setService(var7);
    br.com.addvisor.model.Evaluate var17 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var18 = new br.com.addvisor.model.State();
    boolean var20 = var18.equals((java.lang.Object)(byte)100);
    var18.setUf("null\nnull\nnull");
    boolean var23 = var17.equals((java.lang.Object)var18);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    var17.setService(var24);
    br.com.addvisor.model.enums.ServiceCat var33 = var24.getCategory();
    br.com.addvisor.model.Address var34 = new br.com.addvisor.model.Address();
    var34.setId((java.lang.Long)0L);
    var24.setAddress(var34);
    var0.setService(var24);
    br.com.addvisor.model.Service var39 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var40 = new br.com.addvisor.model.User();
    boolean var42 = var40.equals((java.lang.Object)(-1L));
    java.lang.String var43 = var40.toString();
    java.lang.String var44 = var40.getPassword();
    var39.setUser(var40);
    br.com.addvisor.model.Address var46 = var39.getAddress();
    java.lang.String var47 = var39.getTags();
    br.com.addvisor.model.Agenda var48 = new br.com.addvisor.model.Agenda();
    java.util.List var49 = var48.getNames();
    java.util.List var50 = var48.getNumbers();
    var39.setPhones(var50);
    java.lang.String var52 = var39.toString();
    br.com.addvisor.model.Service var53 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var54 = new br.com.addvisor.model.User();
    boolean var56 = var54.equals((java.lang.Object)(-1L));
    boolean var58 = var54.equals((java.lang.Object)100.0d);
    var54.setId((java.lang.Long)100L);
    var53.setUser(var54);
    java.lang.String var62 = var54.toString();
    var39.setUser(var54);
    boolean var64 = var0.equals((java.lang.Object)var39);
    br.com.addvisor.model.Service var65 = var0.getService();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var43.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var52 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"+ "'", var52.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=[]]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "User [id=100, name=null, email=null, password=null, phone=null, city=null]"+ "'", var62.equals("User [id=100, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);

  }

  public void test467() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test467");


    br.com.addvisor.model.City var4 = new br.com.addvisor.model.City();
    var4.setName("hi!");
    var4.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var9 = new br.com.addvisor.model.Address();
    java.lang.String var10 = var9.getComplement();
    java.lang.String var11 = var9.toString();
    boolean var12 = var4.equals((java.lang.Object)var11);
    br.com.addvisor.model.User var13 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var4);
    br.com.addvisor.model.City var14 = var13.getCity();
    java.lang.Long var15 = var13.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "null\nnull\nnull"+ "'", var11.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test468() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test468");


    br.com.addvisor.model.Service var2 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var3 = new br.com.addvisor.model.User();
    boolean var5 = var3.equals((java.lang.Object)(-1L));
    java.lang.String var6 = var3.toString();
    java.lang.String var7 = var3.getPassword();
    var2.setUser(var3);
    br.com.addvisor.model.Address var9 = var2.getAddress();
    java.lang.String var10 = var2.getName();
    br.com.addvisor.model.City var11 = new br.com.addvisor.model.City();
    var11.setName("hi!");
    var11.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address();
    java.lang.String var17 = var16.getComplement();
    java.lang.String var18 = var16.toString();
    boolean var19 = var11.equals((java.lang.Object)var18);
    br.com.addvisor.model.State var20 = new br.com.addvisor.model.State();
    var20.setId((java.lang.Long)1L);
    var20.setName("null\nnull\nnull");
    var20.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var27 = var20.getUf();
    var11.setState(var20);
    boolean var29 = var2.equals((java.lang.Object)var11);
    br.com.addvisor.model.Address var30 = new br.com.addvisor.model.Address("User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]", "Country [id=null, name=null, acronym=null]", var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var6.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "null\nnull\nnull"+ "'", var18.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var29 == false);

  }

  public void test469() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test469");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getName();
    var0.setId((java.lang.Integer)100);
    var0.setName("Country [id=null, name=null, acronym=null]");
    java.lang.String var8 = var0.toString();
    java.lang.String var9 = var0.getName();
    var0.setAcronym("User [id=null, name=null, email=null, password=4238a597ad0f3ff8363f52f6e8c3507, phone=Evaluate [id=0, user=null, service=null, note=null, comment=null], city=null]");
    java.lang.String var12 = var0.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]"+ "'", var8.equals("Country [id=100, name=Country [id=null, name=null, acronym=null], acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var9.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var12.equals("Country [id=null, name=null, acronym=null]"));

  }

  public void test470() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test470");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getName();
    java.lang.String var26 = var21.getName();
    java.lang.String var27 = var21.getName();
    boolean var28 = var17.equals((java.lang.Object)var21);
    var21.setEmail("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull");
    java.lang.String var31 = var21.toString();
    var21.setPhone("null - null - Country [id=null, name=null, acronym=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "User [id=null, name=null, email=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull, password=null, phone=null, city=null]"+ "'", var31.equals("User [id=null, name=null, email=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull, password=null, phone=null, city=null]"));

  }

  public void test471() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test471");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      br.com.addvisor.model.enums.ServiceCat var1 = br.com.addvisor.model.enums.ServiceCat.valueOf("null - null - null");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test472() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test472");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Evaluate var11 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    boolean var14 = var12.equals((java.lang.Object)(byte)100);
    var12.setUf("null\nnull\nnull");
    boolean var17 = var11.equals((java.lang.Object)var12);
    br.com.addvisor.model.Service var18 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var19 = new br.com.addvisor.model.User();
    boolean var21 = var19.equals((java.lang.Object)(-1L));
    java.lang.String var22 = var19.toString();
    java.lang.String var23 = var19.getPassword();
    var18.setUser(var19);
    br.com.addvisor.model.Address var25 = var18.getAddress();
    var11.setService(var18);
    br.com.addvisor.model.enums.ServiceCat var27 = var18.getCategory();
    br.com.addvisor.model.Address var28 = new br.com.addvisor.model.Address();
    var28.setId((java.lang.Long)0L);
    var18.setAddress(var28);
    boolean var32 = var0.equals((java.lang.Object)var18);
    java.lang.String var33 = var18.getName();
    br.com.addvisor.model.User var34 = var18.getUser();
    java.lang.Long var35 = var34.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var22.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);

  }

  public void test473() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test473");


    br.com.addvisor.model.Country var0 = new br.com.addvisor.model.Country();
    java.lang.Integer var1 = var0.getId();
    java.lang.String var2 = var0.getName();
    java.lang.String var3 = var0.getName();
    var0.setId((java.lang.Integer)100);
    var0.setName("Country [id=null, name=null, acronym=null]");
    java.lang.Integer var8 = var0.getId();
    var0.setAcronym("Country [id=null, name=null, acronym=null]");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + 100+ "'", var8.equals(100));

  }

  public void test474() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test474");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    br.com.addvisor.model.State var6 = var2.getState();
    var2.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    var2.setName("User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test475() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test475");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.City var19 = new br.com.addvisor.model.City();
    br.com.addvisor.model.Address var20 = new br.com.addvisor.model.Address("null\nnull\nnull", "Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", var19);
    br.com.addvisor.model.State var21 = new br.com.addvisor.model.State();
    boolean var23 = var21.equals((java.lang.Object)(byte)100);
    var21.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var26 = new br.com.addvisor.model.State();
    int var27 = var21.compareTo(var26);
    var26.setName("");
    var19.setState(var26);
    int var31 = var6.compareTo(var19);
    java.lang.String var32 = var19.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);

  }

  public void test476() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test476");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    var0.setLocation("");
    java.lang.String var8 = var0.getLocation();
    var0.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));

  }

  public void test477() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test477");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var1 = new br.com.addvisor.model.State();
    boolean var3 = var1.equals((java.lang.Object)(byte)100);
    var1.setUf("null\nnull\nnull");
    boolean var6 = var0.equals((java.lang.Object)var1);
    br.com.addvisor.model.Service var7 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User();
    boolean var10 = var8.equals((java.lang.Object)(-1L));
    java.lang.String var11 = var8.toString();
    java.lang.String var12 = var8.getPassword();
    var7.setUser(var8);
    br.com.addvisor.model.Address var14 = var7.getAddress();
    var0.setService(var7);
    br.com.addvisor.model.enums.ServiceCat var16 = var7.getCategory();
    br.com.addvisor.model.Address var17 = new br.com.addvisor.model.Address();
    var17.setId((java.lang.Long)0L);
    var7.setAddress(var17);
    br.com.addvisor.model.User var21 = new br.com.addvisor.model.User();
    boolean var23 = var21.equals((java.lang.Object)(-1L));
    java.lang.String var24 = var21.toString();
    java.lang.String var25 = var21.getName();
    java.lang.String var26 = var21.getName();
    java.lang.String var27 = var21.getName();
    boolean var28 = var17.equals((java.lang.Object)var21);
    var21.setPassword("hi! - User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    java.lang.String var31 = var21.getEmail();
    br.com.addvisor.model.Service var32 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var33 = new br.com.addvisor.model.User();
    boolean var35 = var33.equals((java.lang.Object)(-1L));
    java.lang.String var36 = var33.toString();
    java.lang.String var37 = var33.getPassword();
    var32.setUser(var33);
    java.lang.String var39 = var33.getName();
    boolean var40 = var21.equals((java.lang.Object)var33);
    java.lang.String var41 = var21.getDDD();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var11.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var24.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var36.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);

  }

  public void test478() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test478");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    var0.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.getComplement();
    java.lang.String var7 = var5.toString();
    boolean var8 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    var9.setId((java.lang.Long)1L);
    var9.setName("null\nnull\nnull");
    var9.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var16 = var9.getUf();
    var0.setState(var9);
    br.com.addvisor.model.State var18 = var0.getState();
    var18.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    java.lang.Integer var22 = var21.getId();
    java.lang.String var23 = var21.getName();
    var21.setAcronym("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    java.lang.String var26 = var21.getName();
    java.lang.String var27 = var21.getName();
    var18.setCountry(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test479() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test479");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.Country var3 = var0.getCountry();
    br.com.addvisor.model.State var4 = new br.com.addvisor.model.State();
    boolean var6 = var4.equals((java.lang.Object)(byte)100);
    br.com.addvisor.model.State var7 = new br.com.addvisor.model.State();
    boolean var9 = var7.equals((java.lang.Object)(byte)100);
    var7.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var12 = new br.com.addvisor.model.State();
    int var13 = var7.compareTo(var12);
    java.lang.String var14 = var12.getName();
    var12.setId((java.lang.Long)10L);
    java.lang.Long var17 = var12.getId();
    int var18 = var4.compareTo(var12);
    int var19 = var0.compareTo(var12);
    br.com.addvisor.model.State var20 = new br.com.addvisor.model.State();
    boolean var22 = var20.equals((java.lang.Object)(byte)100);
    var20.setUf("null\nnull\nnull");
    java.lang.String var25 = var20.getName();
    br.com.addvisor.model.Country var26 = var20.getCountry();
    java.lang.Long var27 = var20.getId();
    int var28 = var0.compareTo(var20);
    br.com.addvisor.model.Address var29 = new br.com.addvisor.model.Address();
    java.lang.String var30 = var29.getComplement();
    java.lang.String var31 = var29.toString();
    java.lang.String var32 = var29.getComplement();
    br.com.addvisor.model.City var37 = new br.com.addvisor.model.City();
    var37.setName("hi!");
    var37.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var42 = new br.com.addvisor.model.Address();
    java.lang.String var43 = var42.getComplement();
    java.lang.String var44 = var42.toString();
    boolean var45 = var37.equals((java.lang.Object)var44);
    br.com.addvisor.model.User var46 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var37);
    var29.setCity(var37);
    var29.setLocation("hi!");
    var29.setComplement("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.City var54 = new br.com.addvisor.model.City();
    var54.setName("hi!");
    var54.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var59 = new br.com.addvisor.model.Address();
    java.lang.String var60 = var59.getComplement();
    java.lang.String var61 = var59.toString();
    boolean var62 = var54.equals((java.lang.Object)var61);
    br.com.addvisor.model.User var63 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var64 = new br.com.addvisor.model.State();
    var64.setId((java.lang.Long)1L);
    var64.setName("null\nnull\nnull");
    var64.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var71 = var64.getUf();
    boolean var72 = var63.equals((java.lang.Object)var64);
    var54.setState(var64);
    br.com.addvisor.model.Address var74 = new br.com.addvisor.model.Address("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "", var54);
    br.com.addvisor.model.City var75 = var74.getCity();
    var29.setCity(var75);
    var75.setId((java.lang.Long)(-1L));
    boolean var79 = var20.equals((java.lang.Object)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + 10L+ "'", var17.equals(10L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "null\nnull\nnull"+ "'", var31.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "null\nnull\nnull"+ "'", var44.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var61 + "' != '" + "null\nnull\nnull"+ "'", var61.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);

  }

  public void test480() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test480");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    var0.setId((java.lang.Long)0L);
    var0.setId((java.lang.Long)1L);
    var0.setId((java.lang.Long)0L);
    var0.setId((java.lang.Long)100L);

  }

  public void test481() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test481");


    br.com.addvisor.model.Agenda var0 = new br.com.addvisor.model.Agenda();
    java.util.List var1 = var0.getNames();
    java.util.List var2 = var0.getNumbers();
    br.com.addvisor.model.Agenda var3 = new br.com.addvisor.model.Agenda();
    java.util.List var4 = var3.getNames();
    java.util.List var5 = var3.getNumbers();
    var0.setNames(var5);
    var0.addContact("User [id=null, name=null, email=null, password=null, phone=null, city=null]", "User [id=-1, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=null\nnull\nnull, city=null]");
    java.util.Map var10 = var0.getContacts();
    java.util.Map var11 = var0.getContacts();
    br.com.addvisor.model.Agenda var12 = new br.com.addvisor.model.Agenda();
    java.util.Map var13 = var12.getContacts();
    java.util.Map var14 = var12.getContacts();
    var12.addContact("Evaluate [id=null, user=null, service=Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]", "null\nnull\nnull - null");
    java.util.List var18 = var12.getNumbers();
    var0.setNames(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test482() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test482");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    var0.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var5 = new br.com.addvisor.model.Address();
    java.lang.String var6 = var5.getComplement();
    java.lang.String var7 = var5.toString();
    boolean var8 = var0.equals((java.lang.Object)var7);
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    var9.setId((java.lang.Long)1L);
    var9.setName("null\nnull\nnull");
    var9.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var16 = var9.getUf();
    var0.setState(var9);
    br.com.addvisor.model.State var18 = var0.getState();
    var0.setId((java.lang.Long)(-1L));
    java.lang.String var21 = var0.toString();
    java.lang.Long var22 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "null\nnull\nnull"+ "'", var7.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "null\nnull\nnull"+ "'", var21.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + (-1L)+ "'", var22.equals((-1L)));

  }

  public void test483() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test483");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setComment("");
    br.com.addvisor.model.Service var3 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var4 = new br.com.addvisor.model.User();
    boolean var6 = var4.equals((java.lang.Object)(-1L));
    java.lang.String var7 = var4.toString();
    java.lang.String var8 = var4.getPassword();
    var3.setUser(var4);
    br.com.addvisor.model.Address var10 = var3.getAddress();
    java.lang.String var11 = var3.getDescription();
    var0.setService(var3);
    br.com.addvisor.model.Service var13 = var0.getService();
    java.lang.Long var14 = var0.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var7.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test484() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test484");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = var0.getService();
    br.com.addvisor.model.User var8 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var9 = var8.getId();
    var8.setId((java.lang.Long)(-1L));
    var8.setPhone("null\nnull\nnull");
    java.lang.String var14 = var8.getEmail();
    var8.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    var0.setUser(var8);
    var8.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=null]");
    br.com.addvisor.model.City var20 = var8.getCity();
    var8.setId((java.lang.Long)1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test485() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test485");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]\n\nnull", "Evaluate [id=100, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]]]");
    java.lang.Long var3 = var2.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test486() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test486");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    java.lang.Float var5 = var0.getNote();
    br.com.addvisor.model.Service var6 = new br.com.addvisor.model.Service();
    java.lang.String var7 = var6.toString();
    var0.setService(var6);
    var0.setId((java.lang.Long)(-1L));
    br.com.addvisor.model.User var11 = new br.com.addvisor.model.User();
    boolean var13 = var11.equals((java.lang.Object)(-1L));
    java.lang.String var14 = var11.toString();
    var0.setUser(var11);
    java.lang.String var16 = var11.getPassword();
    br.com.addvisor.model.City var17 = var11.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"+ "'", var7.equals("Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var14.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);

  }

  public void test487() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test487");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.Service var5 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var6 = new br.com.addvisor.model.User();
    boolean var8 = var6.equals((java.lang.Object)(-1L));
    java.lang.String var9 = var6.toString();
    java.lang.String var10 = var6.getPassword();
    var5.setUser(var6);
    br.com.addvisor.model.Address var12 = var5.getAddress();
    br.com.addvisor.model.Address var13 = new br.com.addvisor.model.Address();
    java.lang.String var14 = var13.getComplement();
    java.lang.String var15 = var13.toString();
    br.com.addvisor.model.City var16 = var13.getCity();
    br.com.addvisor.model.State var17 = new br.com.addvisor.model.State();
    var17.setId((java.lang.Long)1L);
    var17.setName("null\nnull\nnull");
    var17.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var24 = var17.getUf();
    boolean var25 = var13.equals((java.lang.Object)var17);
    var5.setAddress(var13);
    br.com.addvisor.model.User var27 = var5.getUser();
    var27.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]");
    var0.setUser(var27);
    br.com.addvisor.model.User var31 = new br.com.addvisor.model.User();
    boolean var33 = var31.equals((java.lang.Object)(-1L));
    java.lang.String var34 = var31.toString();
    java.lang.String var35 = var31.getPassword();
    java.lang.String var36 = var31.getPassword();
    var31.setName("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    br.com.addvisor.model.Evaluate var39 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    boolean var42 = var40.equals((java.lang.Object)(byte)100);
    var40.setUf("null\nnull\nnull");
    boolean var45 = var39.equals((java.lang.Object)var40);
    br.com.addvisor.model.Service var46 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var47 = new br.com.addvisor.model.User();
    boolean var49 = var47.equals((java.lang.Object)(-1L));
    java.lang.String var50 = var47.toString();
    java.lang.String var51 = var47.getPassword();
    var46.setUser(var47);
    br.com.addvisor.model.Address var53 = var46.getAddress();
    java.lang.String var54 = var46.getDescription();
    boolean var55 = var39.equals((java.lang.Object)var46);
    br.com.addvisor.model.Evaluate var56 = new br.com.addvisor.model.Evaluate();
    var56.setId((java.lang.Long)10L);
    var56.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var61 = var56.getUser();
    java.lang.Long var62 = var56.getId();
    br.com.addvisor.model.Service var63 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var64 = new br.com.addvisor.model.User();
    boolean var66 = var64.equals((java.lang.Object)(-1L));
    java.lang.String var67 = var64.toString();
    java.lang.String var68 = var64.getPassword();
    var63.setUser(var64);
    br.com.addvisor.model.Address var70 = var63.getAddress();
    java.lang.String var71 = var63.getDescription();
    var56.setService(var63);
    boolean var73 = var46.equals((java.lang.Object)var63);
    br.com.addvisor.model.User var74 = new br.com.addvisor.model.User();
    boolean var76 = var74.equals((java.lang.Object)(-1L));
    java.lang.String var77 = var74.toString();
    java.lang.String var78 = var74.getPassword();
    java.lang.String var79 = var74.getName();
    boolean var80 = var46.equals((java.lang.Object)var74);
    java.lang.Float var81 = var46.getMedia();
    br.com.addvisor.model.Evaluate var84 = new br.com.addvisor.model.Evaluate(var31, var46, (java.lang.Float)0.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var0.setService(var46);
    br.com.addvisor.model.State var86 = new br.com.addvisor.model.State();
    var86.setId((java.lang.Long)1L);
    var86.setName("null\nnull\nnull");
    boolean var91 = var46.equals((java.lang.Object)var86);
    var86.setUf("Service [id=1, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "null\nnull\nnull"+ "'", var15.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var34.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var50 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var50.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + 0L+ "'", var62.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var67 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var67.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var77 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var77.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var91 == false);

  }

  public void test488() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test488");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var4.getComment();
    var4.setId((java.lang.Long)1L);
    br.com.addvisor.model.User var14 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var15 = new br.com.addvisor.model.State();
    var15.setId((java.lang.Long)1L);
    var15.setName("null\nnull\nnull");
    var15.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var22 = var15.getUf();
    boolean var23 = var14.equals((java.lang.Object)var15);
    var4.setUser(var14);
    br.com.addvisor.model.User var25 = var4.getUser();
    var25.setPhone("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    var25.setId((java.lang.Long)0L);
    var25.setName("Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null]");
    var25.setId((java.lang.Long)10L);
    java.lang.String var34 = var25.getEmail();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);

  }

  public void test489() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test489");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    java.lang.String var4 = var0.getPassword();
    java.lang.String var5 = var0.getName();
    java.lang.String var6 = var0.getPassword();
    java.lang.String var7 = var0.getName();
    br.com.addvisor.model.Service var8 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var9 = new br.com.addvisor.model.User();
    boolean var11 = var9.equals((java.lang.Object)(-1L));
    java.lang.String var12 = var9.toString();
    java.lang.String var13 = var9.getPassword();
    var8.setUser(var9);
    br.com.addvisor.model.Address var15 = var8.getAddress();
    java.lang.String var16 = var8.getName();
    br.com.addvisor.model.Address var17 = var8.getAddress();
    br.com.addvisor.model.User var18 = new br.com.addvisor.model.User();
    boolean var20 = var18.equals((java.lang.Object)(-1L));
    java.lang.String var21 = var18.toString();
    br.com.addvisor.model.Evaluate var22 = new br.com.addvisor.model.Evaluate();
    var22.setId((java.lang.Long)10L);
    var22.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var27 = var22.getUser();
    boolean var28 = var18.equals((java.lang.Object)var22);
    java.lang.String var29 = var18.getPassword();
    var18.setId((java.lang.Long)(-1L));
    java.lang.String var32 = var18.getPhone();
    var8.setUser(var18);
    br.com.addvisor.model.Evaluate var36 = new br.com.addvisor.model.Evaluate(var0, var8, (java.lang.Float)10.0f, "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    br.com.addvisor.model.Address var37 = new br.com.addvisor.model.Address();
    java.lang.String var38 = var37.getComplement();
    java.lang.String var39 = var37.toString();
    var37.setComplement("Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null]");
    var8.setAddress(var37);
    java.lang.String var43 = var37.getLocation();
    var37.setLocation("Service [id=1, name=null, description=null - null\nnull\nnull, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var12.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var21 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var21.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "null\nnull\nnull"+ "'", var39.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);

  }

  public void test490() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test490");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    var0.setId((java.lang.Long)1L);
    var0.setName("null\nnull\nnull");
    var0.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var7 = var0.getUf();
    br.com.addvisor.model.Country var8 = var0.getCountry();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var14 = new br.com.addvisor.model.State();
    int var15 = var9.compareTo(var14);
    var14.setName("");
    br.com.addvisor.model.Country var18 = new br.com.addvisor.model.Country();
    java.lang.Integer var19 = var18.getId();
    var14.setCountry(var18);
    br.com.addvisor.model.Country var21 = new br.com.addvisor.model.Country();
    var14.setCountry(var21);
    java.lang.String var23 = var21.toString();
    br.com.addvisor.model.User var24 = new br.com.addvisor.model.User();
    boolean var26 = var24.equals((java.lang.Object)(-1L));
    java.lang.String var27 = var24.toString();
    java.lang.String var28 = var24.getPassword();
    java.lang.String var29 = var24.getPhone();
    br.com.addvisor.model.User var30 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var31 = new br.com.addvisor.model.State();
    var31.setId((java.lang.Long)1L);
    var31.setName("null\nnull\nnull");
    var31.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var38 = var31.getUf();
    boolean var39 = var30.equals((java.lang.Object)var31);
    br.com.addvisor.model.Service var40 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var41 = new br.com.addvisor.model.User();
    boolean var43 = var41.equals((java.lang.Object)(-1L));
    java.lang.String var44 = var41.toString();
    java.lang.String var45 = var41.getPassword();
    var40.setUser(var41);
    br.com.addvisor.model.Address var47 = var40.getAddress();
    java.lang.String var48 = var40.getName();
    br.com.addvisor.model.City var49 = new br.com.addvisor.model.City();
    var49.setName("hi!");
    var49.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var54 = new br.com.addvisor.model.Address();
    java.lang.String var55 = var54.getComplement();
    java.lang.String var56 = var54.toString();
    boolean var57 = var49.equals((java.lang.Object)var56);
    br.com.addvisor.model.State var58 = new br.com.addvisor.model.State();
    var58.setId((java.lang.Long)1L);
    var58.setName("null\nnull\nnull");
    var58.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var65 = var58.getUf();
    var49.setState(var58);
    boolean var67 = var40.equals((java.lang.Object)var49);
    br.com.addvisor.model.Evaluate var70 = new br.com.addvisor.model.Evaluate(var30, var40, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.Evaluate var73 = new br.com.addvisor.model.Evaluate(var24, var40, (java.lang.Float)0.0f, "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]");
    java.lang.Long var74 = var40.getId();
    br.com.addvisor.model.User var75 = new br.com.addvisor.model.User();
    boolean var77 = var75.equals((java.lang.Object)(-1L));
    boolean var79 = var75.equals((java.lang.Object)100.0d);
    var75.setEmail("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var82 = var75.toString();
    var40.setUser(var75);
    br.com.addvisor.model.Service var84 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var85 = new br.com.addvisor.model.User();
    boolean var87 = var85.equals((java.lang.Object)(-1L));
    java.lang.String var88 = var85.toString();
    java.lang.String var89 = var85.getPassword();
    var84.setUser(var85);
    br.com.addvisor.model.Address var91 = var84.getAddress();
    br.com.addvisor.model.Evaluate var94 = new br.com.addvisor.model.Evaluate(var75, var84, (java.lang.Float)1.0f, "User [id=null, name=null, email=null, password=21c96d96756cfeed7f71110d9cb1788b, phone=Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]], city=null]");
    boolean var95 = var21.equals((java.lang.Object)var94);
    var0.setCountry(var21);
    java.lang.Integer var97 = var21.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "Country [id=null, name=null, acronym=null]"+ "'", var23.equals("Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var27.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var44 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var44.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "null\nnull\nnull"+ "'", var56.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var79 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + "User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"+ "'", var82.equals("User [id=null, name=null, email=User [id=null, name=null, email=null, password=null, phone=null, city=null], password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var87 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var88 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var88.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var95 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var97);

  }

  public void test491() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test491");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    var0.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var5 = var0.getUser();
    java.lang.Long var6 = var0.getId();
    java.lang.Float var7 = var0.getNote();
    br.com.addvisor.model.Evaluate var8 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.State var9 = new br.com.addvisor.model.State();
    boolean var11 = var9.equals((java.lang.Object)(byte)100);
    var9.setUf("null\nnull\nnull");
    boolean var14 = var8.equals((java.lang.Object)var9);
    br.com.addvisor.model.Service var15 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var16 = new br.com.addvisor.model.User();
    boolean var18 = var16.equals((java.lang.Object)(-1L));
    java.lang.String var19 = var16.toString();
    java.lang.String var20 = var16.getPassword();
    var15.setUser(var16);
    br.com.addvisor.model.Address var22 = var15.getAddress();
    var8.setService(var15);
    br.com.addvisor.model.Service var24 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var25 = new br.com.addvisor.model.User();
    boolean var27 = var25.equals((java.lang.Object)(-1L));
    java.lang.String var28 = var25.toString();
    java.lang.String var29 = var25.getPassword();
    var24.setUser(var25);
    br.com.addvisor.model.Address var31 = var24.getAddress();
    java.lang.String var32 = var24.getName();
    var24.setId((java.lang.Long)1L);
    java.lang.Long var35 = var24.getId();
    var8.setService(var24);
    java.lang.String var37 = var24.getTags();
    var0.setService(var24);
    br.com.addvisor.model.User var39 = new br.com.addvisor.model.User();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    var40.setId((java.lang.Long)1L);
    var40.setName("null\nnull\nnull");
    var40.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var47 = var40.getUf();
    boolean var48 = var39.equals((java.lang.Object)var40);
    br.com.addvisor.model.Service var49 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var50 = new br.com.addvisor.model.User();
    boolean var52 = var50.equals((java.lang.Object)(-1L));
    java.lang.String var53 = var50.toString();
    java.lang.String var54 = var50.getPassword();
    var49.setUser(var50);
    br.com.addvisor.model.Address var56 = var49.getAddress();
    java.lang.String var57 = var49.getName();
    br.com.addvisor.model.City var58 = new br.com.addvisor.model.City();
    var58.setName("hi!");
    var58.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var63 = new br.com.addvisor.model.Address();
    java.lang.String var64 = var63.getComplement();
    java.lang.String var65 = var63.toString();
    boolean var66 = var58.equals((java.lang.Object)var65);
    br.com.addvisor.model.State var67 = new br.com.addvisor.model.State();
    var67.setId((java.lang.Long)1L);
    var67.setName("null\nnull\nnull");
    var67.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var74 = var67.getUf();
    var58.setState(var67);
    boolean var76 = var49.equals((java.lang.Object)var58);
    br.com.addvisor.model.Evaluate var79 = new br.com.addvisor.model.Evaluate(var39, var49, (java.lang.Float)100.0f, "");
    br.com.addvisor.model.User var80 = var79.getUser();
    java.lang.String var81 = var80.getDDD();
    var24.setUser(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + 0L+ "'", var6.equals(0L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var19.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var28.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + 1L+ "'", var35.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var53.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "null\nnull\nnull"+ "'", var65.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var76 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var81);

  }

  public void test492() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test492");


    br.com.addvisor.model.Address var0 = new br.com.addvisor.model.Address();
    java.lang.String var1 = var0.toString();
    br.com.addvisor.model.City var2 = new br.com.addvisor.model.City();
    var2.setName("hi!");
    var0.setCity(var2);
    br.com.addvisor.model.State var6 = var2.getState();
    var2.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null");
    java.lang.String var9 = var2.getName();
    java.lang.Long var10 = var2.getId();
    java.lang.Long var11 = var2.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "null\nnull\nnull"+ "'", var1.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null] - null"+ "'", var9.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null] - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test493() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test493");


    br.com.addvisor.model.Service var0 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var1 = new br.com.addvisor.model.User();
    boolean var3 = var1.equals((java.lang.Object)(-1L));
    java.lang.String var4 = var1.toString();
    java.lang.String var5 = var1.getPassword();
    var0.setUser(var1);
    br.com.addvisor.model.Address var7 = var0.getAddress();
    java.lang.String var8 = var0.getTags();
    var0.setId((java.lang.Long)1L);
    br.com.addvisor.model.Service var11 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var12 = new br.com.addvisor.model.User();
    boolean var14 = var12.equals((java.lang.Object)(-1L));
    java.lang.String var15 = var12.toString();
    java.lang.String var16 = var12.getPassword();
    var11.setUser(var12);
    br.com.addvisor.model.Address var18 = var11.getAddress();
    java.lang.String var19 = var11.getName();
    var11.setId((java.lang.Long)1L);
    java.lang.Long var22 = var11.getId();
    var11.setDescription("null - null\nnull\nnull");
    boolean var25 = var0.equals((java.lang.Object)var11);
    br.com.addvisor.model.Evaluate var26 = new br.com.addvisor.model.Evaluate();
    br.com.addvisor.model.Service var27 = var26.getService();
    java.lang.Long var28 = var26.getId();
    br.com.addvisor.model.User var29 = new br.com.addvisor.model.User();
    boolean var31 = var29.equals((java.lang.Object)(-1L));
    java.lang.String var32 = var29.getDDD();
    var29.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var29.setEmail("hi!");
    java.lang.String var37 = var29.getEmail();
    java.lang.String var38 = var29.getPhone();
    var26.setUser(var29);
    br.com.addvisor.model.User var42 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "null - null\nnull\nnull");
    br.com.addvisor.model.State var43 = new br.com.addvisor.model.State();
    var43.setId((java.lang.Long)1L);
    var43.setName("null\nnull\nnull");
    var43.setUf("Country [id=null, name=null, acronym=null]");
    var43.setName("null - null");
    boolean var52 = var42.equals((java.lang.Object)var43);
    java.lang.String var53 = var43.toString();
    boolean var54 = var29.equals((java.lang.Object)var53);
    var0.setUser(var29);
    var0.setName("Service [id=1, name=Service [id=10, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], description=null, tags=null, media=null, address=null, category=null, phones=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var4.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var15.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + 1L+ "'", var22.equals(1L));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "hi!"+ "'", var37.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var38.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "null - null - Country [id=null, name=null, acronym=null]"+ "'", var53.equals("null - null - Country [id=null, name=null, acronym=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == false);

  }

  public void test494() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test494");


    br.com.addvisor.model.City var0 = new br.com.addvisor.model.City();
    var0.setName("hi!");
    br.com.addvisor.model.State var3 = new br.com.addvisor.model.State();
    var3.setId((java.lang.Long)1L);
    var3.setName("null\nnull\nnull");
    var0.setState(var3);
    java.lang.String var9 = var3.toString();
    br.com.addvisor.model.Country var10 = var3.getCountry();
    br.com.addvisor.model.Agenda var11 = new br.com.addvisor.model.Agenda();
    java.util.List var12 = var11.getNames();
    br.com.addvisor.model.Agenda var13 = new br.com.addvisor.model.Agenda();
    java.util.List var14 = var13.getNames();
    var11.setNames(var14);
    java.util.List var16 = var11.getNumbers();
    br.com.addvisor.model.Agenda var17 = new br.com.addvisor.model.Agenda();
    java.util.List var18 = var17.getNames();
    java.util.List var19 = var17.getNumbers();
    br.com.addvisor.model.Agenda var20 = new br.com.addvisor.model.Agenda();
    java.util.List var21 = var20.getNames();
    java.util.List var22 = var20.getNumbers();
    var17.setNames(var22);
    br.com.addvisor.model.Agenda var24 = new br.com.addvisor.model.Agenda();
    java.util.List var25 = var24.getNames();
    java.util.List var26 = var24.getNumbers();
    br.com.addvisor.model.Agenda var27 = new br.com.addvisor.model.Agenda();
    java.util.List var28 = var27.getNames();
    java.util.List var29 = var27.getNumbers();
    var24.setNames(var29);
    var17.setNames(var29);
    var11.setNumbers(var29);
    var11.addContact("Evaluate [id=-1, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null, category=null, phones=null], note=null, comment=null]", "hi!");
    var11.addContact("User [id=0, name=null, email=null, password=null, phone=null, city=null]", "Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    br.com.addvisor.model.Agenda var39 = new br.com.addvisor.model.Agenda();
    br.com.addvisor.model.State var40 = new br.com.addvisor.model.State();
    boolean var42 = var40.equals((java.lang.Object)(byte)100);
    var40.setUf("null\nnull\nnull");
    br.com.addvisor.model.Agenda var45 = new br.com.addvisor.model.Agenda();
    java.util.List var46 = var45.getNames();
    br.com.addvisor.model.Agenda var47 = new br.com.addvisor.model.Agenda();
    java.util.List var48 = var47.getNames();
    var45.setNames(var48);
    java.util.List var50 = var45.getNumbers();
    br.com.addvisor.model.Agenda var51 = new br.com.addvisor.model.Agenda();
    java.util.List var52 = var51.getNames();
    java.util.List var53 = var51.getNumbers();
    br.com.addvisor.model.Agenda var54 = new br.com.addvisor.model.Agenda();
    java.util.List var55 = var54.getNames();
    java.util.List var56 = var54.getNumbers();
    var51.setNames(var56);
    br.com.addvisor.model.Agenda var58 = new br.com.addvisor.model.Agenda();
    java.util.List var59 = var58.getNames();
    java.util.List var60 = var58.getNumbers();
    br.com.addvisor.model.Agenda var61 = new br.com.addvisor.model.Agenda();
    java.util.List var62 = var61.getNames();
    java.util.List var63 = var61.getNumbers();
    var58.setNames(var63);
    var51.setNames(var63);
    var45.setNumbers(var63);
    var45.addContact("", "");
    br.com.addvisor.model.Agenda var70 = new br.com.addvisor.model.Agenda();
    java.util.List var71 = var70.getNames();
    br.com.addvisor.model.Agenda var72 = new br.com.addvisor.model.Agenda();
    java.util.List var73 = var72.getNames();
    var70.setNames(var73);
    java.util.List var75 = var70.getNumbers();
    var45.setNames(var75);
    boolean var77 = var40.equals((java.lang.Object)var45);
    java.util.List var78 = var45.getNames();
    var39.setNumbers(var78);
    var11.setNumbers(var78);
    boolean var81 = var3.equals((java.lang.Object)var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "null\nnull\nnull - null"+ "'", var9.equals("null\nnull\nnull - null"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var81 == false);

  }

  public void test495() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test495");


    br.com.addvisor.model.City var6 = new br.com.addvisor.model.City();
    var6.setName("hi!");
    var6.setName("null\nnull\nnull");
    br.com.addvisor.model.Address var11 = new br.com.addvisor.model.Address();
    java.lang.String var12 = var11.getComplement();
    java.lang.String var13 = var11.toString();
    boolean var14 = var6.equals((java.lang.Object)var13);
    br.com.addvisor.model.User var15 = new br.com.addvisor.model.User("hi!", "", "hi!", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    br.com.addvisor.model.Address var16 = new br.com.addvisor.model.Address("null\nnull\nnull", "User [id=null, name=null, email=null, password=null, phone=null, city=null]", var6);
    java.lang.Long var17 = var16.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "null\nnull\nnull"+ "'", var13.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);

  }

  public void test496() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test496");


    br.com.addvisor.model.User var0 = new br.com.addvisor.model.User();
    boolean var2 = var0.equals((java.lang.Object)(-1L));
    java.lang.String var3 = var0.toString();
    br.com.addvisor.model.Evaluate var4 = new br.com.addvisor.model.Evaluate();
    var4.setId((java.lang.Long)10L);
    var4.setId((java.lang.Long)0L);
    br.com.addvisor.model.User var9 = var4.getUser();
    boolean var10 = var0.equals((java.lang.Object)var4);
    java.lang.String var11 = var0.getPassword();
    var0.setId((java.lang.Long)100L);
    br.com.addvisor.model.Address var14 = new br.com.addvisor.model.Address();
    java.lang.String var15 = var14.getComplement();
    java.lang.String var16 = var14.toString();
    boolean var17 = var0.equals((java.lang.Object)var14);
    var0.setPassword("Evaluate [id=0, user=null, service=Service [id=null, name=null, description=null, tags=null, media=null, address=null\nnull\nnull, category=null, phones=null], note=0.0, comment=null]");
    var0.setName("null\nnull\nnull - null");
    br.com.addvisor.model.City var22 = new br.com.addvisor.model.City();
    var22.setName("hi!");
    var22.setName("null\nnull\nnull");
    java.lang.String var27 = var22.getName();
    var0.setCity(var22);
    java.lang.Long var29 = var22.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var3.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "null\nnull\nnull"+ "'", var16.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "null\nnull\nnull"+ "'", var27.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

  public void test497() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test497");


    br.com.addvisor.model.User var2 = new br.com.addvisor.model.User("Evaluate [id=0, user=null, service=null, note=null, comment=User [id=null, name=null, email=null, password=null, phone=null, city=null]]", "User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.Long var3 = var2.getId();
    var2.setId((java.lang.Long)(-1L));
    var2.setId((java.lang.Long)0L);
    java.lang.Long var8 = var2.getId();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + 0L+ "'", var8.equals(0L));

  }

  public void test498() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test498");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    var5.setName("");
    br.com.addvisor.model.Country var9 = new br.com.addvisor.model.Country();
    java.lang.Integer var10 = var9.getId();
    var5.setCountry(var9);
    java.lang.String var12 = var9.getName();
    var9.setId((java.lang.Integer)10);
    var9.setAcronym("null\nnull\nnull\nnull\nnull");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test499() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test499");


    br.com.addvisor.model.Evaluate var0 = new br.com.addvisor.model.Evaluate();
    var0.setId((java.lang.Long)10L);
    br.com.addvisor.model.Service var3 = var0.getService();
    br.com.addvisor.model.Service var4 = new br.com.addvisor.model.Service();
    br.com.addvisor.model.User var5 = new br.com.addvisor.model.User();
    boolean var7 = var5.equals((java.lang.Object)(-1L));
    java.lang.String var8 = var5.toString();
    java.lang.String var9 = var5.getPassword();
    var4.setUser(var5);
    br.com.addvisor.model.Address var11 = var4.getAddress();
    br.com.addvisor.model.Address var12 = new br.com.addvisor.model.Address();
    java.lang.String var13 = var12.getComplement();
    java.lang.String var14 = var12.toString();
    br.com.addvisor.model.City var15 = var12.getCity();
    br.com.addvisor.model.State var16 = new br.com.addvisor.model.State();
    var16.setId((java.lang.Long)1L);
    var16.setName("null\nnull\nnull");
    var16.setName("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    java.lang.String var23 = var16.getUf();
    boolean var24 = var12.equals((java.lang.Object)var16);
    var4.setAddress(var12);
    br.com.addvisor.model.User var26 = new br.com.addvisor.model.User();
    boolean var28 = var26.equals((java.lang.Object)(-1L));
    java.lang.String var29 = var26.toString();
    var26.setPhone("User [id=null, name=null, email=null, password=null, phone=null, city=null]");
    var4.setUser(var26);
    var0.setUser(var26);
    var26.setPhone("Evaluate [id=0, user=null, service=null, note=null, comment=Country [id=null, name=null, acronym=null]]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var8.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "null\nnull\nnull"+ "'", var14.equals("null\nnull\nnull"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "User [id=null, name=null, email=null, password=null, phone=null, city=null]"+ "'", var29.equals("User [id=null, name=null, email=null, password=null, phone=null, city=null]"));

  }

  public void test500() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest3.test500");


    br.com.addvisor.model.State var0 = new br.com.addvisor.model.State();
    boolean var2 = var0.equals((java.lang.Object)(byte)100);
    var0.setUf("null\nnull\nnull");
    br.com.addvisor.model.State var5 = new br.com.addvisor.model.State();
    int var6 = var0.compareTo(var5);
    br.com.addvisor.model.Country var7 = var5.getCountry();
    var5.setUf("Evaluate [id=10, user=null, service=null, note=null, comment=null]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

}
